Index: ../metertwo/src/main/java/com/jw/service/iot4g/IotModuleService.java
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/iot4g/IotModuleService.java b/../metertwo/src/main/java/com/jw/service/iot4g/IotModuleService.java
deleted file mode 100644
--- a/../metertwo/src/main/java/com/jw/service/iot4g/IotModuleService.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ /dev/null	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
@@ -1,12 +0,0 @@
-package com.jw.service.iot4g;
-
-public interface IotModuleService {
-
-    /**
-     * 获取模块当前流量
-     *
-     * @return
-     */
-//    ResponseVo queryIotData(String jsonBody);
-
-}
Index: ../metertwo/src/main/java/com/jw/mapper/IotDbMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/mapper/IotDbMapper.java b/../metertwo/src/main/java/com/jw/mapper/IotDbMapper.java
new file mode 100755
--- /dev/null	(date 1606549337598)
+++ b/../metertwo/src/main/java/com/jw/mapper/IotDbMapper.java	(date 1606549337598)
@@ -0,0 +1,38 @@
+package com.jw.mapper;
+
+import org.apache.ibatis.annotations.Insert;
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Select;
+import org.apache.ibatis.annotations.Update;
+import org.springframework.stereotype.Repository;
+
+@Repository
+@Mapper
+public interface IotDbMapper {
+
+    /**
+     * 查询
+     * @param sql
+     * @return
+     */
+    @Select("${sql}")
+    Long iotSelect(String sql);
+
+    /**
+     * 更新
+     */
+    @Update("$sql")
+    void iotUpdate(String sql);
+
+    /**
+     * 插入
+     */
+    @Insert("${sql}")
+    void iotInsert(String sql);
+
+
+
+
+
+
+}
Index: ../metertwo/src/main/java/com/jw/service/impl/DeviceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.service.impl;\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\r\nimport com.github.pagehelper.PageHelper;\r\nimport com.jw.config.GuuidUtil;\r\nimport com.jw.entity.SysUser;\r\nimport com.jw.entity.SysWorkForm;\r\nimport com.jw.mapper.DeviceHistoryMapper;\r\nimport com.jw.mapper.SysTaskMapper;\r\nimport com.jw.util.CoreConst;\r\nimport com.jw.util.HexConversion;\r\nimport com.jw.util.PageResultVo;\r\nimport com.jw.util.ResultUtil;\r\nimport com.jw.entity.Device;\r\nimport com.jw.entity.vo.base.ResponseVo;\r\nimport com.jw.mapper.DeviceMapper;\r\nimport com.jw.service.DeviceService;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.apache.shiro.SecurityUtils;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n@Component\r\n@Slf4j\r\npublic class DeviceImpl implements DeviceService {\r\n\r\n    @Autowired\r\n    private DeviceMapper deviceMapper;\r\n\r\n    @Autowired\r\n    private UserRoleServiceImpl userRoleService;\r\n\r\n    @Autowired\r\n    private SysTaskMapper taskMapper;\r\n\r\n    @Autowired\r\n    private SysTaskServiceImpl taskService;\r\n\r\n    @Autowired\r\n    private DeviceHistoryMapper deviceHistoryMapper;\r\n\r\n\r\n    /**\r\n     * 实例化分页\r\n     */\r\n    PageResultVo pageResultVo = new PageResultVo();\r\n\r\n    /**\r\n     * 实例化模糊查询\r\n     */\r\n    QueryWrapper<Device> queryWrapper = null;\r\n\r\n    Device device = null;\r\n    JSONObject jsonObject = null;\r\n    Map<Integer, String> querryMap = null;\r\n    int countRow = 0;\r\n    List<HashMap<String, Object>> list;\r\n\r\n\r\n    /**\r\n     * 查询设备库所有数据\r\n     *\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryAllDevice(Integer pageNum, Integer pageSize) {\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        List<Device> list = deviceMapper.selectList(null);\r\n        countRow = deviceMapper.querryDeviceCountRow();\r\n        pageResultVo.setCount(countRow);\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n    }\r\n\r\n    /**\r\n     * 模糊查询\r\n     *\r\n     * @param jsonObject\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryBlurryDevice(JSONObject jsonObject) throws JSONException {\r\n\r\n        Integer pageNum = jsonObject.getInt(\"page\");\r\n        Integer pageSize = jsonObject.getInt(\"limit\");\r\n        String data = jsonObject.getString(\"queryData\");\r\n        String[] dt1 = data.split(\",\");\r\n        String querry = \"\";\r\n        HashMap hashMap = new HashMap();\r\n\r\n        String[] pt1 = {\"InstallSite\", \"installationPlace\", \"Name\", \"DeviceId\", \"Flow\", \"LFCompany\", \"LFDate\"};\r\n        String[] pt2 = {\"like\", \">\", \"=\", \"<\", \">=\", \"<=\"};\r\n        String[] pt3 = {\"and\", \"or\"};\r\n        hashMap.put(0, dt1);\r\n        hashMap.put(1, pt1);\r\n        hashMap.put(2, pt2);\r\n        hashMap.put(3, pt3);\r\n\r\n        try {\r\n            querry = HexConversion.sqlQuerry(hashMap);\r\n            String sql = \"select COUNT(1) OVER() AS totalCount,ROW_NUMBER() OVER(ORDER BY deviceID desc) as id,DeviceID as deviceId,IotModuleID as iotModuleId,Name as name,PowerSource_Voltage as powerSourceVoltage,\\n\" +\r\n                    \"PowerSource_frequency as powerSourcefrequency,\\n\" +\r\n                    \"ElectricCurrent as electricCurrent,Flow as flow,Lift as lift,Weight as weight,Power as power,InsulateGrade as insulateGrade,\\n\" +\r\n                    \"RotateSpeed as rotateSpeed,Caliber as caliber,LFDate as lfdate,LFCompany as lfcompany,InstallSite as installSite,PipelineOD as pipelineOD,\\n\" +\r\n                    \"PipelineThickness as pipelineThickness,PipelineTexture as pipelineTexture,installationPlace,installLine from FlowMeterUDB.dbo.[DeviceTable]\" + querry;\r\n\r\n            PageHelper.startPage(pageNum, pageSize);\r\n            List<HashMap<String, Object>> list = deviceMapper.queryBlurry(sql);\r\n            if (!list.get(0).isEmpty()) {\r\n                pageResultVo.setCount((Integer) list.get(0).get(\"totalCount\"));\r\n            } else {\r\n                pageResultVo.setCount(0);\r\n            }\r\n            return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n        } catch (ArrayIndexOutOfBoundsException e) {\r\n            log.error(\"搜索越界异常!\");\r\n            e.printStackTrace();\r\n        } catch (IndexOutOfBoundsException e) {\r\n            log.error(\"搜索越界异常!\");\r\n            e.printStackTrace();\r\n        } catch (Exception e) {\r\n            log.error(\"搜索语法错误!\");\r\n            e.printStackTrace();\r\n        }\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, -1, \"\");\r\n    }\r\n\r\n    /**\r\n     * 管理设备\r\n     *\r\n     * @param jsonBody\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo manageDevice(String jsonBody) throws JSONException {\r\n        try {\r\n\r\n            jsonObject = new JSONObject(jsonBody);\r\n            com.alibaba.fastjson.JSONObject jsonObject1=new com.alibaba.fastjson.JSONObject();\r\n            jsonObject1=jsonObject1.parseObject(jsonBody);\r\n            device = new Device();\r\n            device= JSON.toJavaObject(jsonObject1,Device.class);\r\n\r\n//            device.setDeviceId(jsonObject.get(\"deviceId\").toString());\r\n//            device.setIotModuleID(jsonObject.get(\"iotModuleID\").toString());\r\n//            device.setName(jsonObject.get(\"name\").toString());\r\n//            device.setPowerSourceVoltage(Float.valueOf(jsonObject.get(\"powerSourceVoltage\").toString()));\r\n//            device.setPowerSourcefrequency(Float.valueOf(jsonObject.get(\"powerSourcefrequency\").toString()));\r\n//            device.setElectricCurrent(Float.valueOf(jsonObject.get(\"electricCurrent\").toString()));\r\n//            device.setFlow(Float.valueOf(jsonObject.get(\"flow\").toString()));\r\n//            device.setLift(Float.valueOf(jsonObject.get(\"lift\").toString()));\r\n//            device.setWeight(Float.valueOf(jsonObject.get(\"weight\").toString()));\r\n//            device.setPower(Float.valueOf(jsonObject.get(\"power\").toString()));\r\n//            device.setInsulateGrade(jsonObject.get(\"insulateGrade\").toString());\r\n//            device.setRotateSpeed(Float.valueOf(jsonObject.get(\"rotateSpeed\").toString()));\r\n//            device.setCaliber(Float.valueOf(jsonObject.get(\"caliber\").toString()));\r\n//            device.setLfdate(jsonObject.get(\"lFDate\").toString());\r\n//            device.setLFCompany(jsonObject.get(\"lfcompany\").toString());\r\n//            device.setInstallSite(jsonObject.get(\"installSite\").toString());\r\n//            device.setInstallLine(jsonObject.get(\"installLine\").toString());\r\n//            device.setInstallationPlace(jsonObject.get(\"installationPlace\").toString());\r\n//            device.setPipelineOD(Float.valueOf(jsonObject.get(\"pipelineOD\").toString()));\r\n//            device.setPipelineThickness(Float.valueOf(jsonObject.get(\"pipelineThickness\").toString()));\r\n//            device.setPipelineTexture(jsonObject.get(\"pipelineTexture\").toString());\r\n\r\n        } catch (NumberFormatException e) {\r\n            log.info(\"存在空值!\");\r\n            return ResultUtil.success(CoreConst.SUCESS_CODE, \"操作失败!\");\r\n        }catch (Exception e) {\r\n            log.error(\"添加设备错误!\");\r\n        }\r\n        finally {\r\n            /**\r\n             * 添加设备\r\n             */\r\n            if (\"add\".equals(jsonObject.get(\"opt\").toString())) {\r\n                SysUser user = ((SysUser) SecurityUtils.getSubject().getPrincipal());\r\n                String roleId = userRoleService.queryRoleByUserId(user.getUserId()).get(0).getRoleId().toString();\r\n\r\n                if (roleId.equals(\"1\")) {\r\n\r\n                    HashMap map = new HashMap();\r\n                    map.put(\"check\", \"DeviceID|\" + device.getDeviceId());\r\n                    JSONObject jsObj = new JSONObject(map);\r\n                    ResponseVo checkForm = checkForm(jsObj);\r\n                    jsObj = new JSONObject(checkForm.getData().toString());\r\n                    String result = jsObj.get(\"existence\").toString();\r\n                    if (!\"1\".equals(result)) {\r\n                        device.setId(null);\r\n                        deviceMapper.insert(device);\r\n                        return ResultUtil.success(CoreConst.SUCESS_CODE, \"操作成功!\");\r\n                    } else {\r\n                        return ResultUtil.error(CoreConst.FAIL_CODE_401, \"设备id重复，拒绝创建!\");\r\n                    }\r\n                } else {\r\n                    return ResultUtil.error(CoreConst.FAIL_CODE_401, \"无权限!\");\r\n                }\r\n            }\r\n            /**\r\n             * 编辑设备\r\n             */\r\n            if (\"edit\".equals(jsonObject.get(\"opt\").toString())) {\r\n                queryWrapper = new QueryWrapper<>();\r\n                queryWrapper.eq(\"ID\", jsonObject.get(\"id\").toString());\r\n                deviceMapper.update(device, queryWrapper);\r\n            }\r\n        }\r\n        return ResultUtil.success(CoreConst.SUCESS_CODE, \"操作失败!\");\r\n    }\r\n\r\n    /**\r\n     * 删除设备\r\n     *\r\n     * @param jsonBody\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo delDevice(String jsonBody) throws JSONException {\r\n\r\n        // 判断管理员角色,且判断该条数据是否已经审核,已审核则删除，未审核则警告未授权,请按流程操作!\r\n\r\n        jsonObject = new JSONObject(jsonBody);\r\n        SysUser user = ((SysUser) SecurityUtils.getSubject().getPrincipal());\r\n        String deviceId = jsonObject.get(\"deviceId\").toString();\r\n        String operatingData = jsonObject.get(\"operatingData\").toString();\r\n        String desc = jsonObject.get(\"desc\").toString();\r\n\r\n        if (jsonObject.get(\"opt\").toString().equals(\"2\")) {\r\n\r\n            SysWorkForm task = new SysWorkForm();\r\n            task.setTaskId(GuuidUtil.nextId());\r\n            task.setTaskTitle(\"delete\");\r\n            task.setTaskType(\"2\");\r\n            task.setDeviceId(deviceId);\r\n            task.setOperatingData(operatingData);\r\n            task.setCreateBy(user.getUserName());\r\n            task.setCreateTime(GuuidUtil.getNowData());\r\n            task.setDescribe(desc); // 操作理由\r\n            task.setTaskStatus(\"2\");\r\n\r\n            taskMapper.insertByNewTask(task);\r\n            return ResultUtil.success(CoreConst.SUCESS_CODE, \"操作成功,已提交至待审核!\");\r\n        }\r\n        return ResultUtil.error(CoreConst.FAIL_CODE_401, \"操作失败,请联系管理员!\");\r\n    }\r\n\r\n    /**\r\n     * 查询实时数据\r\n     *\r\n     * @param pageNum\r\n     * @param pageSize\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryRealTime(Integer pageNum, Integer pageSize) {\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        list = deviceMapper.querryRealTimeFlowMeter();\r\n\r\n        pageResultVo.setCount((Integer) list.get(0).get(\"totalCount\"));\r\n        return ResultUtil.table(CoreConst.SUCESS_CODE, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n\r\n    }\r\n\r\n    /**\r\n     * form check\r\n     *\r\n     * @param jsonObj\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo checkForm(JSONObject jsonObj) throws JSONException {\r\n\r\n        String field, value, sql;\r\n\r\n        try {\r\n            String[] obj = String.valueOf(jsonObj.get(\"check\")).split(\"\\\\|\");\r\n            field = HexConversion.checkForm(obj[0]);\r\n            value = obj[1];\r\n\r\n            sql = \"select case when exists(select \" + field + \" from FlowMeterUDB.dbo.[DeviceTable] where \" + field + \"='\" + value + \"') then 1 else 0 end as existence\";\r\n\r\n            list = deviceMapper.queryBlurry(sql);\r\n            pageResultVo.setCount(1);\r\n            return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list.get(0));\r\n\r\n        } catch (Exception e) {\r\n            log.info(\"表单校验为空!\");\r\n        }\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), \"\");\r\n    }\r\n\r\n    @Override\r\n    public ResponseVo queryBySite(String jsonBody) {\r\n\r\n        com.alibaba.fastjson.JSONObject jsonObject= (com.alibaba.fastjson.JSONObject) JSON.parse(jsonBody);\r\n        String installSite= jsonObject.getString(\"installSite\");\r\n        Integer pageNum= Integer.valueOf(jsonObject.getString(\"page\"));\r\n        Integer pageSize= Integer.valueOf(jsonObject.getString(\"limit\"));\r\n\r\n        String sql=\"select COUNT(1) OVER() AS totalCount,ROW_NUMBER() OVER(ORDER BY deviceID desc) as id,DeviceID as deviceId,IotModuleID as iotModuleId,Name as name,PowerSource_Voltage as powerSourceVoltage,\\n\" +\r\n                \"    PowerSource_frequency as powerSourcefrequency,\\n\" +\r\n                \"    ElectricCurrent as electricCurrent,Flow as flow,Lift as lift,Weight as weight,Power as power,InsulateGrade as insulateGrade,\\n\" +\r\n                \"    RotateSpeed as rotateSpeed,Caliber as caliber,LFDate as lfdate,LFCompany as lfcompany,InstallSite as installSite,PipelineOD as pipelineOD,\\n\" +\r\n                \"    PipelineThickness as pipelineThickness,PipelineTexture as pipelineTexture,installationPlace,installLine from FlowMeterUDB.dbo.[DeviceTable] where InstallSite like N'%\"+installSite+\"%'\";\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        List<HashMap<String,Object>> list = deviceMapper.queryBlurry(sql);\r\n\r\n        if (!list.isEmpty()) {\r\n            pageResultVo.setCount((Integer) list.get(0).get(\"totalCount\"));\r\n        } else {\r\n            pageResultVo.setCount(0);\r\n        }\r\n        return ResultUtil.table(CoreConst.SUCESS_CODE, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/impl/DeviceImpl.java b/../metertwo/src/main/java/com/jw/service/impl/DeviceImpl.java
--- a/../metertwo/src/main/java/com/jw/service/impl/DeviceImpl.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/service/impl/DeviceImpl.java	(date 1601175697340)
@@ -95,7 +95,7 @@
         String querry = "";
         HashMap hashMap = new HashMap();
 
-        String[] pt1 = {"InstallSite", "installationPlace", "Name", "DeviceId", "Flow", "LFCompany", "LFDate"};
+        String[] pt1 = {"InstallSite", "installationPlace", "Name", "DeviceId","InspectionPointID", "Flow", "LFCompany", "LFDate"};
         String[] pt2 = {"like", ">", "=", "<", ">=", "<="};
         String[] pt3 = {"and", "or"};
         hashMap.put(0, dt1);
@@ -105,7 +105,7 @@
 
         try {
             querry = HexConversion.sqlQuerry(hashMap);
-            String sql = "select COUNT(1) OVER() AS totalCount,ROW_NUMBER() OVER(ORDER BY deviceID desc) as id,DeviceID as deviceId,IotModuleID as iotModuleId,Name as name,PowerSource_Voltage as powerSourceVoltage,\n" +
+            String sql = "select COUNT(1) OVER() AS totalCount,ROW_NUMBER() OVER(ORDER BY deviceID desc) as id,DeviceID as deviceId,IotModuleID as iotModuleId,InspectionPointID as inspectionPointId,Name as name,PowerSource_Voltage as powerSourceVoltage,\n" +
                     "PowerSource_frequency as powerSourcefrequency,\n" +
                     "ElectricCurrent as electricCurrent,Flow as flow,Lift as lift,Weight as weight,Power as power,InsulateGrade as insulateGrade,\n" +
                     "RotateSpeed as rotateSpeed,Caliber as caliber,LFDate as lfdate,LFCompany as lfcompany,InstallSite as installSite,PipelineOD as pipelineOD,\n" +
@@ -210,6 +210,7 @@
                 queryWrapper = new QueryWrapper<>();
                 queryWrapper.eq("ID", jsonObject.get("id").toString());
                 deviceMapper.update(device, queryWrapper);
+                return ResultUtil.success(CoreConst.SUCESS_CODE, "操作成功!");
             }
         }
         return ResultUtil.success(CoreConst.SUCESS_CODE, "操作失败!");
Index: ../metertwo/src/main/java/com/jw/service/impl/DeviceHistoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.service.impl;\r\n\r\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\r\nimport com.github.pagehelper.PageHelper;\r\nimport com.jw.common.constant.CommonConstant;\r\nimport com.jw.util.*;\r\nimport com.jw.entity.Device;\r\nimport com.jw.entity.DeviceHistory;\r\nimport com.jw.entity.vo.base.ResponseVo;\r\nimport com.jw.mapper.DeviceHistoryMapper;\r\nimport com.jw.mapper.DeviceMapper;\r\nimport com.jw.service.DeviceHistoryService;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Lazy;\r\nimport org.springframework.data.redis.core.RedisTemplate;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n@Slf4j\r\n@Component\r\npublic class DeviceHistoryImpl implements DeviceHistoryService {\r\n\r\n    @Autowired\r\n    private DeviceHistoryMapper deviceHistoryMapper;\r\n\r\n    @Autowired\r\n    private DeviceMapper deviceMapper;\r\n\r\n\r\n    JSONObject jsonObject = null;\r\n\r\n    /**\r\n     * 实例化分页\r\n     */\r\n    PageResultVo pageResultVo = new PageResultVo();\r\n\r\n    /**\r\n     * 实例化模糊查询\r\n     */\r\n    QueryWrapper<DeviceHistory> deviceHistoryWrapper = null;\r\n    QueryWrapper<Device> deviceWrapper = null;\r\n    List<String> data = null;\r\n    DeviceHistory deviceHistory;\r\n    Device device = new Device();\r\n    int i = 0, j = 0;\r\n    int countRow = 0;\r\n    String startTime = null;\r\n    String endTime = null;\r\n\r\n    HexConversion hexConversion = new HexConversion();\r\n    List<HashMap<String, Object>> dHistoryId, dDeviceId, list;\r\n\r\n\r\n    /**\r\n     * 管理历史\r\n     *\r\n     * @param jsonBody\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo manageHistory(String jsonBody) throws JSONException {\r\n\r\n        jsonObject = new JSONObject(jsonBody);\r\n        deviceHistory = new DeviceHistory();\r\n\r\n        deviceHistory.setDeviceId((String) jsonObject.get(\"deviceId\")); // 设备id\r\n        deviceHistory.setInstantFlow(Float.valueOf(jsonObject.get(\"instantFlow\").toString())); // 瞬时流量\r\n        deviceHistory.setAccumulatedFlow(Float.valueOf(jsonObject.get(\"accumulatedFlow\").toString())); //净积累流量\r\n        deviceHistory.setInstantFlowRate(Float.valueOf(jsonObject.get(\"instantFlowRate\").toString())); //瞬时流速\r\n        deviceHistory.setPositiveAccumulatedFlow(Float.valueOf(jsonObject.get(\"positiveAccumulatedFlow\").toString())); //正累计流量\r\n        deviceHistory.setNegativeAccumulatedFlow(Float.valueOf(jsonObject.get(\"negativeAccumulatedFlow\").toString())); //负累计流量\r\n//        deviceHistory.setMeasureDate((Date) jsonObject.get(\"measureDate\")); //测量时间\r\n        deviceHistory.setTodayPositiveAccumulatedFlow(Float.valueOf(jsonObject.get(\"todayPositiveAccumulatedFlow\").toString())); //今日正积累流量\r\n        deviceHistory.setFlowArea(Float.valueOf(jsonObject.get(\"flowArea\").toString())); //流体截面积\r\n        /**\r\n         * 添加历史\r\n         */\r\n        if (\"add\".equals(jsonObject.get(\"opt\").toString())) {\r\n            device.setId(null);\r\n            deviceMapper.insert(device);\r\n        }\r\n        /* *//**\r\n         * 编辑历史\r\n         *//*\r\n        if (\"edit\".equals(jsonObject.get(\"opt\").toString())) {\r\n            queryWrapper = new QueryWrapper<>();\r\n            queryWrapper.eq(\"ID\", jsonObject.get(\"id\").toString());\r\n            deviceMapper.update(device, queryWrapper);\r\n        }*/\r\n\r\n        return ResultUtil.success(CoreConst.SUCESS_CODE, \"成功!\");\r\n    }\r\n\r\n    /**\r\n     * 查询历史库所有数据\r\n     *\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryAllDeviceHistory(Integer pageNum, Integer pageSize) {\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        List<DeviceHistory> list = deviceHistoryMapper.selectList(null);\r\n\r\n        countRow = deviceHistoryMapper.querryHistoryCountRow();\r\n        pageResultVo.setCount(countRow);\r\n\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n    }\r\n\r\n    /**\r\n     * 模糊查询\r\n     *\r\n     * @param jsonObject\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryBlurryDevice(JSONObject jsonObject) throws JSONException {\r\n\r\n        Integer pageNum = jsonObject.getInt(\"page\");\r\n        Integer pageSize = jsonObject.getInt(\"limit\");\r\n        String data = jsonObject.getString(\"queryData\");\r\n        String[] dt1 = data.split(\",\");\r\n        String querry = \"\";\r\n        HashMap hashMap = new HashMap();\r\n\r\n        String[] pt1 = {\"InstantFlow\", \"InstantFlowRate\", \"PositiveAccumulatedFlow\", \"DeviceId\", \"AccumulatedFlow\",\r\n                \"NegativeAccumulatedFlow\", \"TodayPositiveAccumulatedFlow\", \"FlowArea\", \"iotErrorCode\", \"MeasureDate\"};\r\n        String[] pt2 = {\"like\", \">\", \"=\", \"<\", \">=\", \"<=\"};\r\n        String[] pt3 = {\"and\", \"or\"};\r\n        hashMap.put(0, dt1);\r\n        hashMap.put(1, pt1);\r\n        hashMap.put(2, pt2);\r\n        hashMap.put(3, pt3);\r\n\r\n        try {\r\n            querry = HexConversion.sqlQuerry(hashMap);\r\n            String sql = \"select COUNT(1) OVER() AS totalCount,ROW_NUMBER() OVER(ORDER BY deviceID desc) as id,\" +\r\n                    \"InstantFlow as instantFlow,InstantFlowRate as instantFlowRate,PositiveAccumulatedFlow as positiveAccumulatedFlow,\" +\r\n                    \"DeviceId as deviceId,AccumulatedFlow as accumulatedFlow,\\n\" +\r\n                    \"       NegativeAccumulatedFlow as negativeAccumulatedFlow,TodayPositiveAccumulatedFlow as todayPositiveAccumulatedFlow,\" +\r\n                    \"FlowArea as flowArea,iotErrorCode,MeasureDate as measureDate from FlowMeterUDB.dbo.[DeviceHistory]\" + querry;\r\n\r\n            PageHelper.startPage(pageNum, pageSize);\r\n            List<HashMap<String, Object>> list = deviceMapper.queryBlurry(sql);\r\n            if (!list.get(0).isEmpty()) {\r\n                pageResultVo.setCount((Integer) list.get(0).get(\"totalCount\"));\r\n            } else {\r\n                pageResultVo.setCount(0);\r\n            }\r\n            return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n        } catch (ArrayIndexOutOfBoundsException e) {\r\n            log.error(\"搜索越界异常!\");\r\n            e.printStackTrace();\r\n        } catch (IndexOutOfBoundsException e) {\r\n            log.error(\"搜索越界异常!\");\r\n            e.printStackTrace();\r\n        } catch (Exception e) {\r\n            log.error(\"搜索语法错误!\");\r\n            e.printStackTrace();\r\n        }\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, -1, \"\");\r\n    }\r\n\r\n    /**\r\n     * 查询设备id，获得设备流量和时间信息\r\n     *\r\n     * @param queryMap\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryTimeAndTrafficByDeviceId(Map<Integer, String> queryMap) {\r\n\r\n        /**\r\n         * 添加瞬时流量、时间、额定流量、回归线\r\n         */\r\n        try {\r\n            deviceHistoryWrapper = new QueryWrapper<>();\r\n            deviceHistoryWrapper.select().eq(\"DeviceId\", queryMap.get(0));\r\n            List<DeviceHistory> list = deviceHistoryMapper.selectList(deviceHistoryWrapper);\r\n            deviceWrapper = new QueryWrapper<>();\r\n            deviceWrapper.select().eq(\"DeviceId\", queryMap.get(0));\r\n            List<Device> deviceList = deviceMapper.selectList(deviceWrapper);\r\n            if (!deviceList.isEmpty()) {\r\n                device = deviceList.get(0);\r\n            } else {\r\n                device.setFlow(0f);\r\n            }\r\n            data = new LinkedList<>();\r\n            for (i = 0; i < list.size(); i++) {\r\n                deviceHistory = list.get(i);\r\n                /**\r\n                 * 添加瞬时流量、时间、额定流量、回归线\r\n                 */\r\n                data.add(deviceHistory.getInstantFlow().toString() + \"|\" + deviceHistory.getMeasureDate() + \"|\" + device.getFlow());\r\n            }\r\n\r\n            countRow = deviceHistoryMapper.querryHistoryCountRow();\r\n            pageResultVo.setCount(countRow);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), data);\r\n    }\r\n\r\n    /**\r\n     * 实时更新流量状态\r\n     *\r\n     * @param deviceId\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo updateTimeAndTrafficByDeviceId(String deviceId) {\r\n\r\n        /**\r\n         * 实时更新流量状态\r\n         */\r\n        try {\r\n\r\n            List<HashMap<String, Object>> list = deviceHistoryMapper.updateTimeAndTrafficByDeviceId(deviceId);\r\n            data = new LinkedList<>();\r\n\r\n            if (!list.isEmpty()) {\r\n                data.add(list.get(0).get(\"InstantFlow\") + \"|\" + list.get(0).get(\"measureDate\") + \"|\" + list.get(0).get(\"Flow\"));\r\n            } else {\r\n                data.add(0, \"null\");\r\n            }\r\n\r\n            pageResultVo.setCount(1);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), data);\r\n    }\r\n\r\n    /**\r\n     * 查询设备库所有数据\r\n     *\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryDeviceAndHistory(Integer pageNum, Integer pageSize) {\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        List<HashMap<String, Object>> list = deviceHistoryMapper.queryIndex();\r\n        countRow = deviceHistoryMapper.querryHistoryCountRow();\r\n        pageResultVo.setCount(countRow);\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n    }\r\n\r\n    /**\r\n     * 查询设备库所有数据\r\n     *\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryHistoryById(Map<Integer, String> map) {\r\n        Integer pageNum = Integer.valueOf(map.get(0));\r\n        Integer pageSize = Integer.valueOf(map.get(1));\r\n        Integer deviceId = Integer.valueOf(map.get(2));\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        list = deviceHistoryMapper.queryAllHistoryById(deviceId);\r\n        if (!list.isEmpty()) {\r\n            pageResultVo.setCount((Integer) list.get(0).get(\"totalCount\"));\r\n        } else {\r\n            pageResultVo.setCount(0);\r\n        }\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n    }\r\n\r\n    /**\r\n     * 刷新数据\r\n     *\r\n     * @return\r\n     */\r\n    public void querryRealTimeData() {\r\n        int i = 0;\r\n        try {\r\n            deviceHistoryMapper.dropTempTable();\r\n            dHistoryId = deviceHistoryMapper.queryDhIndex();\r\n            dDeviceId = deviceMapper.queryDdIndex();\r\n\r\n            String[] arrayId = hexConversion.convertDbId(dDeviceId, dHistoryId);\r\n\r\n            for (i = 0; i < dDeviceId.size(); i++) {\r\n                deviceMapper.queryAllDevice(arrayId[i]); // 根据id找所有设备\r\n                deviceMapper.queryAllDeviceByMaxTime(); // 找出这台设备的最新一条数据\r\n\r\n                deviceHistoryMapper.queryAllHistory(arrayId[i]);\r\n                deviceHistoryMapper.queryAllHistoryByMaxTime();\r\n                if (i == 0) {\r\n                    deviceHistoryMapper.storeHistoryByMaxTime();\r\n                } else {\r\n                    deviceHistoryMapper.insertHistoryByMaxTime();\r\n                }\r\n                deviceHistoryMapper.dropTempTablea();\r\n            }\r\n        } catch (IndexOutOfBoundsException e) {\r\n            log.info(\"实时数据索引越界异常,设备编号不对应或模块未上传数据!\");\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 查找固定式\r\n     *\r\n     * @param pageNum\r\n     * @param pageSize\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryRealTimeDataFixed(Integer pageNum, Integer pageSize) {\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        List<HashMap<String, Object>> list = deviceHistoryMapper.queryRealTimeMeterFixed();\r\n\r\n        if (!list.isEmpty()) {\r\n            pageResultVo.setCount((Integer) list.get(0).get(\"totalCount\"));\r\n        } else {\r\n            pageResultVo.setCount(0);\r\n        }\r\n        return ResultUtil.table(CoreConst.SUCESS_CODE, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n    }\r\n\r\n    /**\r\n     * 查找便携式\r\n     *\r\n     * @param pageNum\r\n     * @param pageSize\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryRealTimeDataPortable(Integer pageNum, Integer pageSize) {\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        List<HashMap<String, Object>> list = deviceHistoryMapper.queryRealTimeMeterPortable();\r\n\r\n        if (!list.isEmpty()) {\r\n            pageResultVo.setCount((Integer) list.get(0).get(\"totalCount\"));\r\n        } else {\r\n            pageResultVo.setCount(0);\r\n        }\r\n        return ResultUtil.table(CoreConst.SUCESS_CODE, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/impl/DeviceHistoryImpl.java b/../metertwo/src/main/java/com/jw/service/impl/DeviceHistoryImpl.java
--- a/../metertwo/src/main/java/com/jw/service/impl/DeviceHistoryImpl.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/service/impl/DeviceHistoryImpl.java	(date 1606543371717)
@@ -2,7 +2,7 @@
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.github.pagehelper.PageHelper;
-import com.jw.common.constant.CommonConstant;
+import com.jw.entity.iot4g.ThreadStatus;
 import com.jw.util.*;
 import com.jw.entity.Device;
 import com.jw.entity.DeviceHistory;
@@ -14,12 +14,9 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.context.annotation.Lazy;
-import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.stereotype.Component;
 
 import java.util.*;
-import java.util.concurrent.TimeUnit;
 
 
 @Slf4j
@@ -54,6 +51,7 @@
     String endTime = null;
 
     HexConversion hexConversion = new HexConversion();
+
     List<HashMap<String, Object>> dHistoryId, dDeviceId, list;
 
 
Index: ../metertwo/src/main/java/com/jw/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.service.impl;\r\n\r\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\r\nimport com.github.pagehelper.PageHelper;\r\n\r\nimport com.jw.config.GuuidUtil;\r\nimport com.jw.entity.SysUser;\r\nimport com.jw.entity.UserRole;\r\nimport com.jw.entity.vo.base.ResponseVo;\r\nimport com.jw.mapper.SysUserMapper;\r\nimport com.jw.mapper.UserRoleMapper;\r\nimport com.jw.service.UserService;\r\nimport com.jw.util.*;\r\nimport lombok.SneakyThrows;\r\nimport org.apache.shiro.SecurityUtils;\r\nimport org.apache.shiro.cache.Cache;\r\nimport org.apache.shiro.session.Session;\r\nimport org.apache.shiro.session.mgt.DefaultSessionKey;\r\nimport org.apache.shiro.session.mgt.SessionManager;\r\nimport org.crazycake.shiro.RedisCacheManager;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Lazy;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport org.springframework.util.Assert;\r\nimport org.springframework.web.context.request.RequestContextHolder;\r\nimport org.springframework.web.context.request.ServletRequestAttributes;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.util.Deque;\r\nimport java.util.List;\r\n\r\nimport static com.jw.util.PasswordUtil.*;\r\n\r\n@Component\r\npublic class UserServiceImpl implements UserService {\r\n\r\n    @Autowired\r\n    private SysUserMapper sysUserMapper;\r\n\r\n    @Lazy\r\n    @Autowired\r\n    private UserServiceImpl userService;\r\n\r\n    @Autowired\r\n    private UserRoleServiceImpl userRoleService;\r\n\r\n    @Autowired\r\n    private UserRoleMapper userRoleMapper;\r\n\r\n\r\n    /**\r\n     * 实例化分页\r\n     */\r\n    PageResultVo pageResultVo = new PageResultVo();\r\n\r\n    /**\r\n     * 实例化模糊查询\r\n     */\r\n    QueryWrapper<SysUser> queryWrapper = null;\r\n\r\n    SysUser user = null;\r\n    JSONObject jsonObject = null;\r\n    Date date=null;\r\n\r\n    SessionManager sessionManager;\r\n\r\n    RedisCacheManager redisCacheManager;\r\n    HttpServletRequest request = null;\r\n\r\n    /**\r\n     * 查询所有用户\r\n     * @param pageNum\r\n     * @param pageSize\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo querryAllUser(Integer pageNum, Integer pageSize) {\r\n\r\n        PageHelper.startPage(pageNum, pageSize);\r\n        List<SysUser> list = sysUserMapper.selectList(null);\r\n        pageResultVo.setCount(list.size());// 总页数\r\n        return ResultUtil.table(0, CoreConst.SUCESS_SUCESS, pageResultVo.getCount(), list);\r\n    }\r\n\r\n    /**\r\n     * 用户编辑添加\r\n     *\r\n     * @param jsonBody\r\n     * @return\r\n     */\r\n    @SneakyThrows\r\n    @Override\r\n    public ResponseVo manageUser(String jsonBody) throws JSONException {\r\n\r\n        jsonObject = new JSONObject(jsonBody);\r\n        SysUser user = new SysUser();\r\n        UserRole userRole=new UserRole();\r\n        request=((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\r\n\r\n        SysUser users = ((SysUser) SecurityUtils.getSubject().getPrincipal());\r\n        String roleId = userRoleService.queryRoleByUserId(users.getUserId()).get(0).getRoleId().toString();\r\n\r\n        String oldPassword=jsonObject.get(\"password\").toString();\r\n        userRole.setRoleId((String) jsonObject.get(\"userRole\"));\r\n//        user.setDeptId(jsonObject.get(\"deptId\").toString());\r\n        user.setUserName(jsonObject.get(\"userName\").toString());\r\n        user.setNickName(jsonObject.get(\"nickname\").toString());\r\n        user.setEmail(jsonObject.get(\"email\").toString());\r\n        user.setPhone(jsonObject.get(\"phone\").toString());\r\n        user.setSex(jsonObject.get(\"sex\").toString());\r\n//        user.setStatus(jsonObject.get(\"status\").toString());\r\n        user.setAvatar(\"/img\");\r\n        user.setSalt(bytesToHexString(getSalt()).substring(0,8));\r\n        user.setDelFlag(\"0\");\r\n        user.setLoginIp(IpUtil.getIpAddr(request));\r\n        user.setLoginDate(GuuidUtil.getNowData());\r\n        user.setCreateBy(users.getUserName());\r\n        user.setCreateTime(GuuidUtil.getNowData());\r\n        user.setUpdateBy(users.getUserName());\r\n        user.setUpdateTime(GuuidUtil.getNowData());\r\n        user.setRemark(\"\");\r\n        user.setUserType(userRole.getRoleId());\r\n        user.setPassword(encrypt(user.getUserName(),oldPassword,user.getSalt()));\r\n\r\n        /**\r\n         * 添加用户 (只允许管理员用户操作)\r\n         */\r\n        if (\"add\".equals(jsonObject.get(\"opt\").toString())) {\r\n            if (\"1\".equals(roleId)) {\r\n                user.setId(null);\r\n                user.setUuid(GuuidUtil.nextId());\r\n                user.setUserId(user.getUuid());\r\n                userRole.setUserId(String.valueOf(user.getUserId()));\r\n                sysUserMapper.insert(user);\r\n                userRoleMapper.insert(userRole);\r\n                return ResultUtil.success(CoreConst.SUCESS_CODE, \"操作成功!\");\r\n            }else {\r\n                return ResultUtil.error(CoreConst.FAIL_CODE_401, \"无权限操作!\");\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 编辑用户 (只允许管理员或本人操作)\r\n         */\r\n        if (\"edit\".equals(jsonObject.get(\"opt\").toString())) {\r\n            if (roleId.equals(\"1\") || users.getUserName().equals(user.getUserName())) {\r\n                queryWrapper = new QueryWrapper<>();\r\n                queryWrapper.eq(\"id\", jsonObject.get(\"id\").toString());\r\n                sysUserMapper.update(user, queryWrapper);\r\n                return ResultUtil.success(CoreConst.SUCESS_CODE, \"操作成功!\");\r\n            }else {\r\n                return ResultUtil.error(CoreConst.FAIL_CODE_401, \"无权限操作!\");\r\n            }\r\n        }\r\n        return ResultUtil.success(CoreConst.SUCESS_CODE, \"操作失败!\");\r\n    }\r\n\r\n    /**\r\n     * 登录通过用户名查找用户实体\r\n     * @param username\r\n     * @return\r\n     */\r\n    @Override\r\n    public SysUser selectByUsername(String username) {\r\n        queryWrapper = new QueryWrapper<>();\r\n        queryWrapper.eq(\"userName\", username);\r\n        List<SysUser> list = sysUserMapper.selectList(queryWrapper);\r\n        if (!list.isEmpty()) {\r\n            user=list.get(0);\r\n        }\r\n        return list.get(0);\r\n    }\r\n\r\n    @Override\r\n    public void updateLastLoginTime(SysUser user) {\r\n        Assert.notNull(user, \"param: user is null\");\r\n//        user.setLoginDate(new Date().getTime());\r\n        sysUserMapper.updateById(user);\r\n    }\r\n\r\n    @Override\r\n    public int register(SysUser userForm) {\r\n        sysUserMapper.insert(userForm);\r\n        return 0;\r\n    }\r\n\r\n    private Session getSessionBysessionId(Serializable sessionId) {\r\n        return sessionManager.getSession(new DefaultSessionKey(sessionId));\r\n    }\r\n\r\n    @Override\r\n    public void kickout(Serializable sessionId, String username) {\r\n        getSessionBysessionId(sessionId).setAttribute(\"kickout\", true);\r\n        //读取缓存,找到并从队列中移除\r\n        Cache<String, Deque<Serializable>> cache = redisCacheManager.getCache(CoreConst.SHIRO_REDIS_CACHE_NAME);\r\n        Deque<Serializable> deques = cache.get(username);\r\n        for (Serializable deque : deques) {\r\n            if (sessionId.equals(deque)) {\r\n                deques.remove(deque);\r\n                break;\r\n            }\r\n        }\r\n        cache.put(username, deques);\r\n    }\r\n\r\n    /**\r\n     * 删除用户\r\n     *\r\n     * @param jsonBody\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseVo delUser(String jsonBody) throws JSONException {\r\n        jsonObject = new JSONObject(jsonBody);\r\n        queryWrapper = new QueryWrapper<>();\r\n        SysUser users = ((SysUser) SecurityUtils.getSubject().getPrincipal());\r\n        String roleId = userRoleService.queryRoleByUserId(users.getUserId()).get(0).getRoleId().toString();\r\n        if (\"1\".equals(roleId)) {\r\n            queryWrapper.eq(\"uuid\", jsonObject.get(\"uuid\").toString());\r\n            sysUserMapper.delete(queryWrapper);\r\n            return ResultUtil.success(CoreConst.SUCESS_CODE, \"删除成功!\");\r\n        } else {\r\n            return ResultUtil.error(CoreConst.FAIL_CODE_401, \"无权限操作!\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/impl/UserServiceImpl.java b/../metertwo/src/main/java/com/jw/service/impl/UserServiceImpl.java
--- a/../metertwo/src/main/java/com/jw/service/impl/UserServiceImpl.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/service/impl/UserServiceImpl.java	(date 1601190163506)
@@ -106,10 +106,10 @@
         String roleId = userRoleService.queryRoleByUserId(users.getUserId()).get(0).getRoleId().toString();
 
         String oldPassword=jsonObject.get("password").toString();
-        userRole.setRoleId((String) jsonObject.get("userRole"));
+        userRole.setRoleId((String) jsonObject.get("userType"));
 //        user.setDeptId(jsonObject.get("deptId").toString());
         user.setUserName(jsonObject.get("userName").toString());
-        user.setNickName(jsonObject.get("nickname").toString());
+        user.setNickName(jsonObject.get("nickName").toString());
         user.setEmail(jsonObject.get("email").toString());
         user.setPhone(jsonObject.get("phone").toString());
         user.setSex(jsonObject.get("sex").toString());
Index: ../metertwo/src/main/java/com/jw/service/iot4g/Iot4gServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.service.iot4g;\n\nimport com.jw.entity.iot4g.ThreadStatus;\nimport lombok.extern.slf4j.Slf4j;\n\nimport java.io.IOException;\nimport java.net.InetAddress;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.HashMap;\n\n/**\n * IOT Service v1.0\n */\n@Slf4j\npublic class Iot4gServer implements Runnable {\n    Socket socket=null;\n\n    ThreadStatus threadStatus;\n    HashMap<String, Socket> socketList = new HashMap<String, Socket>(); // 存放客户端socket,\n\n    SendToClient sendToClient = null;\n\n    public Iot4gServer(ThreadStatus ths) {\n        this.threadStatus = ths;\n    }\n\n    public void sendClient(ThreadStatus ths1) {\n        this.threadStatus = ths1;\n    }\n\n    public void stopServer(ThreadStatus status) {\n        threadStatus.setServerRun(false);\n        this.threadStatus = status;\n    }\n\n\n    /* */\n\n    /**\n     * 获取客户端在线列表\n     *\n     * @param\n     * @param\n     *//*\n    public void onlineClient(HashMap client,String IotModuleId,String msg) {\n        if (client!=null) {\n            this.socketList = client;\n        } else {\n            //        System.out.println(\"拿到\"+this.threadStatus.getSocketList());\n            if (\"89\".equals(msg.substring(3, 5))) { // 报文正确才发\n                socket = socketList.get(IotModuleId);\n                log.info(\"Send:\" + msg + \",To:\" + IotModuleId);\n                this.socket = socketList.get(IotModuleId);\n                System.out.println(socket);\n            }\n        }\n    }*/\n    @Override\n    public void run() {\n\n        try {\n//            synchronized (threadStatus) {\n            threadStatus.setServerRun(true);\n            ServerSocket serverSocket = new ServerSocket(1111);//创建绑定到特定端口的服务器Socket。\n            Socket socket = null;//需要接收的客户端Socket\n            int count = 0;//记录客户端连接次数\n            log.info(\"serverStart!\");\n            while (true) {\n                if (threadStatus.isServerRun()) {\n                    socket = serverSocket.accept();//侦听并接受到此套接字的连接\n                    InetAddress inetAddress = socket.getInetAddress();//获取客户端的连接\n                    ServerThread thread = new ServerThread(socket, inetAddress, threadStatus);//自己创建的线程类\n                    thread.start();//启动读线程\n                    count++;//如果正确建立连接\n                    log.info(\"客户端数量：\" + count); //打印客户端数量\n\n//                    sendToClient = new SendToClient(socket, inetAddress, threadStatus);\n//                    sendToClient.start();\n\n                } else {\n                    socket.close();\n                    serverSocket.close();\n                    Thread.currentThread().stop();\n                    break;\n                }\n            }\n//            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n   /* public static void main(String[] args) {\n\n        ThreadStatus.isSend=\"1\";\n        ThreadStatus.msg=\"已经发送!\";\n\n        ThreadStatus threadStatus=ThreadStatus.getInstance();\n        threadStatus.setServerRun(true);\n        Iot4gServer iot4gServer = new Iot4gServer(threadStatus);\n        iot4gServer.run();\n\n    }*/\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/iot4g/Iot4gServer.java b/../metertwo/src/main/java/com/jw/service/iot4g/Iot4gServer.java
--- a/../metertwo/src/main/java/com/jw/service/iot4g/Iot4gServer.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/service/iot4g/Iot4gServer.java	(date 1606299179686)
@@ -16,7 +16,7 @@
 public class Iot4gServer implements Runnable {
     Socket socket=null;
 
-    ThreadStatus threadStatus;
+    ThreadStatus threadStatus=ThreadStatus.getInstance();
     HashMap<String, Socket> socketList = new HashMap<String, Socket>(); // 存放客户端socket,
 
     SendToClient sendToClient = null;
Index: ../metertwo/src/main/java/com/jw/service/iot4g/ServerThread.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.service.iot4g;\n\nimport com.jw.util.HexConversion;\nimport com.jw.entity.iot4g.ThreadStatus;\nimport com.jw.service.iot4g.impl.UdcResolve;\nimport lombok.extern.slf4j.Slf4j;\n\nimport java.io.*;\nimport java.net.InetAddress;\nimport java.net.Socket;\nimport java.net.SocketTimeoutException;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@Slf4j\npublic class ServerThread extends Thread {\n    Socket socket = null;\n    InetAddress inetAddress = null;//接收客户端的连接\n\n    HexConversion hexConversion = new HexConversion();\n    UdcResolve udcResolve = new UdcResolve();\n    String serverResponse, ret;\n    ThreadStatus threadStatus;\n    Map map = new HashMap<>();\n    boolean isAlive = true;\n\n    public ServerThread(Socket socket, InetAddress inetAddress, ThreadStatus serverStatus) {\n        this.socket = socket;\n        this.inetAddress = inetAddress;\n        this.threadStatus = serverStatus;\n    }\n\n    public ServerThread() {\n\n    }\n\n    public void updateClientStatus() {\n        map.put(\"iotDeviceId\", threadStatus.aliveList.get(socket));\n        map.put(\"opt\", \"remove\");\n        threadStatus.aliveList.remove(socket);\n        hexConversion.updateModuleAliveList(socket, map);\n        Thread.currentThread().stop();\n    }\n\n\n    @Override\n    public void run() {\n        super.run();\n        BufferedInputStream bis = null;\n        DataInputStream dis = null;\n\n        try {\n            log.info(\"wait client connect...\");\n\n            log.info(\"currentClient:\" + socket.getInetAddress() + \",\" + socket.getPort() + \",threadId:\" + Thread.currentThread().getId());\n//            socket.setSoTimeout(1800000); // 30分钟无连接关闭\n//            socket.setSoTimeout(900000); // 15分钟无连接关闭\n            socket.setSoTimeout(600000); // 10分钟无连接关闭\n//            socket.setSoTimeout(30000); // 30秒无连接关闭\n//            socket.setSoTimeout(10000); // 30秒无连接关闭\n\n            bis = new BufferedInputStream(socket.getInputStream());\n            dis = new DataInputStream(bis);\n\n            byte[] bytes = new byte[1]; // 一次读取一个byte\n            ret = \"\";\n\n            while (isAlive) {\n                if (dis.read(bytes) == -1) {\n                    log.info(\"客户端主动关闭会话,销毁连接!\\n\"); // 向用户报警\n                    updateClientStatus();\n                    socket.close();\n                    isAlive = false;\n                    break;\n                }\n                ret += hexConversion.bytesToHexString(bytes) + \" \";\n                if (dis.available() == 0) { //一个请求\n                    log.info(socket.getRemoteSocketAddress() + \":\" + ret);\n                    serverResponse = udcResolve.handleUDC(ret, socket); //发送16进制字符串\n                    ret = \"\"; // 清除收到的消息\n                    log.info(\"serverResponse: \" + serverResponse);\n                    responseClient(serverResponse, socket);\n                }\n                if (\"1\".equals(ThreadStatus.isSend)) {\n                    try {\n                        socket.sendUrgentData(0xff);\n\n                        OutputStream res = null;\n                        OutputStreamWriter wrt = null;\n                        try {\n                            res = socket.getOutputStream();\n                            wrt = new OutputStreamWriter(res);\n                            wrt.write(String.valueOf(ThreadStatus.msg));\n                            wrt.flush();//清空缓冲区数据\n                            ThreadStatus.isSend = \"0\";\n//                        Thread.currentThread().wait();\n                        } catch (IOException e) {\n                            log.info(\"客户端主动关闭会话,销毁连接!\\n\" + e); // 向用户报警\n                            updateClientStatus();\n                        }\n                    } catch (Exception e) {\n                        log.info(\"客户端主动关闭会话,销毁连接!\\n\" + e); // 向用户报警\n                        updateClientStatus();\n                    }\n                }\n            }\n\n            socket.shutdownInput();\n        } catch (SocketTimeoutException e) {\n            log.info(\"客户端无响应,销毁连接!\"); // 向用户报警\n            updateClientStatus();\n        } catch (Exception e) {\n            log.info(\"未知异常!\\n\" + e); // 向用户报警\n            updateClientStatus();\n        }\n    }\n\n    public void responseClient(String msg, Socket soc) {\n\n        //响应客户端请求\n        OutputStream res = null;\n        OutputStreamWriter wrt = null;\n        try {\n            res = soc.getOutputStream();\n            wrt = new OutputStreamWriter(res);\n            wrt.write(msg);\n            wrt.flush();//清空缓冲区数据\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/iot4g/ServerThread.java b/../metertwo/src/main/java/com/jw/service/iot4g/ServerThread.java
--- a/../metertwo/src/main/java/com/jw/service/iot4g/ServerThread.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/service/iot4g/ServerThread.java	(date 1606543404745)
@@ -1,9 +1,11 @@
 package com.jw.service.iot4g;
 
-import com.jw.util.HexConversion;
 import com.jw.entity.iot4g.ThreadStatus;
 import com.jw.service.iot4g.impl.UdcResolve;
+import com.jw.util.HexConversion;
 import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
 
 import java.io.*;
 import java.net.InetAddress;
@@ -13,14 +15,18 @@
 import java.util.Map;
 
 @Slf4j
+@Component
 public class ServerThread extends Thread {
+
+    ThreadStatus threadStatus=ThreadStatus.getInstance();
+
+    HexConversion hexConversion=new HexConversion();
+
     Socket socket = null;
     InetAddress inetAddress = null;//接收客户端的连接
 
-    HexConversion hexConversion = new HexConversion();
     UdcResolve udcResolve = new UdcResolve();
     String serverResponse, ret;
-    ThreadStatus threadStatus;
     Map map = new HashMap<>();
     boolean isAlive = true;
 
Index: ../metertwo/src/main/java/com/jw/service/iot4g/impl/IotModuleServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.service.iot4g.impl;\n\nimport com.jw.entity.iot4g.DataSendPack;\nimport com.jw.entity.iot4g.ThreadStatus;\nimport com.jw.service.impl.DeviceHistoryImpl;\nimport com.jw.service.impl.DeviceImpl;\nimport com.jw.service.iot4g.Iot4gServer;\nimport com.jw.service.iot4g.IotModuleService;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\n\n@Component\n@Slf4j\npublic class IotModuleServiceImpl implements IotModuleService {\n\n    @Autowired\n    DeviceImpl device;\n\n    @Autowired\n    DeviceHistoryImpl deviceHistory;\n\n    DataSendPack dataSendPack;\n    DataSendPackResolve dataSendPackResolve;\n    UdcResolve udcResolve = new UdcResolve();\n    ThreadStatus threadStatus = ThreadStatus.getInstance();\n\n    Iot4gServer iot4gServer = new Iot4gServer(threadStatus);\n\n    /**\n     * 获取所选模块数据\n     * //     * @param jsonBody\n     *\n     * @param iotId iotDevice ID\n     * @return\n     */\n//    @Override\n//    public ResponseVo queryIotData(String jsonBody) {\n    public void queryIotData(String iotId) {\n\n        String dataCode = \"s1|s2|s3\"; // 功能码\n        if(iotId.length()!=11) {\n            for (int i = 0; i < 11; i++) {\n                if (iotId.length() < 11) {\n                    iotId += \"0\";\n                } else {\n                    break;\n                }\n            }\n        }\n\n        log.info(\"iotDd:\" + iotId);\n\n        dataSendPack = new DataSendPack();\n        dataSendPackResolve = new DataSendPackResolve();\n        dataSendPack.setLgp4(iotId);\n        dataSendPack.setLgp5(dataCode);\n        udcResolve.handleUDC(dataSendPackResolve.dataSendPackResolve(dataSendPack).toString(), null);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/iot4g/impl/IotModuleServiceImpl.java b/../metertwo/src/main/java/com/jw/service/iot4g/impl/IotModuleServiceImpl.java
--- a/../metertwo/src/main/java/com/jw/service/iot4g/impl/IotModuleServiceImpl.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/service/iot4g/impl/IotModuleServiceImpl.java	(date 1606549361923)
@@ -1,11 +1,12 @@
 package com.jw.service.iot4g.impl;
 
+import com.jw.entity.DeviceHistory;
 import com.jw.entity.iot4g.DataSendPack;
 import com.jw.entity.iot4g.ThreadStatus;
+import com.jw.mapper.IotDbMapper;
 import com.jw.service.impl.DeviceHistoryImpl;
 import com.jw.service.impl.DeviceImpl;
 import com.jw.service.iot4g.Iot4gServer;
-import com.jw.service.iot4g.IotModuleService;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
@@ -13,7 +14,7 @@
 
 @Component
 @Slf4j
-public class IotModuleServiceImpl implements IotModuleService {
+public class IotModuleServiceImpl {
 
     @Autowired
     DeviceImpl device;
@@ -21,6 +22,9 @@
     @Autowired
     DeviceHistoryImpl deviceHistory;
 
+    @Autowired
+    IotDbMapper iotDbMapper;
+
     DataSendPack dataSendPack;
     DataSendPackResolve dataSendPackResolve;
     UdcResolve udcResolve = new UdcResolve();
@@ -28,6 +32,9 @@
 
     Iot4gServer iot4gServer = new Iot4gServer(threadStatus);
 
+    DeviceHistory deviceHistorys = new DeviceHistory();
+
+
     /**
      * 获取所选模块数据
      * //     * @param jsonBody
@@ -59,4 +66,12 @@
         udcResolve.handleUDC(dataSendPackResolve.dataSendPackResolve(dataSendPack).toString(), null);
     }
 
+    void insertDeviceHistory(DeviceHistory devs) {
+        Long deviceId = 0l;
+        deviceId= iotDbMapper.iotSelect("select top 1 * DeviceID from FlowMeterUDB.dbo.DeviceTable where IotModuleID='" + deviceHistorys.getIotModuleID() + "'");
+
+    }
+
+
+
 }
Index: ../metertwo/src/main/java/com/jw/service/iot4g/impl/UdcResolve.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.service.iot4g.impl;\n\nimport com.jw.entity.iot4g.*;\nimport com.jw.util.HexConversion;\nimport com.jw.service.iot4g.Iot4gServer;\nimport lombok.extern.slf4j.Slf4j;\n\nimport java.net.Socket;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\n\n\n/**\n * 解析客户端UDC报文\n */\n@Slf4j\npublic class UdcResolve {\n\n\n    public UdcResolve() {\n    }\n\n    /**\n     * 存放报文提取数据\n     */\n    String[] message = null;\n\n    /**\n     * 响应客户端数据\n     */\n    String responseClient = null;\n    Map map = new HashMap();\n    /**\n     * 存放客户端在线列表数据\n     */\n    HashMap<String, Socket> socketList = new HashMap<String, Socket>();\n    ThreadStatus threadStatus = ThreadStatus.getInstance();\n    HexConversion hexConversion = new HexConversion();\n    Socket socket = null;\n    Iot4gServer iot4gServer = new Iot4gServer(threadStatus);\n\n    LoginPackResolve loginPackResolve = null;\n    LoginPack loginPack;\n    LoginResponsePack loginResponsePack = null;\n    LoginResponseResolve loginResponseResolve = null;\n\n    HeatPack heatPack;\n    HeatPackResolve heatPackResolve;\n    HeatResponsePack heatResponsePack;\n    HeatResponseResolve heatResponseResolve;\n\n    DataReportPack dataReportPack;\n    DataReportPackResolve dataReportPackResolve;\n    DataReportResponsePack dataReportResponsePack;\n    DataReportResponseResolve dataReportResponseResolve;\n\n    OfflinePack offlinePack;\n    OfflinePackResolve offlinePackResolve;\n    OfflineResponsePack offlineResponsePack;\n    OfflineResponseResolve offlineResponseResolve;\n\n    DataSendPack dataSendPack;\n    DataSendPackResolve dataSendPackResolve;\n\n    /**\n     * 解析UDC报文\n     *\n     * @param msg\n     * @param soc\n     * @return\n     */\n    public String handleUDC(String msg, Socket soc) {\n        this.socket = soc;\n\n        threadStatus = new ThreadStatus();\n        loginPack = new LoginPack();\n        heatPack = new HeatPack();\n        dataReportPack = new DataReportPack();\n        offlinePack = new OfflinePack();\n\n        log.info(\"接收到的数据帧:\" + msg);\n        message = msg.split(\" \");\n\n        if (!message[0].equalsIgnoreCase(\"7b\")) {\n            log.error(\"不是指定类型协议!\");\n        } else {// 判断报文类型\n            switch (message[1]) {\n                case \"03\": // 处理客户端发送的登陆报文\n                    log.info(\"收到客户端登陆请求!\");\n                    threadStatus.setIotDeviceStatus(\"0\");\n                    loginPackResolve = new LoginPackResolve();\n                    loginPack = loginPackResolve.LoginPackResolve(msg);\n\n                    // 提取出设备号和ip端口后回应登陆响应报文\n                    loginResponsePack = new LoginResponsePack();\n                    loginResponseResolve = new LoginResponseResolve();\n                    loginResponsePack = loginResponseResolve.loginPackResponse(16, msg.substring(12, 44).toString()); // 包长和设备号\n                    responseClient = loginResponsePack.toString();\n\n                    map.put(\"packType\", message[1]);\n                    map.put(\"iotDeviceId\", loginPack.getLgp4());\n                    map.put(\"InsideIp\", loginPack.getLgp5());\n                    map.put(\"InsidePort\", loginPack.getLgp6());\n                    map.put(\"iotDeviceStatus\", threadStatus.getIotDeviceStatus() + \"|\" + new Date()); // 0在线1下线\n\n//                    socketList.put(loginPack.getLgp4(),socket); // 放入在线列表\n\n                    break;\n                case \"01\": // 客户端发送的响应心跳报文\n                    log.info(\"收到客户端心跳请求!\");\n                    threadStatus.setIotDeviceStatus(\"0\");\n                    heatPackResolve = new HeatPackResolve();\n                    heatPack = heatPackResolve.HeatPackResolve(msg);            // 提取出设备号和ip端口后回应登陆响应报文\n\n                    heatResponsePack = new HeatResponsePack();\n                    heatResponseResolve = new HeatResponseResolve();\n                    heatResponsePack = heatResponseResolve.heatPackResponse(16, msg.substring(12, 44).toString()); // 包长和设备号\n                    responseClient = heatResponsePack.toString();\n\n                    map.put(\"packType\", message[1]);\n                    map.put(\"iotDeviceId\", heatPack.getLgp4());\n                    map.put(\"InsideIp\", heatPack.getLgp5());\n                    map.put(\"InsidePort\", heatPack.getLgp6());\n                    map.put(\"iotDeviceStatus\", threadStatus.getIotDeviceStatus() + \"|\" + new Date()); // 0在线1下线\n\n                    break;\n                case \"09\": // 客户端发送的数据上报报文\n                    log.info(\"收到客户端数据上报请求!\");\n\n                    threadStatus.setIotDeviceStatus(\"0\");\n                    dataReportPackResolve = new DataReportPackResolve();\n                    dataReportPack = dataReportPackResolve.dataReportPackResolve(msg); // 取出设备号和数据响应数据确认报文\n\n                    dataReportResponsePack = new DataReportResponsePack();\n                    dataReportResponseResolve = new DataReportResponseResolve();\n\n                    dataReportResponsePack = dataReportResponseResolve.dataReportPackResponse(16, msg.substring(12, 44).toString()); // 包长和设备号\n                    responseClient = dataReportResponsePack.toString();\n\n                    map.put(\"packType\", message[1]);\n                    map.put(\"dataPackLength\", dataReportPack.getLgp3()); // 包长\n                    map.put(\"iotDeviceId\", dataReportPack.getLgp4());\n                    map.put(\"dataIot\", dataReportPack.getLgp5()); // 收到的数据\n                    map.put(\"iotDeviceStatus\", threadStatus.getIotDeviceStatus() + \"|\" + new Date()); // 0在线1下线\n\n                    break;\n                case \"82\": // 客户端发送的下线请求\n                    log.info(\"收到客户端下线请求!\");\n                    threadStatus.setIotDeviceStatus(\"1\");\n                    offlinePackResolve = new OfflinePackResolve();\n                    offlinePack = offlinePackResolve.OfflinePackResolve(msg); // 取出设备号和响应数据报文\n\n                    offlineResponsePack = new OfflineResponsePack();\n                    offlineResponseResolve = new OfflineResponseResolve();\n                    offlineResponsePack = offlineResponseResolve.offlinePackResponse(16, msg.substring(12, 44).toString()); // 包长和设备号\n                    responseClient = offlineResponsePack.toString();\n\n                    map.put(\"packType\", message[1]);\n                    map.put(\"iotDeviceId\", offlinePack.getLgp4());\n                    map.put(\"InsideIp\", offlinePack.getLgp5());\n                    map.put(\"InsidePort\", offlinePack.getLgp6());\n                    map.put(\"iotDeviceStatus\", threadStatus.getIotDeviceStatus() + \"|\" + new Date()); // 0在线1下线\n\n                    break;\n                case \"89\":\n                    log.info(\"下发数据:\" + msg);\n\n                    ThreadStatus.isSend = \"1\";\n                    ThreadStatus.msg = msg.getBytes();\n\n                    break;\n                default:\n                    log.error(\"报文协议类型错误!\");\n            }\n        }\n\n        try {\n            hexConversion.storeDeviceHistoryFromIot(map,soc); // 将数据保存到数据库\n        } catch (NullPointerException e) {\n            log.info(\"存储数据为空!\" + map);\n            e.printStackTrace();\n        } catch (NumberFormatException e) {\n            log.info(\"数据解析异常!\" + map);\n            e.printStackTrace();\n        }\n\n        return responseClient;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/service/iot4g/impl/UdcResolve.java b/../metertwo/src/main/java/com/jw/service/iot4g/impl/UdcResolve.java
--- a/../metertwo/src/main/java/com/jw/service/iot4g/impl/UdcResolve.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/service/iot4g/impl/UdcResolve.java	(date 1606534553755)
@@ -4,6 +4,8 @@
 import com.jw.util.HexConversion;
 import com.jw.service.iot4g.Iot4gServer;
 import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
 
 import java.net.Socket;
 import java.util.Date;
@@ -17,10 +19,6 @@
 @Slf4j
 public class UdcResolve {
 
-
-    public UdcResolve() {
-    }
-
     /**
      * 存放报文提取数据
      */
@@ -36,7 +34,9 @@
      */
     HashMap<String, Socket> socketList = new HashMap<String, Socket>();
     ThreadStatus threadStatus = ThreadStatus.getInstance();
-    HexConversion hexConversion = new HexConversion();
+
+    HexConversion hexConversion=new HexConversion();
+
     Socket socket = null;
     Iot4gServer iot4gServer = new Iot4gServer(threadStatus);
 
Index: ../metertwo/src/main/java/com/jw/controller/Get4GConnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.controller;\n\nimport com.jw.entity.iot4g.ThreadStatus;\nimport com.jw.service.iot4g.Iot4gServer;\nimport com.jw.service.iot4g.impl.IotModuleServiceImpl;\nimport lombok.extern.slf4j.Slf4j;\nimport org.json.JSONException;\nimport org.json.JSONObject;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.ApplicationArguments;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.io.IOException;\n\n@Slf4j\n@Component\n@RequestMapping(value = \"/api/iot/\")\npublic class Get4GConnect implements ApplicationRunner {\n\n    @Autowired\n    IotModuleServiceImpl iotModuleService;\n\n    ThreadStatus threadStatus =ThreadStatus.getInstance();\n    Iot4gServer iot4gServer = new Iot4gServer(threadStatus);\n\n    JSONObject jsonObject = null;\n\n    /**\n     * 启动服务器\n     *\n     * @return\n     */\n    @GetMapping(\"start\")\n    public String start() {\n        if (threadStatus.isServerRun() != true) {\n\n            threadStatus.setServerRun(true);\n            log.debug(\"serverIsStart！\");\n//            iotData();\n\n            iot4gServer.run();\n\n        } else {\n            return \"alreadyRun!\";\n        }\n        return \"alreadyRun!\";\n    }\n\n    /**\n     * 停止服务器\n     *\n     * @return\n     * @throws IOException\n     */\n    @GetMapping(\"stop\")\n    public String stop() {\n        if (threadStatus.isServerRun() != false) {\n            threadStatus.setServerRun(false);\n            iot4gServer.stopServer(threadStatus);\n            log.debug(\"serverIsStart！\");\n        } else {\n            return \"alreadyStop!\";\n        }\n        return \"alreadyStop!\";\n    }\n\n    /**\n     * 获取模块当前数据\n     * @return\n     */\n//    @PostMapping(\"currentTraffic\")\n    @GetMapping(\"currentTraffic\")\n    public String iotData() throws JSONException {\n//        jsonObject = new JSONObject(jsonBody);\n//        iotModuleService.queryIotData(jsonObject.get(\"iotModuleID\").toString());\n//        return \"zx\";\n\n//        GuuidGen guidGen=new GuuidGen();\n//        guidGen.generateOrderId();\n//\n//        String id= guidGen.generateOrderId();\n//        System.out.println(id);\n        return null;\n    }\n\n    /**\n     * first start iotServer\n     * @param args\n     * @throws Exception\n     */\n    @Async\n    @Override\n    public void run(ApplicationArguments args) throws Exception {\n\n            threadStatus.setServerRun(true);\n            log.info(\"IOTServerIsStart！\");\n            iot4gServer.run();\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/controller/Get4GConnect.java b/../metertwo/src/main/java/com/jw/controller/Get4GConnect.java
--- a/../metertwo/src/main/java/com/jw/controller/Get4GConnect.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/controller/Get4GConnect.java	(date 1606544491224)
@@ -7,6 +7,7 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
 import org.springframework.boot.ApplicationArguments;
 import org.springframework.boot.ApplicationRunner;
 import org.springframework.scheduling.annotation.Async;
@@ -23,7 +24,19 @@
     @Autowired
     IotModuleServiceImpl iotModuleService;
 
-    ThreadStatus threadStatus =ThreadStatus.getInstance();
+    @Value("${spring.datasource.url}")
+    public String url;
+
+    @Value("${spring.datasource.username}")
+    public String username;
+
+    @Value("${spring.datasource.password}")
+    public String password;
+
+    @Value("${spring.datasource.driverClassName}")
+    public String driver;
+
+    ThreadStatus threadStatus = ThreadStatus.getInstance();
     Iot4gServer iot4gServer = new Iot4gServer(threadStatus);
 
     JSONObject jsonObject = null;
@@ -69,6 +82,7 @@
 
     /**
      * 获取模块当前数据
+     *
      * @return
      */
 //    @PostMapping("currentTraffic")
@@ -88,6 +102,7 @@
 
     /**
      * first start iotServer
+     *
      * @param args
      * @throws Exception
      */
@@ -95,9 +110,13 @@
     @Override
     public void run(ApplicationArguments args) throws Exception {
 
-            threadStatus.setServerRun(true);
-            log.info("IOTServerIsStart！");
-            iot4gServer.run();
+        ThreadStatus.dbUrl=url;
+        ThreadStatus.dbUserName=username;
+        ThreadStatus.dbPassword=password;
+        ThreadStatus.dbDriver=driver;
+        threadStatus.setServerRun(true);
+        log.info("IOTServerIsStart！");
+        iot4gServer.run();
 
     }
 }
Index: ../metertwo/src/main/java/com/jw/controller/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.controller;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.google.code.kaptcha.Constants;\nimport com.jw.common.constant.CommonConstant;\nimport com.jw.entity.SysUser;\nimport com.jw.service.ISysUserService;\nimport com.jw.util.*;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@RestController\n@RequestMapping(\"/api/sys/\")\n@Slf4j\npublic class LoginController {\n    @Autowired\n    private ISysUserService sysUserService;\n    @Autowired\n    private RedisUtil redisUtil;\n\n    SysUser user;\n\n    @RequestMapping(value = \"login\", method = RequestMethod.POST)\n    public Result<JSONObject> login(HttpServletRequest request, @RequestParam(value = \"username\", required = false) String username, String password, String verification) throws Exception {\n        Result<JSONObject> result = new Result<JSONObject>();\n        user = new SysUser();\n        user.setUserName(username);\n        user.setPassword(password);\n\n        //判断验证码\n        String rightCode = (String) request.getSession().getAttribute(Constants.KAPTCHA_SESSION_KEY);\n        if (StringUtils.isNotBlank(verification) && StringUtils.isNotBlank(rightCode) && verification.equals(rightCode)) {\n            //验证码通过\n            //1. 校验用户是否有效\n            SysUser sysUser = sysUserService.getUserByName(username);\n            result = sysUserService.checkUserIsEffective(sysUser);\n            if (!result.isSuccess()) {\n                return result;\n            }\n\n            //2. 校验用户名或密码是否正确\n            String userpassword = PasswordUtil.encrypt(username, password, sysUser.getSalt());\n            String syspassword = sysUser.getPassword();\n            if (!syspassword.equals(userpassword)) {\n                result.error500(\"用户名或密码错误\");\n                return result;\n            }\n\n            //用户登录信息\n            userInfo(sysUser, result);\n\n            return result;\n        } else {\n            return result.error500(\"验证码错误!\");\n        }\n    }\n\n    /**\n     * 退出登录\n     *\n     * @param request\n     * @param response\n     * @return\n     */\n    @RequestMapping(value = \"logout\")\n    public Result<Object> logout(HttpServletRequest request, HttpServletResponse response) {\n        //用户退出逻辑\n        String token = request.getHeader(CommonConstant.ACCESS_TOKEN);\n        if (CommonUtils.isEmpty(token)) {\n            return Result.error(\"退出登录失败！\");\n        }\n        String username = JwtUtil.getUsername(token);\n        SysUser sysUser = sysUserService.getUserByName(username);\n        if (sysUser != null) {\n            log.info(\" 用户名:  \" + sysUser.getUserName() + \",退出成功！ \");\n            //清空用户Token缓存\n            redisUtil.del(CommonConstant.PREFIX_USER_TOKEN + token);\n            //清空用户权限缓存：权限Perms和角色集合\n            redisUtil.del(CommonConstant.LOGIN_USER_CACHERULES_ROLE + username);\n            redisUtil.del(CommonConstant.LOGIN_USER_CACHERULES_PERMISSION + username);\n            return Result.ok(\"退出登录成功！\");\n        } else {\n            return Result.error(\"无效的token\");\n        }\n    }\n\n\n    /**\n     * 用户信息\n     *\n     * @param sysUser\n     * @param result\n     * @return\n     */\n    private Result<JSONObject> userInfo(SysUser sysUser, Result<JSONObject> result) {\n        String syspassword = sysUser.getPassword();\n        String username = sysUser.getUserName();\n        // 生成token\n        String token = JwtUtil.sign(username, syspassword);\n        redisUtil.set(CommonConstant.PREFIX_USER_TOKEN + token, token);\n        // 设置超时时间\n        redisUtil.expire(CommonConstant.PREFIX_USER_TOKEN + token, JwtUtil.EXPIRE_TIME / 1000);\n\n        // 获取用户部门信息\n        JSONObject obj = new JSONObject();\n        obj.put(\"token\", token);\n        obj.put(\"userInfo\", sysUser.getUserName());\n        result.setResult(obj);\n        result.success(\"登录成功\");\n        return result;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/controller/LoginController.java b/../metertwo/src/main/java/com/jw/controller/LoginController.java
--- a/../metertwo/src/main/java/com/jw/controller/LoginController.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/controller/LoginController.java	(date 1605236732493)
@@ -13,6 +13,7 @@
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+import java.util.HashMap;
 
 @RestController
 @RequestMapping("/api/sys/")
@@ -25,16 +26,31 @@
 
     SysUser user;
 
+    private final int FAILCOUNT = 3;
+    private final int LOCKHOURS = 2;
+    private final int FAILTIME = 180;
+
     @RequestMapping(value = "login", method = RequestMethod.POST)
-    public Result<JSONObject> login(HttpServletRequest request, @RequestParam(value = "username", required = false) String username, String password, String verification) throws Exception {
+    public Result<JSONObject> login(HttpServletRequest request,
+                                    @RequestParam(value = "username", required = false) String username,
+                                    String password, String verification) throws Exception {
         Result<JSONObject> result = new Result<JSONObject>();
+        HashMap<String, Object> map = new HashMap<>();
+        long lockTime = this.getUserLoginTimeLock(username);
+        String key = "user:" + username + ":failCount";
+
         user = new SysUser();
         user.setUserName(username);
         user.setPassword(password);
 
+        if (lockTime > 0) {//判断用户是否已经被锁定
+            return result.error500("警告!<br>该账号已经被锁定!<br>请在" + lockTime + "秒之后尝试!");
+        }
+
         //判断验证码
         String rightCode = (String) request.getSession().getAttribute(Constants.KAPTCHA_SESSION_KEY);
         if (StringUtils.isNotBlank(verification) && StringUtils.isNotBlank(rightCode) && verification.equals(rightCode)) {
+
             //验证码通过
             //1. 校验用户是否有效
             SysUser sysUser = sysUserService.getUserByName(username);
@@ -47,8 +63,17 @@
             String userpassword = PasswordUtil.encrypt(username, password, sysUser.getSalt());
             String syspassword = sysUser.getPassword();
             if (!syspassword.equals(userpassword)) {
-                result.error500("用户名或密码错误");
-                return result;
+                this.setFailCount(username); // 设置用户密码失败次数
+                int count = (Integer) redisUtil.get(key);
+                if (count == FAILCOUNT) {//判断是否已经达到了最大失败次数
+                    String lockkey = "user:" + username + ":lockTime";
+                    redisUtil.set(lockkey, "1", LOCKHOURS * 60 * 60);//设置锁定时间为2小时
+                    redisUtil.del(key);
+                    log.warn(username+"尝试登陆失败"+count+"次!");
+                    return result.error500("警告!<br>当前账号已经被锁定!<br>请在 " + LOCKHOURS + "小时后再尝试!");
+                }
+                count = FAILCOUNT - count; //没有达到5次，返回剩余登陆次数
+                return result.error500("警告!<br>登录失败!<br>您还剩" + count + "次登陆机会!");
             }
 
             //用户登录信息
@@ -56,7 +81,7 @@
 
             return result;
         } else {
-            return result.error500("验证码错误!");
+            return result.error500("注意！<br>验证码错误!");
         }
     }
 
@@ -85,7 +110,7 @@
             redisUtil.del(CommonConstant.LOGIN_USER_CACHERULES_PERMISSION + username);
             return Result.ok("退出登录成功！");
         } else {
-            return Result.error("无效的token");
+            return Result.error("无效的token！");
         }
     }
 
@@ -115,4 +140,52 @@
         return result;
     }
 
+    /**
+     * 获取当前用户已失败次数
+     *
+     * @param username username
+     * @return 已失败次数
+     */
+    private int getUserFailCount(String username) {
+        String key = "user:" + username + ":failCount";
+        //从redis中获取当前用户已失败次数
+        Object object = redisUtil.get(key);
+        if (object != null) {
+            return (int) object;
+        } else {
+            return -1;
+        }
+    }
+
+    /**
+     * 设置失败次数
+     *
+     * @param username username
+     */
+    private void setFailCount(String username) {
+        long count = this.getUserFailCount(username);
+        String key = "user:" + username + ":failCount";
+        if (count < 0) {//判断redis中是否有该用户的失败登陆次数，如果没有，设置为1，过期时间为2分钟，如果有，则次数+1
+            redisUtil.set(key, 1, FAILTIME);
+        } else {
+            redisUtil.incr(key, new Long(1));
+        }
+    }
+
+    /**
+     * 检查用户是否已经被锁定，如果是，返回剩余锁定时间，如果否，返回-1
+     *
+     * @param username username
+     * @return 时间
+     */
+    private int getUserLoginTimeLock(String username) {
+        String key = "user:" + username + ":lockTime";
+        int lockTime = (int) redisUtil.getExpire(key);
+        if (lockTime > 0) {//查询用户是否已经被锁定，如果是，返回剩余锁定时间，如果否，返回-1
+            return lockTime;
+        } else {
+            return -1;
+        }
+    }
+
 }
Index: ../metertwo/src/main/java/com/jw/controller/ErrorInterceptorController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.controller;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\n\n/**\n * 自定义拦截器\n */\n@Controller\npublic class ErrorInterceptorController implements HandlerInterceptor {\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\n                           ModelAndView modelAndView) throws Exception {\n\n        if (response.getStatus() == 500) {\n            modelAndView.setViewName(\"page/error/404\");\n        } else if (response.getStatus() == 404) {\n            modelAndView.setViewName(\"page/error/404\");\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/controller/ErrorInterceptorController.java b/../metertwo/src/main/java/com/jw/controller/ErrorInterceptorController.java
--- a/../metertwo/src/main/java/com/jw/controller/ErrorInterceptorController.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/controller/ErrorInterceptorController.java	(date 1612427100204)
@@ -1,26 +1,33 @@
 package com.jw.controller;
 
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.context.annotation.Configuration;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.servlet.HandlerInterceptor;
 import org.springframework.web.servlet.ModelAndView;
 
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+
+
 /**
  * 自定义拦截器
  */
+@Slf4j
 @Controller
 public class ErrorInterceptorController implements HandlerInterceptor {
 
     @Override
     public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
                            ModelAndView modelAndView) throws Exception {
-
-        if (response.getStatus() == 500) {
-            modelAndView.setViewName("page/error/404");
-        } else if (response.getStatus() == 404) {
-            modelAndView.setViewName("page/error/404");
+        try {
+            if (response.getStatus() == 500) {
+                modelAndView.setViewName("page/error/404");
+            } else if (response.getStatus() == 404) {
+                modelAndView.setViewName("page/error/404");
+            }
+        } catch (NullPointerException e) {
+            e.printStackTrace();
         }
     }
 
Index: ../metertwo/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#logging.file.path=/home/mi/MI/log\n#logging.file.name=/home/mi/MI/log/log.log\n#logging.file.name=log\\\\log.log\nspring.mvc.async.request-timeout=5000\nmybatis.configuration.map-underscore-to-camel-case=false
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/application.properties b/../metertwo/src/main/resources/application.properties
--- a/../metertwo/src/main/resources/application.properties	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/application.properties	(date 1613803984917)
@@ -2,4 +2,9 @@
 #logging.file.name=/home/mi/MI/log/log.log
 #logging.file.name=log\\log.log
 spring.mvc.async.request-timeout=5000
-mybatis.configuration.map-underscore-to-camel-case=false
\ No newline at end of file
+mybatis.configuration.map-underscore-to-camel-case=false
+#spring.main.allow-bean-definition-overriding=true
+
+
+
+
Index: ../metertwo/src/main/resources/application-dev.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\n  port: 8080\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n#    driverClassName: org.mariadb.jdbc.Driver\n    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n    #    driverClassName: com.mysql.cj.jdbc.Driver\n#    url: jdbc:mysql://58.87.118.156:3306/FlowMeterUDB?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    url: jdbc:sqlserver://192.168.122.168:1433;DatabaseName=FlowMeterUDB\n    username: sa\n#    username: root\n    password: Cl123456789\n  redis:\n    host: 192.168.122.168\n    port: 6379\n    password:\n    timeout: 5000\n    jedis:\n      pool:\n        max-idle: 8\n        min-idle: 0\n        max-active: 8\n        max-wait: -1\n\nfile:\n  #上传的文件对外暴露的访问路径\n  access-path-pattern: /u/**\n  #文件上传目录\n  upload-folder: /Users/''/workspace/projects/cms/pb-cms/upload/\n  #文件预览、下载的绝对路径\n  access-prefix-url: http://localhost:8080/cms/u\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/application-dev.yml b/../metertwo/src/main/resources/application-dev.yml
--- a/../metertwo/src/main/resources/application-dev.yml	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/application-dev.yml	(date 1612416374366)
@@ -12,9 +12,9 @@
 #    username: root
     password: Cl123456789
   redis:
-    host: 192.168.122.168
+    host: 172.18.0.210
     port: 6379
-    password:
+    password: viZ4UiMJKTGN7qLW1r7xE3plLLMZL0sStoEdc3W50Ui%3F95drRvGIi4Tb^W*F6TQzsHXJKk4HTKMXX5LjiF4NbJY7bwLeVxQoA
     timeout: 5000
     jedis:
       pool:
@@ -22,11 +22,11 @@
         min-idle: 0
         max-active: 8
         max-wait: -1
-
-file:
-  #上传的文件对外暴露的访问路径
-  access-path-pattern: /u/**
-  #文件上传目录
-  upload-folder: /Users/''/workspace/projects/cms/pb-cms/upload/
-  #文件预览、下载的绝对路径
-  access-prefix-url: http://localhost:8080/cms/u
+#
+#file:
+#  #上传的文件对外暴露的访问路径
+#  access-path-pattern: /u/**
+#  #文件上传目录
+#  upload-folder: /Users/''/workspace/projects/cms/pb-cms/upload/
+#  #文件预览、下载的绝对路径
+#  access-prefix-url: http://localhost:8080/cms/u
Index: ../metertwo/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\n  servlet:\n    context-path: /\n    tomcat:\n      uri-encoding: utf-8\n      max-connections: 10000\n      min-spare-threads: 10\n      max-threads: 220\n\nlogging:\n  level:\n#    root: debug\n    root: error\n\nspring:\n  resources:\n    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/\n  profiles:\n    active: prd\n#    active: dev\n  datasource:\n    druid:\n      initial-size: 1\n      min-idle: 3\n      max-active: 20\n      max-wait: 10000\n      filters: stat,wall,slf4j\n      stat-view-servlet:\n        enabled: true\n        url-pattern: /druid/*\n        login-username: admin\n        login-password: 123456\n        allow:\n        deny:\n  thymeleaf:\n    prefix: classpath:/static/\n    suffix: .html\n    cache: false\n    mode: HTML\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n  data:\n    redis:\n      repositories:\n        enabled: false\n  aop:\n    proxy-target-class: true\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n#  mapper-locations: classpath:mapper/*.xml\n#  type-aliases-package: com.jw\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌秘钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟）\n  expireTime: 30\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/application.yml b/../metertwo/src/main/resources/application.yml
--- a/../metertwo/src/main/resources/application.yml	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/application.yml	(date 1612432693609)
@@ -2,10 +2,12 @@
   servlet:
     context-path: /
     tomcat:
+      remote-ip-header: x-forward-for
       uri-encoding: utf-8
       max-connections: 10000
       min-spare-threads: 10
       max-threads: 220
+      max-http-header-size: 8192
 
 logging:
   level:
Index: ../metertwo/src/main/resources/application-prd.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\n  port: 8080\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#    url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=FlowMeterUDB\n    url: jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB\n    username: zero\n    password: 123$%^\n  redis:\n    host: 127.0.0.1\n#    host: 192.168.122.168\n    port: 6379\n    password:\n    timeout: 5000\n    jedis:\n      pool:\n        max-idle: 8\n        min-idle: 0\n        max-active: 8\n        max-wait: -1\n\nfile:\n  #上传的文件对外暴露的访问路径\n  access-path-pattern: /u/**\n  #文件上传目录\n  upload-folder: /Users/''/workspace/projects/cms/pb-cms/upload/\n  #文件预览、下载的绝对路径\n  access-prefix-url: http://localhost:8080/cms/u\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/application-prd.yml b/../metertwo/src/main/resources/application-prd.yml
--- a/../metertwo/src/main/resources/application-prd.yml	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/application-prd.yml	(date 1612432812490)
@@ -9,10 +9,11 @@
     username: zero
     password: 123$%^
   redis:
-    host: 127.0.0.1
-#    host: 192.168.122.168
+#    host: 127.0.0.1
+#    host: 172.18.0.210
+    host: 172.99.0.2
     port: 6379
-    password:
+    password: viZ4UiMJKTGN7qLW1r7xE3plLLMZL0sStoEdc3W50Ui%3F95drRvGIi4Tb^W*F6TQzsHXJKk4HTKMXX5LjiF4NbJY7bwLeVxQoA
     timeout: 5000
     jedis:
       pool:
@@ -21,10 +22,10 @@
         max-active: 8
         max-wait: -1
 
-file:
-  #上传的文件对外暴露的访问路径
-  access-path-pattern: /u/**
-  #文件上传目录
-  upload-folder: /Users/''/workspace/projects/cms/pb-cms/upload/
-  #文件预览、下载的绝对路径
-  access-prefix-url: http://localhost:8080/cms/u
+#file:
+#  #上传的文件对外暴露的访问路径
+#  access-path-pattern: /u/**
+#  #文件上传目录
+#  upload-folder: /Users/''/workspace/projects/cms/pb-cms/upload/
+#  #文件预览、下载的绝对路径
+#  access-prefix-url: http://localhost:8080/cms/u
Index: ../metertwo/src/main/resources/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\" xmlns:shiro=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>精伍科技</title>\n    <meta name=\"renderer\" content=\"webkit\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta http-equiv=\"Access-Control-Allow-Origin\" content=\"*\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"format-detection\" content=\"telephone=no\">\n    <link rel=\"icon\" href=\"img/favicon.ico\">\n    <link rel=\"stylesheet\" href=\"libs/layui-v2.5.5/css/layui.css\" media=\"all\">\n    <link rel=\"stylesheet\" href=\"css/layuimini.css\" media=\"all\">\n    <link rel=\"stylesheet\" href=\"libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\n    <!--[if lt IE 9]>\n    <script src=\"https://cdn.staticfile.org/html5shiv/r29/html5.min.js\"></script>\n    <script src=\"https://cdn.staticfile.org/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n    <style id=\"layuimini-bg-color\">\n    </style>\n</head>\n<body class=\"layui-layout-body layuimini-all\">\n<div class=\"layui-layout layui-layout-admin\">\n\n    <div class=\"layui-header header\">\n        <div class=\"layui-logo\"></div>\n        <a>\n            <div class=\"layuimini-tool\"><i title=\"展开\" class=\"fa fa-outdent\" data-side-fold=\"1\"></i></div>\n        </a>\n\n        <ul class=\"layui-nav layui-layout-left layui-header-menu layui-header-pc-menu mobile layui-hide-xs\">\n        </ul>\n        <ul class=\"layui-nav layui-layout-left layui-header-menu mobile layui-hide-sm\">\n            <li class=\"layui-nav-item\">\n                <a href=\"javascript:;\"><i class=\"fa fa-list-ul\"></i> 选择模块</a>\n                <dl class=\"layui-nav-child layui-header-mini-menu\">\n                </dl>\n            </li>\n        </ul>\n\n        <ul class=\"layui-nav layui-layout-right\">\n\n            <li class=\"layui-nav-item\" lay-unselect>\n                <a href=\"javascript:;\" data-refresh=\"刷新\"><i class=\"fa fa-refresh\"></i></a>\n            </li>\n            <li class=\"layui-nav-item\" lay-unselect>\n                <a href=\"javascript:;\" data-clear=\"清理\" class=\"layuimini-clear\"><i class=\"fa fa-trash-o\"></i></a>\n            </li>\n            <li class=\"layui-nav-item mobile layui-hide-xs\" lay-unselect>\n                <a href=\"javascript:;\" data-check-screen=\"full\"><i class=\"fa fa-arrows-alt\"></i></a>\n            </li>\n            <li class=\"layui-nav-item layuimini-setting\">\n                <a id=\"user\" href=\"javascript:;\"></a>\n                <dl class=\"layui-nav-child\">\n                    <!--<dd>\n                        <a href=\"javascript:;\" data-iframe-tab=\"page/user-setting.html\" data-title=\"基本资料\"\n                           data-icon=\"fa fa-gears\">基本资料</a>\n                    </dd>\n                    <dd>\n                        <a href=\"javascript:;\" data-iframe-tab=\"page/user-password.html\" data-title=\"修改密码\"\n                           data-icon=\"fa fa-gears\">修改密码</a>\n                    </dd>-->\n                    <dd>\n                        <a href=\"javascript:;\" class=\"login-out\">退出登录</a>\n                    </dd>\n                </dl>\n            </li>\n            <li class=\"layui-nav-item layuimini-select-bgcolor mobile layui-hide-xs\" lay-unselect>\n                <a href=\"javascript:;\" data-bgcolor=\"配色方案\"><i class=\"fa fa-ellipsis-v\"></i></a>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"layui-side layui-bg-black\">\n        <div class=\"layui-side-scroll layui-left-menu\">\n        </div>\n    </div>\n\n    <div class=\"layui-body\">\n        <div class=\"layui-tab\" lay-filter=\"layuiminiTab\" id=\"top_tabs_box\">\n            <ul class=\"layui-tab-title\" id=\"top_tabs\">\n                <li class=\"layui-this\" id=\"layuiminiHomeTabId\" lay-id=\"\"></li>\n            </ul>\n            <ul class=\"layui-nav closeBox\">\n                <li class=\"layui-nav-item\">\n                    <a href=\"javascript:;\"> <i class=\"fa fa-dot-circle-o\"></i> 页面操作</a>\n                    <dl class=\"layui-nav-child\">\n                        <dd><a href=\"javascript:;\" data-page-close=\"other\"><i class=\"fa fa-window-close\"></i> 关闭其他</a>\n                        </dd>\n                        <dd><a href=\"javascript:;\" data-page-close=\"all\"><i class=\"fa fa-window-close-o\"></i> 关闭全部</a>\n                        </dd>\n                    </dl>\n                </li>\n            </ul>\n            <div class=\"layui-tab-content clildFrame\">\n                <div id=\"layuiminiHomeTabIframe\" class=\"layui-tab-item layui-show\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script src=\"libs/layui-v2.5.5/layui.js?v=1.0.4\" charset=\"utf-8\"></script>\n<script src=\"js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\n<script src=\"js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\n<script type=\"application/javascript\" charset=\"utf-8\">\n    document.getElementById(\"user\").text = localStorage.getItem(\"user\");\n</script>\n<script>\n    layui.use(['element', 'layer', 'layuimini'], function () {\n        var $ = layui.jquery,\n            element = layui.element,\n            layer = layui.layer;\n        layuimini.init(baseUrl + 'sys/menu/currentUserMenu');\n        $('.login-out').on(\"click\", function () {\n            $.ajax({\n                type: \"POST\",\n                url: baseUrl + \"sys/logout\",\n                data: $(\".layui-form\").serialize(),\n                dataType: \"json\",\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader(\"Access-token:\" + localStorage.getItem(\"token\"));\n                },\n                headers: auth,\n                success: function (data) {\n                    if (data.success == true) {\n                        layer.msg(data.message, {\n                            offset: '30%',\n                            time: 800\n                        }, function () {\n                            localStorage.removeItem(\"token\");\n                            localStorage.removeItem(\"user\");\n                            window.location.href = baseUrl+'sys/login';\n                        });\n                    } else {\n                        layer.msg(data.message, {\n                            icon: 2,\n                            offset: '30%',\n                            time: 2000\n                        });\n                    }\n                }\n            });\n        });\n    });\n</script>\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/index.html b/../metertwo/src/main/resources/static/index.html
--- a/../metertwo/src/main/resources/static/index.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/index.html	(date 1606284991336)
@@ -105,46 +105,6 @@
 <script src="libs/layui-v2.5.5/layui.js?v=1.0.4" charset="utf-8"></script>
 <script src="js/lay-config.js?v=1.0.4" charset="utf-8"></script>
 <script src="js/lay-module/echarts/ecStat.min.js" charset="utf-8"></script>
-<script type="application/javascript" charset="utf-8">
-    document.getElementById("user").text = localStorage.getItem("user");
-</script>
-<script>
-    layui.use(['element', 'layer', 'layuimini'], function () {
-        var $ = layui.jquery,
-            element = layui.element,
-            layer = layui.layer;
-        layuimini.init(baseUrl + 'sys/menu/currentUserMenu');
-        $('.login-out').on("click", function () {
-            $.ajax({
-                type: "POST",
-                url: baseUrl + "sys/logout",
-                data: $(".layui-form").serialize(),
-                dataType: "json",
-                beforeSend: function (xhr) {
-                    xhr.setRequestHeader("Access-token:" + localStorage.getItem("token"));
-                },
-                headers: auth,
-                success: function (data) {
-                    if (data.success == true) {
-                        layer.msg(data.message, {
-                            offset: '30%',
-                            time: 800
-                        }, function () {
-                            localStorage.removeItem("token");
-                            localStorage.removeItem("user");
-                            window.location.href = baseUrl+'sys/login';
-                        });
-                    } else {
-                        layer.msg(data.message, {
-                            icon: 2,
-                            offset: '30%',
-                            time: 2000
-                        });
-                    }
-                }
-            });
-        });
-    });
-</script>
+<script src="js/myJs/index.js" type="application/javascript" charset="utf-8"></script>
 </body>
 </html>
Index: ../metertwo/src/main/resources/static/js/lay-config.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * date:2019/08/16\n * author:Mr.Chung\n * description:此处放layui自定义扩展\n */\n\nvar baseUrl = \"http://\"+window.location.host+\"/api/\";\n// var baseUrl = \"http://119.27.186.231:8080/metertwo/api/\";\n\nvar Authorization = {\"Access-Token\":localStorage.getItem(\"token\")};\nvar auth = {\n    'Content-Type': 'application/json;charset=utf8',\n    'Access-token': localStorage.getItem(\"token\")\n}\n\nwindow.rootPath = (function (src) {\n    src = document.scripts[document.scripts.length - 1].src;\n    return src.substring(0, src.lastIndexOf(\"/\") + 1);\n})();\n\nlayui.config({\n    base: rootPath + \"lay-module/\",\n    version: true\n}).extend({\n    layuimini: \"layuimini/layuimini\", // layuimini扩展\n    step: 'step-lay/step', // 分步表单扩展\n    treetable: 'treetable-lay/treetable', //table树形扩展\n    tableSelect: 'tableSelect/tableSelect', // table选择扩展\n    iconPickerFa: 'iconPicker/iconPickerFa', // fa图标选择扩展\n    echarts: 'echarts/echarts', // echarts图表扩展\n    echartsTheme: 'echarts/echartsTheme', // echarts图表主题扩展\n    wangEditor: 'wangEditor/wangEditor', // wangEditor富文本扩展\n    layarea: 'layarea/layarea', //  省市县区三级联动下拉选择器\n    autocomplete: 'autocomplete/autocomplete'\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/js/lay-config.js b/../metertwo/src/main/resources/static/js/lay-config.js
--- a/../metertwo/src/main/resources/static/js/lay-config.js	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/js/lay-config.js	(date 1605322835995)
@@ -4,8 +4,8 @@
  * description:此处放layui自定义扩展
  */
 
-var baseUrl = "http://"+window.location.host+"/api/";
-// var baseUrl = "http://119.27.186.231:8080/metertwo/api/";
+var baseUrl = "https://"+window.location.host+"/api/";
+// var baseUrl = "https://119.27.186.231:8080/metertwo/api/";
 
 var Authorization = {"Access-Token":localStorage.getItem("token")};
 var auth = {
Index: ../metertwo/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.3.4.RELEASE</version>\n        <relativePath/>\n    </parent>\n    <groupId>com.jw.metertwo</groupId>\n    <artifactId>metertwo</artifactId>\n    <version>0.0.1</version>\n    <name>metertwo</name>\n    <packaging>war</packaging>\n    <description>Demo project for Spring Boot</description>\n\n    <properties>\n        <java.version>1.8</java.version>\n        <jwt.version>0.9.0</jwt.version>\n        <bitwalker.version>1.19</bitwalker.version>\n    </properties>\n    <dependencies>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-redis</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.pagehelper</groupId>\n            <artifactId>pagehelper-spring-boot-starter</artifactId>\n            <version>1.2.13</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n\n        <!--shiro-->\n        <dependency>\n            <groupId>org.apache.shiro</groupId>\n            <artifactId>shiro-spring-boot-starter</artifactId>\n            <version>1.6.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.theborakompanioni</groupId>\n            <artifactId>thymeleaf-extras-shiro</artifactId>\n            <version>2.0.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.crazycake</groupId>\n            <artifactId>shiro-redis</artifactId>\n            <version>3.2.3</version>\n            <exclusions>\n                <exclusion>\n                    <artifactId>shiro-core</artifactId>\n                    <groupId>org.apache.shiro</groupId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <!--&lt;!&ndash; 解析客户端操作系统、浏览器等 &ndash;&gt;\n        <dependency>\n            <groupId>eu.bitwalker</groupId>\n            <artifactId>UserAgentUtils</artifactId>\n            <version>${bitwalker.version}</version>\n        </dependency>-->\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <version>2.3.4.RELEASE</version>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.junit.vintage</groupId>\n                    <artifactId>junit-vintage-engine</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <!-- 验证码 -->\n        <dependency>\n            <groupId>com.github.penggle</groupId>\n            <artifactId>kaptcha</artifactId>\n            <version>2.3.2</version>\n        </dependency>\n\n        <!--    文档处理库    -->\n\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi</artifactId>\n            <version>4.1.2</version>\n        </dependency>\n\n        <!--   数据库驱动\n          注意:版本必须与环境jdk一致!\n            -->\n        <dependency>\n            <groupId>com.microsoft.sqlserver</groupId>\n            <artifactId>mssql-jdbc</artifactId>\n            <version>8.2.2.jre8</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mariadb.jdbc</groupId>\n            <artifactId>mariadb-java-client</artifactId>\n            <version>2.6.1</version>\n        </dependency>\n\n        <!--    druid连接池    -->\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid</artifactId>\n            <version>1.1.22</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus-boot-starter</artifactId>\n            <version>3.3.1</version>\n        </dependency>\n\n        <!--swagger 的依赖 START-->\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-swagger2</artifactId>\n            <version>2.9.2</version>\n        </dependency>\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-swagger-ui</artifactId>\n            <version>2.9.2</version>\n        </dependency>\n        <!--swagger 的依赖 END-->\n\n        <!--&lt;!&ndash; spring security 安全认证 &ndash;&gt;\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n\n        &lt;!&ndash; redis 缓存操作 &ndash;&gt;\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-redis</artifactId>\n        </dependency>-->\n\n        <!--JWT-->\n        <dependency>\n            <groupId>com.auth0</groupId>\n            <artifactId>java-jwt</artifactId>\n            <version>3.7.0</version>\n        </dependency>\n\n        <!-- pool 对象池 -->\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-pool2</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.vaadin.external.google</groupId>\n            <artifactId>android-json</artifactId>\n            <version>0.0.20131108.vaadin1</version>\n            <scope>compile</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.73</version>\n        </dependency>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/pom.xml b/../metertwo/pom.xml
--- a/../metertwo/pom.xml	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/pom.xml	(date 1612405436523)
@@ -5,7 +5,7 @@
     <parent>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-parent</artifactId>
-        <version>2.3.4.RELEASE</version>
+        <version>2.4.0</version>
         <relativePath/>
     </parent>
     <groupId>com.jw.metertwo</groupId>
@@ -63,7 +63,7 @@
         <dependency>
             <groupId>org.apache.shiro</groupId>
             <artifactId>shiro-spring-boot-starter</artifactId>
-            <version>1.6.0</version>
+            <version>1.7.1</version>
         </dependency>
 
         <dependency>
@@ -99,7 +99,7 @@
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-test</artifactId>
-            <version>2.3.4.RELEASE</version>
+            <version>2.4.2</version>
             <scope>test</scope>
             <exclusions>
                 <exclusion>
@@ -206,12 +206,14 @@
         <dependency>
             <groupId>com.alibaba</groupId>
             <artifactId>fastjson</artifactId>
-            <version>1.2.73</version>
+            <version>1.2.75</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
             <artifactId>junit</artifactId>
         </dependency>
+
+
     </dependencies>
 
     <build>
Index: ../metertwo/src/main/java/com/jw/util/HexConversion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.util;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.jw.entity.DeviceHistory;\nimport com.jw.entity.iot4g.ThreadStatus;\nimport lombok.extern.slf4j.Slf4j;\n\nimport java.net.Socket;\nimport java.sql.*;\nimport java.text.DecimalFormat;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.*;\n\n/**\n * 进制转换\n */\n@Slf4j\npublic class HexConversion {\n\n    JSONObject saveIotData = new JSONObject();\n    DeviceHistory deviceHistory = new DeviceHistory();\n    String[] iotData;\n    String temp;\n    Integer dbId = 0;\n\n    ThreadStatus threadStatus = ThreadStatus.getInstance();\n\n    List<HashMap<String, Object>> list = new LinkedList<HashMap<String, Object>>();\n\n    /**\n     * 十六进制转十进制\n     *\n     * @param content\n     * @return\n     */\n    public static List covertToDecimal(String content) {\n        int i = 0;\n        String[] cons = content.split(\" \"); // 以,分割\n        List list = new ArrayList();\n        int temp[] = new int[cons.length];\n        for (i = 0; i < cons.length; i++) {\n            list.add(Integer.parseInt(cons[i], 16));\n        }\n        return list;\n    }\n\n    /**\n     * 十六进制转十进制浮点型\n     *\n     * @param\n     * @return\n     */\n    public static Double byte2int_Float(byte b[]) {\n        int bits = b[3] & 0xff | (b[2] & 0xff) << 8 | (b[1] & 0xff) << 16\n                | (b[0] & 0xff) << 24;\n\n        int sign = ((bits & 0x80000000) == 0) ? 1 : -1;\n        int exponent = ((bits & 0x7f800000) >> 23);\n        int mantissa = (bits & 0x007fffff);\n\n        mantissa |= 0x00800000;\n// Calculate the result:\n        Double f = (Double) (sign * mantissa * Math.pow(2, exponent - 150));\n\n        return f;\n    }\n\n    /**\n     * 十进制转十六进制\n     *\n     * @param content\n     * @return\n     */\n    public static List covertToHex(Integer content) {\n        int i = 0;\n        Integer cons = content; // 以,分割\n        List list = new ArrayList();\n        list.add(Integer.toHexString(cons));\n        return list;\n    }\n\n    /**\n     * 十六进制转ascii\n     *\n     * @param hex\n     * @return\n     */\n    public static String convertHexToString(String hex) {\n        StringBuilder sb = new StringBuilder();\n        StringBuilder temp = new StringBuilder();\n\n        for (int i = 0; i < hex.length() - 1; i += 2) {\n            String output = hex.substring(i, (i + 2));\n            int decimal = Integer.parseInt(output, 16);\n            sb.append((char) decimal);\n            temp.append(decimal);\n        }\n        return sb.toString();\n    }\n\n    /**\n     * ascii 转十六进制\n     *\n     * @param str\n     * @return\n     */\n    public static String convertStringToHex(String str) {\n\n        char[] chars = str.toCharArray();\n\n        StringBuffer hex = new StringBuffer();\n        for (int i = 0; i < chars.length; i++) {\n            hex.append(Integer.toHexString((int) chars[i]) + \" \");\n        }\n\n        return hex.toString();\n    }\n\n\n    /**\n     * 16进制表示的字符串转换为字节数组\n     *\n     * @param hexString 16进制表示的字符串\n     * @return byte[] 字节数组\n     */\n    public byte[] hexStringToByteArray(String hexString) {\n        hexString = hexString.replaceAll(\" \", \"\");\n        int len = hexString.length();\n        byte[] bytes = new byte[len / 2];\n        for (int i = 0; i < len; i += 2) {\n            // 两位一组，表示一个字节,把这样表示的16进制字符串，还原成一个字节\n            bytes[i / 2] = (byte) ((Character.digit(hexString.charAt(i), 16) << 4) + Character\n                    .digit(hexString.charAt(i + 1), 16));\n        }\n        return bytes;\n    }\n\n    /**\n     * byte转十六进制\n     *\n     * @param bytes\n     * @return\n     */\n    public String bytesToHexString(byte[] bytes) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < bytes.length; i++) {\n            String hex = Integer.toHexString(0xFF & bytes[i]);\n            if (hex.length() == 1) {\n                sb.append('0');\n            }\n            sb.append(hex);\n        }\n        return sb.toString();\n    }\n\n    /**\n     * 提取数据\n     *\n     * @param msg\n     * @return\n     */\n    public static String converToDate(String msg) {\n//        String[] arr = msg.split(\"7c\");\n\n        String[] arr = new String[4];\n        arr[0] = msg.substring(0, 11);\n        arr[1] = msg.substring(15, 26);\n        arr[2] = msg.substring(30, 41);\n        arr[3] = msg.substring(45);\n\n        String temp, a = \"\";\n        Float[] fls = new Float[arr.length - 1];\n        int i = 0;\n        for (i = 0; i < arr.length - 1; i++) {\n            temp = \"\";\n            temp = (arr[i].substring(6) + \" \" + arr[0].substring(0, 5)).replaceAll(\" \", \"\");\n            fls[i] = Float.intBitsToFloat(Integer.valueOf(temp.trim(), 16));\n            a += fls[i].toString() + \"|\";\n        }\n        return a + convertHexToString(arr[arr.length - 1].replaceAll(\" \", \"\"));\n    }\n\n    /**\n     * 更新模块状态信息\n     */\n    public void updateModuleAliveList(Socket socket, Map map) {\n        Integer deviceId = 0;\n        String iotModuleId = String.valueOf(map.get(\"iotDeviceId\"));\n        try {\n            Connection con = null;\n//            String url = \"jdbc:sqlserver://192.168.122.168:1433;DatabaseName=FlowMeterUDB\";\n            String url = \"jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB\";\n//            String url=\"jdbc:mariadb://58.87.118.156:3306/FlowMeterUDB?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\";\n//            String username = \"sa\";\n//            String username = \"root\";\n            String username = \"zero\";\n//            String password = \"Cl123456789\";\n            String password = \"123$%^\";\n            String driver = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n//            String driver = \"org.mariadb.jdbc.Driver\";\n            Class.forName(driver);\n            con = DriverManager.getConnection(url, username, password);\n            Statement st = con.createStatement();\n\n            ResultSet qrDeviceId = st.executeQuery(\"select top 1 * from FlowMeterUDB.dbo.realTimeFlowMeter where iotModuleID='\" + iotModuleId + \"'\");\n            while (qrDeviceId.next()) {\n                deviceId = qrDeviceId.getInt(\"DeviceID\");\n            }\n\n            if (!map.isEmpty() && map.get(\"opt\").equals(\"add\")) {\n                st.executeUpdate(\"update FlowMeterUDB.dbo.DeviceTable set iotStatus=0 where IotModuleID=\" + iotModuleId + \" and DeviceID=\" + deviceId);\n                log.info(\"iotStatusUpdateSuccess!\");\n            } else if (!map.isEmpty() && map.get(\"opt\").equals(\"remove\")) {\n                st.executeUpdate(\"update FlowMeterUDB.dbo.DeviceTable set iotStatus=1 where IotModuleID=\" + iotModuleId + \" and DeviceID=\" + deviceId);\n                log.info(\"iotStatusUpdateSuccess!\");\n            } else {\n                log.error(\"iotStatusUpdateError!\");\n            }\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (SQLException e) {\n\n            e.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    /**\n     * 存储IOT模块数据\n     */\n    public void storeDeviceHistoryFromIot(Map map, Socket soc) {\n        LocalDateTime now = LocalDateTime.now();\n        DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n        String nowStr = now.format(formatter2);\n\n\n        if (\"03\".equals(map.get(\"packType\")) || \"01\".equals(map.get(\"packType\"))) {\n            deviceHistory.setDeviceId((String) map.get(\"iotDeviceId\"));\n            // 在此将socket状态写进列表,然后更新数据\n            map.put(\"opt\", \"add\");\n            threadStatus.aliveList.put(soc, (String) map.get(\"iotDeviceId\"));\n            updateModuleAliveList(soc, map);\n\n        }\n        if (\"09\".equals(map.get(\"packType\"))) {\n            DecimalFormat decimalFormat = new DecimalFormat(\"0.0000000\");\n\n            deviceHistory.setAccumulatedFlow(0f); //净积累流量\n            deviceHistory.setNegativeAccumulatedFlow(0f); //负累计流量\n            deviceHistory.setTodayPositiveAccumulatedFlow(0f); //今日正积累流量\n            deviceHistory.setFlowArea(0f); //流体截面积\n\n            deviceHistory.setIotModuleID((String) map.get(\"iotDeviceId\"));\n            map.put(\"opt\", \"add\");\n            threadStatus.aliveList.put(soc, (String) map.get(\"iotDeviceId\"));\n            updateModuleAliveList(soc, map);\n\n//            deviceHistory.setDeviceId(String.valueOf(1101942582));\n            iotData = new String[Integer.valueOf(map.get(\"dataPackLength\").toString())];\n            temp = (String) map.get(\"dataIot\");\n            iotData = temp.split(\"\\\\|\");\n            deviceHistory.setInstantFlow(Float.valueOf(decimalFormat.format(Float.valueOf(iotData[0]) * 3600))); // 瞬时流量\n            deviceHistory.setInstantFlowRate(Float.valueOf(decimalFormat.format(Float.valueOf(iotData[1])))); //瞬时流速\n            deviceHistory.setPositiveAccumulatedFlow(Float.valueOf(decimalFormat.format(Float.valueOf(iotData[2])))); //正累计流量\n            deviceHistory.setIotErrorCode(iotData[3].replaceAll(\" \", \"\")); // 错误代码\n            temp = map.get(\"iotDeviceStatus\").toString();\n\n            deviceHistory.setMeasureDate(nowStr); //测量时间\n\n            temp = saveIotData.toJSONString(deviceHistory);\n            temp = temp.substring(0, temp.length() - 1);\n            temp = temp + \",'opt':'add'}\";\n            insertDeviceHistory(deviceHistory);\n\n            log.info(\"saveIotData\" + temp);\n        }\n    }\n\n    /**\n     * 存储数据\n     *\n     * @param devs\n     */\n    void insertDeviceHistory(DeviceHistory devs) {\n        this.deviceHistory = devs;\n        Integer ss = 0, deviceId = 0;\n        try {\n            Connection con = null;\n//            String url = \"jdbc:sqlserver://192.168.122.168:1433;DatabaseName=FlowMeterUDB\";\n            String url = \"jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB\";\n//            String url=\"jdbc:mariadb://58.87.118.156:3306/FlowMeterUDB?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\";\n//            String username = \"sa\";\n//            String username = \"root\";\n            String username = \"zero\";\n//            String password = \"Cl123456789\";\n            String password = \"123$%^\";\n            String driver = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n//            String driver = \"org.mariadb.jdbc.Driver\";\n            Class.forName(driver);\n            con = DriverManager.getConnection(url, username, password);\n            Statement st = con.createStatement();\n//            sqlserver 2016以下不需要\n//            ResultSet rs = st.executeQuery(\"select count(*) as row from DeviceHistory\");\n//            while (rs.next()) {\n//                ss = rs.getInt(\"row\");\n//            }\n            ResultSet qrDeviceId = st.executeQuery(\"select top 1 * from FlowMeterUDB.dbo.DeviceTable where IotModuleID='\" + deviceHistory.getIotModuleID() + \"'\");\n            while (qrDeviceId.next()) {\n                deviceId = qrDeviceId.getInt(\"DeviceID\");\n            }\n            deviceHistory.setDeviceId(deviceId.toString());\n\n            // 需要时打开\n\n//            st.execute(\"set identity_insert FlowMeterUDB.dbo.DeviceHistory on\");\n            st.executeUpdate(\"insert into DeviceHistory( deviceID,IotModuleID,iotErrorCode,instantflow, accumulatedflow, instantflowrate, positiveaccumulatedflow, negativeaccumulatedflow, measuredate, todaypositiveaccumulatedflow, flowarea) values \" +\n                    \"(\" + deviceHistory.getDeviceId() + \",\" + deviceHistory.getIotModuleID() + \",'\" + deviceHistory.getIotErrorCode() + \"',\" + deviceHistory.getInstantFlow() + \",\" + deviceHistory.getAccumulatedFlow() + \",\" +\n                    deviceHistory.getInstantFlowRate() + \",\" + deviceHistory.getPositiveAccumulatedFlow() + \",\" + deviceHistory.getNegativeAccumulatedFlow() +\n                    \",dateadd(hh,0,convert(varchar(100),getdate(),121)),\" + deviceHistory.getTodayPositiveAccumulatedFlow() + \",\" + deviceHistory.getFlowArea() + \")\");\n//            st.execute(\"set identity_insert FlowMeterUDB.dbo.DeviceHistory off\");\n\n            // mysql系列执行\n//            st.executeUpdate(\"insert into DeviceHistory(ID, deviceID,IotModuleID, instantflow, accumulatedflow, instantflowrate, positiveaccumulatedflow, negativeaccumulatedflow, measuredate, todaypositiveaccumulatedflow, flowarea) values \" +\n//                    \"(null,'\"+deviceHistory.getDeviceId()+\"','\" + deviceHistory.getIotModuleID() + \"','\" + deviceHistory.getInstantFlow() + \"','\" + deviceHistory.getAccumulatedFlow() + \"','\" +\n//                    deviceHistory.getInstantFlowRate() + \"','\" + deviceHistory.getPositiveAccumulatedFlow() + \"','\" + deviceHistory.getNegativeAccumulatedFlow() +\n//                    \"',date_add(now(),interval +8 hour),'\" + deviceHistory.getTodayPositiveAccumulatedFlow() + \"','\" + deviceHistory.getFlowArea() + \"')\");\n\n//            st.execute(\"set identity_insert FlowMeterUDB.dbo.DeviceHistory off\");\n\n//            convert(varchar(25),getdate(),120)\n\n            log.info(\"saveSucess!\");\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (SQLException e) {\n\n            e.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n    }\n\n    /**\n     * 处理id不对应\n     *\n     * @param dDeviceId  设备id\n     * @param dHistoryId 历史设备id\n     * @return\n     */\n    public String[] convertDbId(List<HashMap<String, Object>> dDeviceId, List<HashMap<String, Object>> dHistoryId) {\n        String[] arrDeviceId = new String[dDeviceId.size()];\n        String[] arrHistoryId = new String[dHistoryId.size()];\n        String[] arrayId = new String[dDeviceId.size()];\n        int i, j, k, l;\n\n        for (i = 0; i < dDeviceId.size(); i++) {\n            arrDeviceId[i] = String.valueOf(dDeviceId.get(i).get(\"tepId\"));\n        }\n\n        for (j = 0; j < dHistoryId.size(); j++) {\n            arrHistoryId[j] = String.valueOf(dHistoryId.get(j).get(\"tepId\"));\n        }\n\n        for (k = 0; k < arrHistoryId.length; k++) {\n            for (l = 0; l < arrDeviceId.length; l++) {\n                if (arrHistoryId[k].equalsIgnoreCase(arrDeviceId[l])) {\n                    arrayId[l] = arrHistoryId[k];\n                    break;\n                }\n            }\n        }\n\n        return arrayId;\n    }\n\n    public static String sqlQuerry(HashMap hashMap) {\n\n        String parameter, value_a, logicOption, relationship = \"\", querry = \"\"; // relationship\n        int i, j;\n\n        String[] dt1 = (String[]) hashMap.get(0);\n        String[] pt1 = (String[]) hashMap.get(1);\n        String[] pt2 = (String[]) hashMap.get(2);\n        String[] pt3 = (String[]) hashMap.get(3);\n\n        for (i = 0; i < dt1.length; i++) {\n            String[] arr = dt1[i].split(\"\\\\|\");\n            for (j = 0; j < 1; j++) {\n                parameter = pt1[Integer.parseInt(arr[j]) - 1];\n                logicOption = pt2[Integer.parseInt(arr[j + 1]) - 1];\n                value_a = arr[j + 2].replaceAll(\" \", \"\");\n                try {\n                    if (!\"undefined\".equals(arr[j + 3])) {\n                        relationship = pt3[Integer.parseInt(arr[j + 3]) - 1];\n                    }\n                } catch (ArrayIndexOutOfBoundsException e) {\n                    log.info(\"捕获关系搜索数组越界异常!\");\n                }\n                if (i == 0) {\n                    if (logicOption != \"like\") {\n                        querry += \" where \" + parameter + \" \" + logicOption + \" \" + value_a;\n                    } else {\n                        querry += \" where \" + parameter + \" \" + logicOption + \" N'%\" + value_a + \"%'\";\n                    }\n                } else {\n                    if (logicOption != \"like\") {\n                        querry += \" \" + relationship + \" \" + parameter + \" \" + logicOption + \" \" + value_a;\n                    } else {\n                        querry += \" \" + relationship + \" \" + parameter + \" \" + logicOption + \" N'%\" + value_a + \"%'\";\n                    }\n                }\n            }\n        }\n        return querry;\n    }\n\n    public static String checkForm(String value) {\n\n        switch (value) {\n            case \"deviceId\":\n                return \"DeviceID\";\n            case \"powerSourceVoltage\":\n                return \"PowerSource_Voltage\";\n            case \"powerSourcefrequency\":\n                return \"PowerSource_frequency\";\n            case \"lfcompany\":\n                return \"LFCompany\";\n            default:\n                char[] v1 = value.toCharArray();\n                String ss = v1[0] + \"\";\n                return ss.toUpperCase() + value.substring(1);\n        }\n\n    }\n\n//    public static void main(String[] args) {\n//\n////        System.out.println(convertStringToHex(\"01\"));\n//\n//    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/util/HexConversion.java b/../metertwo/src/main/java/com/jw/util/HexConversion.java
--- a/../metertwo/src/main/java/com/jw/util/HexConversion.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/util/HexConversion.java	(date 1606550050475)
@@ -4,6 +4,7 @@
 import com.jw.entity.DeviceHistory;
 import com.jw.entity.iot4g.ThreadStatus;
 import lombok.extern.slf4j.Slf4j;
+import org.springframework.stereotype.Component;
 
 import java.net.Socket;
 import java.sql.*;
@@ -16,18 +17,26 @@
  * 进制转换
  */
 @Slf4j
+@Component
 public class HexConversion {
 
+    ThreadStatus threadStatus = ThreadStatus.getInstance();
+
+    String url = threadStatus.dbUrl;
+    String username = threadStatus.dbUserName;
+    String password = threadStatus.dbPassword;
+    String driver = threadStatus.dbDriver;
+
     JSONObject saveIotData = new JSONObject();
     DeviceHistory deviceHistory = new DeviceHistory();
     String[] iotData;
     String temp;
     Integer dbId = 0;
 
-    ThreadStatus threadStatus = ThreadStatus.getInstance();
 
     List<HashMap<String, Object>> list = new LinkedList<HashMap<String, Object>>();
 
+
     /**
      * 十六进制转十进制
      *
@@ -190,14 +199,14 @@
         try {
             Connection con = null;
 //            String url = "jdbc:sqlserver://192.168.122.168:1433;DatabaseName=FlowMeterUDB";
-            String url = "jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB";
+//            String url = "jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB";
 //            String url="jdbc:mariadb://58.87.118.156:3306/FlowMeterUDB?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true";
 //            String username = "sa";
 //            String username = "root";
-            String username = "zero";
+//            String username = "zero";
 //            String password = "Cl123456789";
-            String password = "123$%^";
-            String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
+//            String password = "123$%^";
+//            String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
 //            String driver = "org.mariadb.jdbc.Driver";
             Class.forName(driver);
             con = DriverManager.getConnection(url, username, password);
@@ -217,6 +226,9 @@
             } else {
                 log.error("iotStatusUpdateError!");
             }
+
+            con.close();
+            st.close();
         } catch (ClassNotFoundException e) {
             e.printStackTrace();
         } catch (SQLException e) {
@@ -236,7 +248,6 @@
         DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
         String nowStr = now.format(formatter2);
 
-
         if ("03".equals(map.get("packType")) || "01".equals(map.get("packType"))) {
             deviceHistory.setDeviceId((String) map.get("iotDeviceId"));
             // 在此将socket状态写进列表,然后更新数据
@@ -285,19 +296,20 @@
      * @param devs
      */
     void insertDeviceHistory(DeviceHistory devs) {
+
         this.deviceHistory = devs;
         Integer ss = 0, deviceId = 0;
         try {
             Connection con = null;
 //            String url = "jdbc:sqlserver://192.168.122.168:1433;DatabaseName=FlowMeterUDB";
-            String url = "jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB";
+//            String url = "jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB";
 //            String url="jdbc:mariadb://58.87.118.156:3306/FlowMeterUDB?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true";
 //            String username = "sa";
 //            String username = "root";
-            String username = "zero";
+//            String username = "zero";
 //            String password = "Cl123456789";
-            String password = "123$%^";
-            String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
+//            String password = "123$%^";
+//            String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
 //            String driver = "org.mariadb.jdbc.Driver";
             Class.forName(driver);
             con = DriverManager.getConnection(url, username, password);
@@ -308,6 +320,8 @@
 //                ss = rs.getInt("row");
 //            }
             ResultSet qrDeviceId = st.executeQuery("select top 1 * from FlowMeterUDB.dbo.DeviceTable where IotModuleID='" + deviceHistory.getIotModuleID() + "'");
+
+
             while (qrDeviceId.next()) {
                 deviceId = qrDeviceId.getInt("DeviceID");
             }
@@ -333,10 +347,13 @@
 //            convert(varchar(25),getdate(),120)
 
             log.info("saveSucess!");
+
+            con.close();
+            st.close();
+
         } catch (ClassNotFoundException e) {
             e.printStackTrace();
         } catch (SQLException e) {
-
             e.printStackTrace();
         } catch (Exception e) {
             e.printStackTrace();
Index: ../metertwo/src/main/resources/static/page/welcome.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>首页</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../css/public.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\r\n    <style>\r\n    </style>\r\n</head>\r\n<body>\r\n<div class=\"layuimini-container\">\r\n    <div class=\"layuimini-main\">\r\n\r\n        <fieldset class=\"table-search-fieldset\">\r\n            <legend>查询条件</legend>\r\n            <div style=\"margin: 10px 10px 10px 10px\">\r\n                <form class=\"layui-form layui-form-pane\" action=\"\">\r\n                    <div class=\"layui-form-item\">\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <div id=\"device-search-condition\" style=\"width: 220px\"></div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"logic\" lay-verify=\"\" lay-filter=\"logic\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">?</option>\r\n                                <option value=\"2\">></option>\r\n                                <option value=\"3\">=</option>\r\n                                <option value=\"4\"><</option>\r\n                                <option value=\"5\">>=</option>\r\n                                <option value=\"6\"><=</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <!--                            <label class=\"layui-form-label\">参数值</label>-->\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" class=\"layui-input\" id=\"data-deviceHistory\" placeholder=\"请输入\"\r\n                                       lay-key=\"18\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"connect\" lay-verify=\"\" lay-filter=\"logic-connect\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">且</option>\r\n                                <option value=\"2\">或</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <!--                            <button type=\"button\" class=\"layui-btn\" onclick=\"getQuerryValue()\">调入</button>-->\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <button type=\"submit\" class=\"layui-btn layui-btn-primary\" lay-submit\r\n                                    lay-filter=\"data-search-btn\"><i class=\"layui-icon\">\uE615</i> 搜 索\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <div class=\"layui-tab layui-tab-brief\" lay-filter=\"docDemoTabBrief\">\r\n            <ul class=\"layui-tab-title\">\r\n                <li class=\"layui-this\">固定式</li>\r\n                <li>便携式</li>\r\n            </ul>\r\n            <div class=\"layui-tab-content\">\r\n                <!--        固定式        -->\r\n                <div class=\"layui-tab-item layui-show\">\r\n\r\n                    <script type=\"text/html\" id=\"toolbarDemo\">\r\n                        <div class=\"layui-btn-container\">\r\n                            <!--                <button class=\"layui-btn layui-btn-sm data-auto-refresh\"> 刷新间隔</button>-->\r\n                            <!--                <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除历史</button>-->\r\n                        </div>\r\n                    </script>\r\n\r\n                    <table class=\"layui-hide\" id=\"tbl-index-realTimeFixed\" lay-filter=\"currentTableFilter\"></table>\r\n\r\n                    <script type=\"text/html\" id=\"currentTableBar\">\r\n                        <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>\r\n                        <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n                    </script>\r\n                </div>\r\n                <div class=\"layui-tab-item\">\r\n                    <!--        便携式            -->\r\n\r\n                    <script type=\"text/html\" id=\"toolbarDemo-portable\">\r\n                        <div class=\"layui-btn-container\">\r\n                            <!--                <button class=\"layui-btn layui-btn-sm data-auto-refresh\"> 刷新间隔</button>-->\r\n                            <!--                <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除历史</button>-->\r\n                        </div>\r\n                    </script>\r\n\r\n                    <table class=\"layui-hide\" id=\"tbl-index-realTimePortable\" lay-filter=\"currentTableFilter\"></table>\r\n\r\n                    <script type=\"text/html\" id=\"currentTableBar-portable\">\r\n                        <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>\r\n                        <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n                    </script>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"layui-col-md12\">\r\n        <div class=\"layui-card\">\r\n            <div class=\"layui-card-header\"><i class=\"fa fa-line-chart icon\"></i>报表统计</div>\r\n            <div class=\"layui-card-body\">\r\n                <div id=\"echarts-records\" style=\"width: 100%;min-height:500px\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script src=\"../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\r\n<script src=\"../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\r\n<script src=\"../js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\r\n<script src=\"../js/xm-select/xm-select.js\" charset=\"utf-8\"></script>\r\n<script rel=\"script\" charset=\"utf-8\">\r\n\r\n    var statement = [];\r\n    var clickCount = 0;\r\n\r\n    var demo1 = xmSelect.render({\r\n        el: '#device-search-condition',\r\n        theme: {\r\n            color: '#5fb878',\r\n        },\r\n        toolbar: {\r\n            show: true,\r\n            list: ['ALL', 'CLEAR', 'REVERSE']\r\n        },\r\n        filterable: true,\r\n        paging: true,\r\n        pageSize: 4,\r\n        data: [\r\n            {name: '安装处所', value: 1},\r\n            {name: '安装位置', value: 2},\r\n            {name: '瞬时流量', value: 3},\r\n            {name: '瞬时流速', value: 4},\r\n            {name: '额定流量', value: 5},\r\n            {name: '设备名称', value: 6},\r\n            {name: '设备编号', value: 7},\r\n            {name: '状态代码', value: 8},\r\n            // {name: '测量时间', value: 9},\r\n        ],\r\n    })\r\n\r\n    function getQuerryValue(connect) {\r\n        let parameter; // parameter\r\n        let value_a; // value\r\n        let relationship; // relationship\r\n        let logicOption;\r\n        let selectArr = demo1.getValue();\r\n\r\n        parameter = selectArr[0].value;\r\n        logicOption = layui.jquery('#logic').find('option:selected').val();\r\n        value_a = layui.jquery(\"#data-deviceHistory\").val();\r\n\r\n        if (connect != \"undefined\") {\r\n            relationship = connect;\r\n        } else {\r\n            relationship = \"0\";\r\n        }\r\n        statement[clickCount++] = parameter + \"|\" + logicOption + \"|\" + value_a + \"|\" + relationship;\r\n\r\n        // console.log(parameter + \",\" + relationship + \",\" + value_a);\r\n        // document.getElementById('demo2-value').innerHTML = `\\ndemo2.getValue()\\n\\n` + JSON.stringify(selectArr, null, 2);\r\n\r\n    }\r\n</script>\r\n<script type=\"application/javascript\" rel=\"script\" charset=\"utf-8\">\r\n    var dt1 = 0, dt2 = 0;\r\n\r\n    // 固定式\r\n    layui.use(['form', 'table', 'laydate', 'element'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            element = layui.element,\r\n            layuimini = layui.layuimini;\r\n\r\n\r\n        let rangeData = \"\";\r\n        //日期时间范围选择\r\n        laydate.render({\r\n            elem: '#data-fixed'\r\n            , type: 'datetime'\r\n            , range: true //或 range: '~' 来自定义分割字符\r\n            , change: function (dates) {\r\n                rangeData = dates;\r\n            }\r\n        });\r\n\r\n        table.render({\r\n            elem: '#tbl-index-realTimeFixed',\r\n            url: baseUrl + 'deviceHistory/realTimeFixed',\r\n            headers: Authorization,\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                // {type: \"checkbox\", width: 50, fixed: \"left\"},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n                {field: 'installLine', width: 135, title: '安装线路'},\r\n                {field: 'installSite', width: 135, title: '安装处所'},\r\n                {field: 'installationPlace', width: 135, title: '安装位置'},\r\n\r\n                {field: 'name', width: 135, title: '设备名称'},\r\n                {field: 'deviceId', width: 135, title: '设备编号', sort: true},\r\n                {field: 'iotSta', width: 135, title: 'IOT状态', templet: \"#ioSta\"},\r\n                {field: 'iotErrorCode', width: 135, title: '状态代码', templet: \"#iotErrorCode\"},\r\n                {field: 'pipSta', width: 135, title: '管道状态', templet: \"#pipSta\"},\r\n\r\n                {field: 'flow', width: 135, title: '额定流量'},\r\n                {field: 'instantFlow', width: 135, title: '瞬时流量', sort: true},\r\n                // {field: 'accumulatedFlow', width: 135, title: '净积累流量'},\r\n                {field: 'instantFlowRate', title: '瞬时流速', width: 135, sort: true},\r\n                {field: 'positiveAccumulatedFlow', width: 135, title: '正累计流量', sort: true},\r\n                // {field: 'negativeAccumulatedFlow', width: 135, title: '负累计流量', sort: true},\r\n                {field: 'measureDate', width: 160, title: '测量时间', sort: true},\r\n                {field: 'iotModuleID', width: 135, title: 'IOT模块', templet: \"#isIot3\"},\r\n\r\n                // {field: 'todayPositiveAccumulatedFlow', width: 135, title: '今日正积累流量', sort: true},\r\n                // {title: '操作', minWidth: 50, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        // 监听搜索操作\r\n        form.on('submit(data-search-btn)', function (data) {\r\n            /*var result = JSON.stringify(data.field);\r\n             layer.alert(result, {\r\n             title: '最终的搜索信息'\r\n         });*/\r\n\r\n            clickCount = 0;\r\n            getQuerryValue(\"undefined\");\r\n\r\n            var obj = {\"queryData\": statement.toString()};\r\n\r\n            //执行搜索重载\r\n            table.reload('tbl-index-realTimeFixed', {\r\n                url: baseUrl + 'realTime/query',\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: 1,\r\n                limit: 10\r\n                , where: obj\r\n            }, 'data');\r\n\r\n            return false;\r\n        });\r\n\r\n\r\n        form.on('select(refresh)', function (data) {\r\n            var dt2 = dt1 + 11000;\r\n            dt1 = data.value;\r\n        });\r\n\r\n        // 自动刷新\r\n\r\n        setInterval(function () {\r\n            //定时加载\r\n            table.reload('tbl-index-realTimeFixed', {\r\n                url: baseUrl + 'deviceHistory/realTimeFixed',\r\n                method: 'get',\r\n                page: 1,\r\n                limit: 10\r\n            }, 'data');\r\n        }, 300000);\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function () {\r\n\r\n            var index = layer.open({\r\n                title: '添加用户',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: '/page/table/add.html',\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(currentTableFilter)', function (obj) {\r\n            console.log(obj)\r\n        });\r\n\r\n        //监听行单击事件\r\n        table.on('row(currentTableFilter)', function (obj) {\r\n\r\n            layui.jquery.ajax({\r\n                type: \"POST\",\r\n                url: baseUrl + \"deviceHistory/queryDevice\",\r\n                contentType: \"application/json\",\r\n                headers: auth,\r\n                dataType: \"json\",\r\n                data: JSON.stringify({\"deviceId\": obj.data.deviceId}),\r\n                success: function (data) {\r\n                    echarsData(data, obj.data,true);\r\n                }\r\n            });\r\n            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');\r\n        });\r\n\r\n\r\n        table.on('tool(currentTableFilter)', function (obj) {\r\n            var data = obj.data;\r\n            if (obj.event === 'edit') {\r\n\r\n                var index = layer.open({\r\n                    title: '编辑用户',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: '/page/table/edit.html',\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('真的删除行么', function (index) {\r\n                    obj.del();\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n</script>\r\n<script>\r\n\r\n  /*  $.ajax(\r\n        {\r\n            url:ctx+'admin',\r\n            type:'get',\r\n            dateType:'json',\r\n            beforeSend: function(xhr) {\r\n                xhr.setRequestHeader(\"token:\"+localStorage.getItem(\"token\"));\r\n            },\r\n            headers:{'Content-Type':'application/json;charset=utf8','token':localStorage.getItem(\"token\")},\r\n        }\r\n    );*/\r\n\r\n\r\n    var tms1;\r\n\r\n    // 便携式\r\n    layui.use(['form', 'table', 'laydate', 'element'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            element = layui.element,\r\n            layuimini = layui.layuimini;\r\n\r\n\r\n        /* let rangeData = \"\";\r\n         //日期时间范围选择\r\n         laydate.render({\r\n             elem: '#data-deviceHistory'\r\n             , type: 'datetime'\r\n             , range: true //或 range: '~' 来自定义分割字符\r\n             , change: function (dates) {\r\n                 rangeData = dates;\r\n             }\r\n         });*/\r\n\r\n        table.render({\r\n            elem: '#tbl-index-realTimePortable',\r\n            url: baseUrl + 'deviceHistory/realTimePortable',\r\n            headers: Authorization,\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                // {type: \"checkbox\", width: 50, fixed: \"left\"},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n                {field: 'installLine', width: 135, title: '安装线路'},\r\n                {field: 'installSite', width: 135, title: '安装处所'},\r\n                {field: 'installationPlace', width: 135, title: '安装位置'},\r\n\r\n                {field: 'name', width: 135, title: '设备名称'},\r\n                {field: 'deviceId', width: 135, title: '设备编号', sort: true},\r\n\r\n                // {field: 'iotSta', width: 135, title: 'IOT状态', templet: \"#ioSta\"},\r\n                // {field: 'iotErrorCode', width: 135, title: '状态代码', templet: \"#iotErrorCode\"},\r\n                {field: 'pipSta', width: 135, title: '管道状态', templet: \"#pipSta1\"},\r\n\r\n                {field: 'flow', width: 135, title: '额定流量'},\r\n                {field: 'instantFlow', width: 135, title: '瞬时流量', sort: true},\r\n                // {field: 'accumulatedFlow', width: 135, title: '净积累流量'},\r\n                {field: 'instantFlowRate', title: '瞬时流速', width: 135, sort: true},\r\n                {field: 'positiveAccumulatedFlow', width: 135, title: '正累计流量', sort: true},\r\n                // {field: 'negativeAccumulatedFlow', width: 135, title: '负累计流量', sort: true},\r\n                {field: 'measureDate', width: 160, title: '测量时间', sort: true},\r\n                // {field: 'iotModuleID', width: 135, title: 'IOT模块', templet: \"#isIot3\"},\r\n\r\n                // {field: 'todayPositiveAccumulatedFlow', width: 135, title: '今日正积累流量', sort: true},\r\n                // {title: '操作', minWidth: 50, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        /* // 监听搜索操作\r\n         form.on('submit(data-search-btn)', function (data) {\r\n             /!*var result = JSON.stringify(data.field);\r\n              layer.alert(result, {\r\n              title: '最终的搜索信息'\r\n          });*!/\r\n\r\n             var obj={\"queryData\":statement.toString()};\r\n\r\n             //执行搜索重载\r\n             table.reload('tbl-index-realTimePortable', {\r\n                 url: baseUrl + '/realTime/query',\r\n                 method: 'post'\r\n                 , contentType: \"application/json;charset=UTF-8\",\r\n                 dataType: 'json',\r\n                 page:1,\r\n                 limit:10\r\n                 , where:obj\r\n             }, 'data');\r\n\r\n             return false;\r\n         });*/\r\n\r\n        form.on('select(refresh)', function (data) {\r\n            var dt2 = dt1 + 11000;\r\n            dt1 = data.value;\r\n        });\r\n\r\n        // 自动刷新\r\n        startRealTime();\r\n        var st1; // 实时监测\r\n        function startRealTime() {\r\n            clearTimeout(st1); // 防止定时器重叠\r\n            st1 = setTimeout(function () {\r\n                //定时加载\r\n                table.reload('tbl-index-realTimePortable', {\r\n                    url: baseUrl + 'deviceHistory/realTimePortable',\r\n                    headers:Authorization,\r\n                    method: 'get',\r\n                    page: 1,\r\n                    limit: 10\r\n                }, 'data');\r\n                startRealTime();\r\n            }, 300000);\r\n        }\r\n        //\r\n        // function stopTimeout() {\r\n        //     clearTimeout(st1);\r\n        // }\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function () {\r\n\r\n            var index = layer.open({\r\n                title: '添加用户',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: '/page/table/add.html',\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(currentTableFilter)', function (obj) {\r\n            console.log(obj)\r\n        });\r\n\r\n        //监听行单击事件\r\n\r\n        table.on('row(currentTableFilter)', function (obj) {\r\n            layui.jquery.ajax({\r\n                type: \"POST\",\r\n                url: baseUrl + \"deviceHistory/queryDevice\",\r\n                contentType: \"application/json\",\r\n                headers: auth,\r\n                dataType: \"json\",\r\n                data: JSON.stringify({\"deviceId\": obj.data.deviceId}),\r\n                success: function (data) {\r\n                    echarsData(data, obj.data,true);\r\n                }\r\n            });\r\n            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');\r\n        });\r\n\r\n\r\n        table.on('tool(currentTableFilter)', function (obj) {\r\n            var data = obj.data;\r\n            if (obj.event === 'edit') {\r\n\r\n                var index = layer.open({\r\n                    title: '编辑用户',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: '/page/table/edit.html',\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('真的删除行么', function (index) {\r\n                    obj.del();\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n</script>\r\n\r\n<script type=\"text/html\" id=\"isIot3\">\r\n    {{d.iotModuleID||\"便携式\"}}\r\n</script>\r\n<script type=\"text/html\" id=\"ioSta\">\r\n    {{#  if(d.iotSta == '0'){ }}\r\n    <span><i style=\"background-color: #00FF00\" class=\"layui-badge-dot\"></i></span>\r\n    {{#  } else { }}\r\n    <span><i style=\"background-color: #FF5722\" class=\"layui-badge-dot\"></i></span>\r\n    {{#  } }}\r\n\r\n</script>\r\n<script type=\"text/html\" id=\"pipSta1\">\r\n    <span><i style=\"background-color: #00FF00\" class=\"layui-badge-dot\"></i></span>\r\n</script>\r\n<script type=\"text/html\" id=\"pipSta\">\r\n\r\n    {{#  if(d.iotErrorCode == 'R'){ }}\r\n    <span><i style=\"background-color: #00FF00\" class=\"layui-badge-dot\"></i></span>\r\n    {{#  } else { }}\r\n    <span><i style=\"background-color: #FF5722\" class=\"layui-badge-dot\"></i></span>\r\n    {{#  } }}\r\n\r\n</script>\r\n<script type=\"text/html\" id=\"iotErrorCode\">\r\n    {{#  if(d.iotErrorCode == 'R'){ }}\r\n    <span style=\"color: #00FF00\">正常</span>\r\n    {{#  } else if(d.iotErrorCode == 'I') { }}\r\n    <span>无信号</span>\r\n    {{#  } else if(d.iotErrorCode == 'G') { }}\r\n    <span style=\"color: chocolate\">调试</span>\r\n    {{#  } else { }}\r\n    <!--    <span style=\"color: #e02e2e\">异常</span>-->\r\n    {{#  } }}\r\n</script>\r\n<script src=\"../js/myJs/baoBiao.js\" charset=\"utf-8\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/welcome.html b/../metertwo/src/main/resources/static/page/welcome.html
--- a/../metertwo/src/main/resources/static/page/welcome.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/welcome.html	(date 1601191833147)
@@ -68,17 +68,17 @@
 
         <div class="layui-tab layui-tab-brief" lay-filter="docDemoTabBrief">
             <ul class="layui-tab-title">
-                <li class="layui-this">固定式</li>
-                <li>便携式</li>
+                <li class="layui-this">便携式</li>
+<!--                <li>固定式</li>-->
             </ul>
             <div class="layui-tab-content">
                 <!--        固定式        -->
-                <div class="layui-tab-item layui-show">
+                <!--<div class="layui-tab-item layui-show">
 
                     <script type="text/html" id="toolbarDemo">
                         <div class="layui-btn-container">
-                            <!--                <button class="layui-btn layui-btn-sm data-auto-refresh"> 刷新间隔</button>-->
-                            <!--                <button class="layui-btn layui-btn-sm layui-btn-danger data-delete-btn"> 删除历史</button>-->
+                            &lt;!&ndash;                <button class="layui-btn layui-btn-sm data-auto-refresh"> 刷新间隔</button>&ndash;&gt;
+                            &lt;!&ndash;                <button class="layui-btn layui-btn-sm layui-btn-danger data-delete-btn"> 删除历史</button>&ndash;&gt;
                         </div>
                     </script>
 
@@ -88,8 +88,8 @@
                         <a class="layui-btn layui-btn-xs data-count-edit" lay-event="edit">编辑</a>
                         <a class="layui-btn layui-btn-xs layui-btn-danger data-count-delete" lay-event="delete">删除</a>
                     </script>
-                </div>
-                <div class="layui-tab-item">
+                </div>-->
+                <div class="layui-tab-item layui-show">
                     <!--        便携式            -->
 
                     <script type="text/html" id="toolbarDemo-portable">
@@ -177,7 +177,7 @@
 
     }
 </script>
-<script type="application/javascript" rel="script" charset="utf-8">
+<!--<script type="application/javascript" rel="script" charset="utf-8">
     var dt1 = 0, dt2 = 0;
 
     // 固定式
@@ -220,7 +220,7 @@
 
                 {field: 'name', width: 135, title: '设备名称'},
                 {field: 'deviceId', width: 135, title: '设备编号', sort: true},
-                {field: 'iotSta', width: 135, title: 'IOT状态', templet: "#ioSta"},
+                // {field: 'iotSta', width: 135, title: 'IOT状态', templet: "#ioSta"},
                 {field: 'iotErrorCode', width: 135, title: '状态代码', templet: "#iotErrorCode"},
                 {field: 'pipSta', width: 135, title: '管道状态', templet: "#pipSta"},
 
@@ -327,7 +327,7 @@
                 dataType: "json",
                 data: JSON.stringify({"deviceId": obj.data.deviceId}),
                 success: function (data) {
-                    echarsData(data, obj.data,true);
+                    echarsData(data, obj.data, true);
                 }
             });
             obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
@@ -360,20 +360,20 @@
         });
     });
 
-</script>
+</script>-->
 <script>
 
-  /*  $.ajax(
-        {
-            url:ctx+'admin',
-            type:'get',
-            dateType:'json',
-            beforeSend: function(xhr) {
-                xhr.setRequestHeader("token:"+localStorage.getItem("token"));
-            },
-            headers:{'Content-Type':'application/json;charset=utf8','token':localStorage.getItem("token")},
-        }
-    );*/
+    /*  $.ajax(
+          {
+              url:ctx+'admin',
+              type:'get',
+              dateType:'json',
+              beforeSend: function(xhr) {
+                  xhr.setRequestHeader("token:"+localStorage.getItem("token"));
+              },
+              headers:{'Content-Type':'application/json;charset=utf8','token':localStorage.getItem("token")},
+          }
+      );*/
 
 
     var tms1;
@@ -440,14 +440,17 @@
             page: true
         });
 
-        /* // 监听搜索操作
+         // 监听搜索操作
          form.on('submit(data-search-btn)', function (data) {
-             /!*var result = JSON.stringify(data.field);
+             /*var result = JSON.stringify(data.field);
               layer.alert(result, {
               title: '最终的搜索信息'
-          });*!/
+          });*/
+
+             clickCount = 0;
+             getQuerryValue("undefined");
 
-             var obj={"queryData":statement.toString()};
+             var obj = {"queryData": statement.toString()};
 
              //执行搜索重载
              table.reload('tbl-index-realTimePortable', {
@@ -461,7 +464,7 @@
              }, 'data');
 
              return false;
-         });*/
+         });
 
         form.on('select(refresh)', function (data) {
             var dt2 = dt1 + 11000;
@@ -477,7 +480,7 @@
                 //定时加载
                 table.reload('tbl-index-realTimePortable', {
                     url: baseUrl + 'deviceHistory/realTimePortable',
-                    headers:Authorization,
+                    headers: Authorization,
                     method: 'get',
                     page: 1,
                     limit: 10
@@ -485,6 +488,7 @@
                 startRealTime();
             }, 300000);
         }
+
         //
         // function stopTimeout() {
         //     clearTimeout(st1);
@@ -532,7 +536,7 @@
                 dataType: "json",
                 data: JSON.stringify({"deviceId": obj.data.deviceId}),
                 success: function (data) {
-                    echarsData(data, obj.data,true);
+                    echarsData(data, obj.data, true);
                 }
             });
             obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
Index: ../metertwo/src/main/java/com/jw/util/RedisUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.util;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.StringRedisTemplate;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\n\n/**\n * redis 工具类\n */\n@Component\npublic class RedisUtil {\n\n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    @Autowired\n    private StringRedisTemplate stringRedisTemplate;\n\n    /**\n     * 指定缓存失效时间\n     *\n     * @param key  键\n     * @param time 时间(秒)\n     * @return\n     */\n    public boolean expire(String key, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.expire(key, time, TimeUnit.SECONDS);\n            }\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 根据key 获取过期时间\n     *\n     * @param key 键 不能为null\n     * @return 时间(秒) 返回0代表为永久有效\n     */\n    public long getExpire(String key) {\n        return redisTemplate.getExpire(key, TimeUnit.SECONDS);\n    }\n\n    /**\n     * 判断key是否存在\n     *\n     * @param key 键\n     * @return true 存在 false不存在\n     */\n    public boolean hasKey(String key) {\n        try {\n            return redisTemplate.hasKey(key);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 删除缓存\n     *\n     * @param key 可以传一个值 或多个\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void del(String... key) {\n        if (key != null && key.length > 0) {\n            if (key.length == 1) {\n                redisTemplate.delete(key[0]);\n            } else {\n                redisTemplate.delete(CollectionUtils.arrayToList(key));\n            }\n        }\n    }\n\n    // ============================String=============================\n\n    /**\n     * 普通缓存获取\n     *\n     * @param key 键\n     * @return 值\n     */\n    public Object get(String key) {\n        return key == null ? null : redisTemplate.opsForValue().get(key);\n    }\n\n    /**\n     * 普通缓存放入\n     *\n     * @param key   键\n     * @param value 值\n     * @return true成功 false失败\n     */\n    public boolean set(String key, Object value) {\n        try {\n            redisTemplate.opsForValue().set(key, value);\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n\n    }\n\n    /**\n     * 普通缓存放入并设置时间\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒) time要大于0 如果time小于等于0 将设置无限期\n     * @return true成功 false 失败\n     */\n    public boolean set(String key, Object value, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);\n            } else {\n                set(key, value);\n            }\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 递增\n     *\n     * @param key 键\n     * @param by  要增加几(大于0)\n     * @return\n     */\n    public long incr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"递增因子必须大于0\");\n        }\n        return redisTemplate.opsForValue().increment(key, delta);\n    }\n\n    /**\n     * 递减\n     *\n     * @param key   键\n     * @param delta 要减少几(小于0)\n     * @return\n     */\n    public long decr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"递减因子必须大于0\");\n        }\n        return redisTemplate.opsForValue().increment(key, -delta);\n    }\n\n    // ================================Map=================================\n\n    /**\n     * HashGet\n     *\n     * @param key  键 不能为null\n     * @param item 项 不能为null\n     * @return 值\n     */\n    public Object hget(String key, String item) {\n        return redisTemplate.opsForHash().get(key, item);\n    }\n\n    /**\n     * 获取hashKey对应的所有键值\n     *\n     * @param key 键\n     * @return 对应的多个键值\n     */\n    public Map<Object, Object> hmget(String key) {\n        return redisTemplate.opsForHash().entries(key);\n    }\n\n    /**\n     * HashSet\n     *\n     * @param key 键\n     * @param map 对应多个键值\n     * @return true 成功 false 失败\n     */\n    public boolean hmset(String key, Map<String, Object> map) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * HashSet 并设置时间\n     *\n     * @param key  键\n     * @param map  对应多个键值\n     * @param time 时间(秒)\n     * @return true成功 false失败\n     */\n    public boolean hmset(String key, Map<String, Object> map, long time) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 向一张hash表中放入数据,如果不存在将创建\n     *\n     * @param key   键\n     * @param item  项\n     * @param value 值\n     * @return true 成功 false失败\n     */\n    public boolean hset(String key, String item, Object value) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 向一张hash表中放入数据,如果不存在将创建\n     *\n     * @param key   键\n     * @param item  项\n     * @param value 值\n     * @param time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间\n     * @return true 成功 false失败\n     */\n    public boolean hset(String key, String item, Object value, long time) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 删除hash表中的值\n     *\n     * @param key  键 不能为null\n     * @param item 项 可以使多个 不能为null\n     */\n    public void hdel(String key, Object... item) {\n        redisTemplate.opsForHash().delete(key, item);\n    }\n\n    /**\n     * 判断hash表中是否有该项的值\n     *\n     * @param key  键 不能为null\n     * @param item 项 不能为null\n     * @return true 存在 false不存在\n     */\n    public boolean hHasKey(String key, String item) {\n        return redisTemplate.opsForHash().hasKey(key, item);\n    }\n\n    /**\n     * hash递增 如果不存在,就会创建一个 并把新增后的值返回\n     *\n     * @param key  键\n     * @param item 项\n     * @param by   要增加几(大于0)\n     * @return\n     */\n    public double hincr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, by);\n    }\n\n    /**\n     * hash递减\n     *\n     * @param key  键\n     * @param item 项\n     * @param by   要减少记(小于0)\n     * @return\n     */\n    public double hdecr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, -by);\n    }\n\n    // ============================set=============================\n\n    /**\n     * 根据key获取Set中的所有值\n     *\n     * @param key 键\n     * @return\n     */\n    public Set<Object> sGet(String key) {\n        try {\n            return redisTemplate.opsForSet().members(key);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    /**\n     * 根据value从一个set中查询,是否存在\n     *\n     * @param key   键\n     * @param value 值\n     * @return true 存在 false不存在\n     */\n    public boolean sHasKey(String key, Object value) {\n        try {\n            return redisTemplate.opsForSet().isMember(key, value);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 将数据放入set缓存\n     *\n     * @param key    键\n     * @param values 值 可以是多个\n     * @return 成功个数\n     */\n    public long sSet(String key, Object... values) {\n        try {\n            return redisTemplate.opsForSet().add(key, values);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return 0;\n        }\n    }\n\n    /**\n     * 将set数据放入缓存\n     *\n     * @param key    键\n     * @param time   时间(秒)\n     * @param values 值 可以是多个\n     * @return 成功个数\n     */\n    public long sSetAndTime(String key, long time, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().add(key, values);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return count;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return 0;\n        }\n    }\n\n    /**\n     * 获取set缓存的长度\n     *\n     * @param key 键\n     * @return\n     */\n    public long sGetSetSize(String key) {\n        try {\n            return redisTemplate.opsForSet().size(key);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return 0;\n        }\n    }\n\n    /**\n     * 移除值为value的\n     *\n     * @param key    键\n     * @param values 值 可以是多个\n     * @return 移除的个数\n     */\n    public long setRemove(String key, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().remove(key, values);\n            return count;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return 0;\n        }\n    }\n    // ===============================list=================================\n\n    /**\n     * 获取list缓存的内容\n     *\n     * @param key   键\n     * @param start 开始\n     * @param end   结束 0 到 -1代表所有值\n     * @return\n     */\n    public List<Object> lGet(String key, long start, long end) {\n        try {\n            return redisTemplate.opsForList().range(key, start, end);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    /**\n     * 获取list缓存的长度\n     *\n     * @param key 键\n     * @return\n     */\n    public long lGetListSize(String key) {\n        try {\n            return redisTemplate.opsForList().size(key);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return 0;\n        }\n    }\n\n    /**\n     * 通过索引 获取list中的值\n     *\n     * @param key   键\n     * @param index 索引 index>=0时， 0 表头，1 第二个元素，依次类推；index<0时，-1，表尾，-2倒数第二个元素，依次类推\n     * @return\n     */\n    public Object lGetIndex(String key, long index) {\n        try {\n            return redisTemplate.opsForList().index(key, index);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, Object value) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, Object value, long time) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, List<Object> value) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, List<Object> value, long time) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 根据索引修改list中的某条数据\n     *\n     * @param key   键\n     * @param index 索引\n     * @param value 值\n     * @return\n     */\n    public boolean lUpdateIndex(String key, long index, Object value) {\n        try {\n            redisTemplate.opsForList().set(key, index, value);\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n\n    /**\n     * 移除N个值为value\n     *\n     * @param key   键\n     * @param count 移除多少个\n     * @param value 值\n     * @return 移除的个数\n     */\n    public long lRemove(String key, long count, Object value) {\n        try {\n            Long remove = redisTemplate.opsForList().remove(key, count, value);\n            return remove;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return 0;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/util/RedisUtil.java b/../metertwo/src/main/java/com/jw/util/RedisUtil.java
--- a/../metertwo/src/main/java/com/jw/util/RedisUtil.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/util/RedisUtil.java	(date 1612406659930)
@@ -77,7 +77,7 @@
             if (key.length == 1) {
                 redisTemplate.delete(key[0]);
             } else {
-                redisTemplate.delete(CollectionUtils.arrayToList(key));
+                redisTemplate.delete(String.valueOf(CollectionUtils.arrayToList(key)));
             }
         }
     }
Index: ../metertwo/src/main/resources/static/page/login.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>精伍科技-登陆</title>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta http-equiv=\"Access-Control-Allow-Origin\" content=\"*\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"format-detection\" content=\"telephone=no\">\n\n    <link rel=\"stylesheet\" href=\"../libs/layui-v2.5.5/css/layui.css\" th:href=\"@{/libs/layui-v2.5.5/css/layui.css}\"\n          media=\"all\">\n    <!--[if lt IE 9]>\n    <script src=\"https://cdn.staticfile.org/html5shiv/r29/html5.min.js\"></script>\n    <script src=\"https://cdn.staticfile.org/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n    <style>\n        body {\n            background-image: url(\"/img/bg.jpg\");\n            height: 100%;\n            width: 100%;\n        }\n\n        #container {\n            height: 100%;\n            width: 100%;\n        }\n\n        input:-webkit-autofill {\n            -webkit-box-shadow: inset 0 0 0 1000px #fff;\n            background-color: transparent;\n        }\n\n        .admin-login-background {\n            width: 300px;\n            height: 300px;\n            position: absolute;\n            left: 50%;\n            top: 40%;\n            margin-left: -150px;\n            margin-top: -100px;\n        }\n\n        .admin-header {\n            text-align: center;\n            margin-bottom: 20px;\n            color: #ffffff;\n            font-weight: bold;\n            font-size: 40px\n        }\n\n        .admin-input {\n            border-top-style: none;\n            border-right-style: solid;\n            border-bottom-style: solid;\n            border-left-style: solid;\n            height: 50px;\n            width: 300px;\n            padding-bottom: 0px;\n        }\n\n        .admin-input::-webkit-input-placeholder {\n            color: #a78369\n        }\n\n        .layui-icon-username {\n            color: #a78369 !important;\n        }\n\n        .layui-icon-username:hover {\n            color: #9dadce !important;\n        }\n\n        .layui-icon-password {\n            color: #a78369 !important;\n        }\n\n        .layui-icon-password:hover {\n            color: #9dadce !important;\n        }\n\n        .admin-input-username {\n            border-top-style: solid;\n            border-radius: 10px 10px 0 0;\n        }\n\n        .admin-input-verify {\n            border-radius: 0 0 10px 10px;\n        }\n\n        .admin-button {\n            margin-top: 20px;\n            font-weight: bold;\n            font-size: 18px;\n            width: 300px;\n            height: 50px;\n            border-radius: 5px;\n            background-color: #a78369;\n            border: 1px solid #d8b29f\n        }\n\n        .admin-icon {\n            margin-left: 260px;\n            margin-top: 10px;\n            font-size: 30px;\n        }\n\n        i {\n            position: absolute;\n        }\n\n        .admin-captcha {\n            position: absolute;\n            margin-left: 205px;\n            margin-top: -40px;\n        }\n    </style>\n</head>\n<script th:inline=\"javascript\">\n    var ctx = [[@{/}]];\n</script>\n<body>\n<div id=\"container\">\n    <div>\n        <div class=\"admin-login-background\">\n            <div class=\"admin-header\">\n                <span>精伍</span>\n            </div>\n            <form class=\"layui-form\" action=\"\">\n                <div>\n                    <i class=\"layui-icon layui-icon-username admin-icon\"></i>\n                    <input type=\"text\" name=\"username\" placeholder=\"请输入用户名\" autocomplete=\"off\"\n                           class=\"layui-input admin-input admin-input-username\">\n                </div>\n                <div>\n                    <i class=\"layui-icon layui-icon-password admin-icon\"></i>\n                    <input type=\"password\" name=\"password\" placeholder=\"请输入密码\" autocomplete=\"off\"\n                           class=\"layui-input admin-input\">\n                </div>\n                <div>\n                    <input type=\"text\" name=\"verification\" placeholder=\"请输入验证码\" autocomplete=\"off\"\n                           class=\"layui-input admin-input admin-input-verify\">\n                    <img class=\"admin-captcha\" width=\"90\" height=\"30\" src=\"../img/captcha.jpg\"\n                         th:src=\"@{/api/sys/verificationCode}\">\n                </div>\n                <button class=\"layui-btn admin-button\" lay-submit=\"\" lay-filter=\"login\">登 陆</button>\n                <!--            <a class=\"layui-btn admin-button\" lay-submit=\"\" lay-filter=\"login\" target=\"_self\">登陆</a>-->\n            </form>\n        </div>\n    </div>\n    <script src=\"../libs/layui-v2.5.5/layui.js\" th:src=\"@{/libs/layui-v2.5.5/layui.js}\" charset=\"utf-8\"></script>\n    <script src=\"../js/lay-config.js\" th:src=\"@{/js/lay-config.js}\"></script>\n    <script>\n\n        layui.use(['form'], function () {\n            var $ = layui.jquery,\n                form = layui.form;\n            $(\".admin-captcha\").on('click', function () {\n                $(this).attr('src', (ctx + 'api/sys/verificationCode?').replace('//', '/') + Math.floor(Math.random() * 100));\n            });\n\n            // 登录过期的时候，跳出ifram框架\n            if (top.location != self.location) top.location = self.location;\n\n            // 进行登录操作\n            form.on('submit(login)', function (data) {\n                data = data.field;\n                if (data.username == '') {\n                    layer.msg('用户名不能为空');\n                    return false;\n                }\n                if (data.password == '') {\n                    layer.msg('密码不能为空');\n                    return false;\n                }\n                if (data.captcha == '') {\n                    layer.msg('验证码不能为空');\n                    return false;\n                }\n\n                /* if (!doValidForm('.layui-form')) {\n                     //没有通过验证\n                     return false;\n                 }*/\n\n                // console.log($(\".layui-form\").serialize());\n\n                $.ajax({\n                    type: \"POST\",\n                    url: baseUrl + \"sys/login\",\n                    data: $(\".layui-form\").serialize(),\n                    dataType: \"json\",\n                    success: function (data) {\n                        if (data.success == true) {\n                            layer.msg(data.message, {\n                                offset: '30%',\n                                time: 800\n                            }, function () {\n                                // console.log(\"ok\");\n                                // console.log(data.result.token);\n                                localStorage.setItem(\"token\", data.result.token);\n                                localStorage.setItem(\"user\", data.result.userInfo);\n                                window.location.href = \"/\";\n                            });\n                        } else {\n                            layer.msg(data.message, {\n                                icon: 2,\n                                offset: '30%',\n                                time: 2000\n                            });\n                            $(\".admin-captcha\").click();\n                        }\n                    }\n                });\n\n                return false;\n            });\n        });\n    </script>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/login.html b/../metertwo/src/main/resources/static/page/login.html
--- a/../metertwo/src/main/resources/static/page/login.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/login.html	(date 1606284646566)
@@ -2,7 +2,7 @@
 <html xmlns:th="http://www.thymeleaf.org">
 <head>
     <meta charset="UTF-8">
-    <title>精伍科技-登陆</title>
+    <title>JW-login</title>
     <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
     <meta http-equiv="Access-Control-Allow-Origin" content="*">
     <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
@@ -152,72 +152,6 @@
     </div>
     <script src="../libs/layui-v2.5.5/layui.js" th:src="@{/libs/layui-v2.5.5/layui.js}" charset="utf-8"></script>
     <script src="../js/lay-config.js" th:src="@{/js/lay-config.js}"></script>
-    <script>
-
-        layui.use(['form'], function () {
-            var $ = layui.jquery,
-                form = layui.form;
-            $(".admin-captcha").on('click', function () {
-                $(this).attr('src', (ctx + 'api/sys/verificationCode?').replace('//', '/') + Math.floor(Math.random() * 100));
-            });
-
-            // 登录过期的时候，跳出ifram框架
-            if (top.location != self.location) top.location = self.location;
-
-            // 进行登录操作
-            form.on('submit(login)', function (data) {
-                data = data.field;
-                if (data.username == '') {
-                    layer.msg('用户名不能为空');
-                    return false;
-                }
-                if (data.password == '') {
-                    layer.msg('密码不能为空');
-                    return false;
-                }
-                if (data.captcha == '') {
-                    layer.msg('验证码不能为空');
-                    return false;
-                }
-
-                /* if (!doValidForm('.layui-form')) {
-                     //没有通过验证
-                     return false;
-                 }*/
-
-                // console.log($(".layui-form").serialize());
-
-                $.ajax({
-                    type: "POST",
-                    url: baseUrl + "sys/login",
-                    data: $(".layui-form").serialize(),
-                    dataType: "json",
-                    success: function (data) {
-                        if (data.success == true) {
-                            layer.msg(data.message, {
-                                offset: '30%',
-                                time: 800
-                            }, function () {
-                                // console.log("ok");
-                                // console.log(data.result.token);
-                                localStorage.setItem("token", data.result.token);
-                                localStorage.setItem("user", data.result.userInfo);
-                                window.location.href = "/";
-                            });
-                        } else {
-                            layer.msg(data.message, {
-                                icon: 2,
-                                offset: '30%',
-                                time: 2000
-                            });
-                            $(".admin-captcha").click();
-                        }
-                    }
-                });
-
-                return false;
-            });
-        });
-    </script>
+    <script src="../js/myJs/login.js" th:src="@{/js/myJs/login.js}"></script>
 </body>
 </html>
\ No newline at end of file
Index: ../metertwo/src/main/java/com/jw/util/JdbcUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.util;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Component;\n\nimport java.net.Socket;\nimport java.sql.*;\nimport java.util.Map;\n\n@Component\n@Slf4j\npublic class JdbcUtil {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    /**\n     * 更新模块状态信息\n     */\n    public void updateModuleAliveList(Socket socket, Map map) {\n        Integer deviceId = 0;\n        String iotModuleId = String.valueOf(map.get(\"iotDeviceId\"));\n        try {\n            Connection con = null;\n            String url = \"jdbc:sqlserver://192.168.122.168:1433;DatabaseName=FlowMeterUDB\";\n//            String url = \"jdbc:sqlserver://119.27.186.231:1433;DatabaseName=FlowMeterUDB\";\n//            String url=\"jdbc:mariadb://58.87.118.156:3306/FlowMeterUDB?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\";\n            String username = \"sa\";\n//            String username = \"root\";\n//            String username = \"zero\";\n            String password = \"Cl123456789\";\n//            String password = \"123$%^\";\n            String driver = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n//            String driver = \"org.mariadb.jdbc.Driver\";\n            Class.forName(driver);\n            con = DriverManager.getConnection(url, username, password);\n            Statement st = con.createStatement();\n\n            ResultSet qrDeviceId = st.executeQuery(\"select top 1 * from FlowMeterUDB.dbo.realTimeFlowMeter where iotModuleID='\" + iotModuleId + \"'\");\n            while (qrDeviceId.next()) {\n                deviceId = qrDeviceId.getInt(\"DeviceID\");\n            }\n\n            if (!map.isEmpty() && map.get(\"opt\").equals(\"add\")) {\n                st.executeUpdate(\"update FlowMeterUDB.dbo.DeviceTable set iotStatus=0 where IotModuleID=\" + iotModuleId + \" and DeviceID=\" + deviceId);\n                log.info(\"iotStatusUpdateSuccess!\");\n            } else if (!map.isEmpty() && map.get(\"opt\").equals(\"remove\")) {\n                st.executeUpdate(\"update FlowMeterUDB.dbo.DeviceTable set iotStatus=1 where IotModuleID=\" + iotModuleId + \" and DeviceID=\" + deviceId);\n                log.info(\"iotStatusUpdateSuccess!\");\n            } else {\n                log.error(\"iotStatusUpdateError!\");\n            }\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (SQLException e) {\n\n            e.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/util/JdbcUtil.java b/../metertwo/src/main/java/com/jw/util/JdbcUtil.java
--- a/../metertwo/src/main/java/com/jw/util/JdbcUtil.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/util/JdbcUtil.java	(date 1606549995983)
@@ -52,6 +52,10 @@
             } else {
                 log.error("iotStatusUpdateError!");
             }
+
+            con.close();
+            st.close();
+
         } catch (ClassNotFoundException e) {
             e.printStackTrace();
         } catch (SQLException e) {
Index: ../metertwo/src/main/java/com/jw/config/WebMvcConfigurer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.config;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\r\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\r\n\r\n@Configuration\r\npublic class WebMvcConfigurer extends WebMvcConfigurerAdapter {\r\n    //跨域配置\r\n    @Bean\r\n    public WebMvcConfigurer corsConfigurer() {\r\n        return new WebMvcConfigurer() {\r\n            @Override\r\n            //重写父类提供的跨域请求处理的接口\r\n            public void addCorsMappings(CorsRegistry registry) {\r\n                //添加映射路径\r\n                registry.addMapping(\"/**\")\r\n                        //放行哪些原始域\r\n                        .allowedOrigins(\"*\")\r\n                        //是否发送Cookie信息\r\n                        .allowCredentials(true)\r\n                        //放行哪些原始域(请求方式)\r\n                        .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\")\r\n                        //放行哪些原始域(头部信息)\r\n                        .allowedHeaders(\"*\")\r\n                        //暴露哪些头部信息（因为跨域访问默认不能获取全部头部信息）\r\n                        .exposedHeaders(\"Header1\", \"Header2\");\r\n            }\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/config/WebMvcConfigurer.java b/../metertwo/src/main/java/com/jw/config/WebMvcConfigurer.java
--- a/../metertwo/src/main/java/com/jw/config/WebMvcConfigurer.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/config/WebMvcConfigurer.java	(date 1612408840742)
@@ -17,7 +17,8 @@
                 //添加映射路径
                 registry.addMapping("/**")
                         //放行哪些原始域
-                        .allowedOrigins("*")
+//                        .allowedOrigins("*")
+                        .allowedOriginPatterns("*")
                         //是否发送Cookie信息
                         .allowCredentials(true)
                         //放行哪些原始域(请求方式)
Index: ../metertwo/src/main/java/com/jw/config/SwaggerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.config;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport springfox.documentation.builders.ApiInfoBuilder;\r\nimport springfox.documentation.builders.PathSelectors;\r\nimport springfox.documentation.builders.RequestHandlerSelectors;\r\nimport springfox.documentation.spi.DocumentationType;\r\nimport springfox.documentation.spring.web.plugins.Docket;\r\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\r\n\r\n@Configuration\r\n@EnableSwagger2\r\npublic class SwaggerConfig {\r\n    @Bean\r\n    public Docket createRestApi() {\r\n        return new Docket(DocumentationType.SWAGGER_2)\r\n                .pathMapping(\"/\")\r\n                .select()\r\n                .apis(RequestHandlerSelectors.basePackage(\"com.jw.controller\"))\r\n                .paths(PathSelectors.any())\r\n                .build().apiInfo(new ApiInfoBuilder()\r\n                        .title(\"项目\")\r\n                        .description(\"api文档\")\r\n                        .version(\"0.01\")\r\n//                        .contact(new Contact(\"啊啊啊啊\",\"blog.csdn.net\",\"aaa@gmail.com\"))\r\n//                        .license(\"The Apache License\")\r\n//                        .licenseUrl(\"http://www.baidu.com\")\r\n                        .build());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/config/SwaggerConfig.java b/../metertwo/src/main/java/com/jw/config/SwaggerConfig.java
--- a/../metertwo/src/main/java/com/jw/config/SwaggerConfig.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/config/SwaggerConfig.java	(date 1612428799180)
@@ -2,6 +2,7 @@
 
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Profile;
 import springfox.documentation.builders.ApiInfoBuilder;
 import springfox.documentation.builders.PathSelectors;
 import springfox.documentation.builders.RequestHandlerSelectors;
@@ -11,6 +12,7 @@
 
 @Configuration
 @EnableSwagger2
+@Profile({"dev"})
 public class SwaggerConfig {
     @Bean
     public Docket createRestApi() {
@@ -20,8 +22,8 @@
                 .apis(RequestHandlerSelectors.basePackage("com.jw.controller"))
                 .paths(PathSelectors.any())
                 .build().apiInfo(new ApiInfoBuilder()
-                        .title("项目")
-                        .description("api文档")
+                        .title("project")
+                        .description("apiDocument")
                         .version("0.01")
 //                        .contact(new Contact("啊啊啊啊","blog.csdn.net","aaa@gmail.com"))
 //                        .license("The Apache License")
Index: ../metertwo/src/main/java/com/jw/config/Scheduler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.config;\n\nimport com.jw.service.impl.DeviceHistoryImpl;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Component;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\n@Component\n@Slf4j\npublic class Scheduler{\n    private static final SimpleDateFormat dateFormat = new SimpleDateFormat(\"HH:mm:ss\");\n\n    @Autowired\n    private DeviceHistoryImpl deviceHistoryImpl;\n        // 一分钟更新一次\n\n    @Scheduled(initialDelay=5*1000, fixedDelay=120*1000)\n    public void testTasks() {\n        log.info(\"刷新：\" + dateFormat.format(new Date()));\n        deviceHistoryImpl.querryRealTimeData();\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/config/Scheduler.java b/../metertwo/src/main/java/com/jw/config/Scheduler.java
--- a/../metertwo/src/main/java/com/jw/config/Scheduler.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/config/Scheduler.java	(date 1601195517397)
@@ -21,7 +21,7 @@
     @Scheduled(initialDelay=5*1000, fixedDelay=120*1000)
     public void testTasks() {
         log.info("刷新：" + dateFormat.format(new Date()));
-        deviceHistoryImpl.querryRealTimeData();
+//        deviceHistoryImpl.querryRealTimeData();
     }
 
 }
\ No newline at end of file
Index: ../metertwo/src/main/java/com/jw/config/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.config;\n\nimport com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;\nimport com.fasterxml.jackson.annotation.PropertyAccessor;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping;\nimport org.springframework.cache.CacheManager;\nimport org.springframework.cache.annotation.CachingConfigurerSupport;\nimport org.springframework.cache.annotation.EnableCaching;\nimport org.springframework.cache.interceptor.KeyGenerator;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.cache.RedisCacheConfiguration;\nimport org.springframework.data.redis.cache.RedisCacheManager;\nimport org.springframework.data.redis.cache.RedisCacheWriter;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.serializer.*;\n\nimport javax.annotation.Resource;\nimport java.io.Serializable;\nimport java.lang.reflect.Method;\nimport java.time.Duration;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\nimport static java.util.Collections.singletonMap;\n\n@Configuration\n@EnableCaching // 开启缓存支持\npublic class RedisConfig extends CachingConfigurerSupport {\n\n    @Resource\n    private LettuceConnectionFactory lettuceConnectionFactory;\n\n    /**\n     * 自定义策略生成的key\n     * 自定义的缓存key的生成策略 若想使用这个key\n     * 只需要讲注解上keyGenerator的值设置为keyGenerator即可</br>\n     */\n    @Override\n    @Bean\n    public KeyGenerator keyGenerator() {\n        return new KeyGenerator() {\n            @Override\n            public Object generate(Object target, Method method, Object... params) {\n                StringBuilder sb = new StringBuilder();\n                sb.append(target.getClass().getName());\n                sb.append(method.getDeclaringClass().getName());\n                Arrays.stream(params).map(Object::toString).forEach(sb::append);\n                return sb.toString();\n            }\n        };\n    }\n\n    /**\n     * RedisTemplate配置\n     */\n    @Bean\n    public RedisTemplate<String, Object> redisTemplate(LettuceConnectionFactory lettuceConnectionFactory) {\n        // 设置序列化\n        Jackson2JsonRedisSerializer<Object> jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer<Object>(Object.class);\n        ObjectMapper om = new ObjectMapper();\n        om.setVisibility(PropertyAccessor.ALL, Visibility.ANY);\n        om.enableDefaultTyping(DefaultTyping.NON_FINAL);\n        jackson2JsonRedisSerializer.setObjectMapper(om);\n        // 配置redisTemplate\n        RedisTemplate<String, Object> redisTemplate = new RedisTemplate<String, Object>();\n        redisTemplate.setConnectionFactory(lettuceConnectionFactory);\n        RedisSerializer<?> stringSerializer = new StringRedisSerializer();\n        redisTemplate.setKeySerializer(stringSerializer);// key序列化\n        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);// value序列化\n        redisTemplate.setHashKeySerializer(stringSerializer);// Hash key序列化\n        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);// Hash value序列化\n        redisTemplate.afterPropertiesSet();\n        return redisTemplate;\n    }\n\n    /**\n     * 缓存配置管理器\n     */\n    @Bean\n    public CacheManager cacheManager(LettuceConnectionFactory factory) {\n        // 配置序列化\n        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig().entryTtl(Duration.ofHours(1));\n        RedisCacheConfiguration redisCacheConfiguration = config.serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(new StringRedisSerializer()))\n                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(new GenericJackson2JsonRedisSerializer()));\n\n        // 以锁写入的方式创建RedisCacheWriter对象\n        //RedisCacheWriter writer = RedisCacheWriter.lockingRedisCacheWriter(factory);\n        // 创建默认缓存配置对象\n        /* 默认配置，设置缓存有效期 1小时*/\n        //RedisCacheConfiguration defaultCacheConfig = RedisCacheConfiguration.defaultCacheConfig().entryTtl(Duration.ofHours(1));\n        /* 配置test的超时时间为120s*/\n        RedisCacheManager cacheManager = RedisCacheManager.builder(RedisCacheWriter.lockingRedisCacheWriter(factory)).cacheDefaults(redisCacheConfiguration)\n                .withInitialCacheConfigurations(singletonMap(\"hotData\", RedisCacheConfiguration.defaultCacheConfig().entryTtl(Duration.ofMinutes(3)).disableCachingNullValues()))\n                .transactionAware().build();\n        return cacheManager;\n    }\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/config/RedisConfig.java b/../metertwo/src/main/java/com/jw/config/RedisConfig.java
--- a/../metertwo/src/main/java/com/jw/config/RedisConfig.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/config/RedisConfig.java	(date 1613803760317)
@@ -28,7 +28,7 @@
 import static java.util.Collections.singletonMap;
 
 @Configuration
-@EnableCaching // 开启缓存支持
+@EnableCaching
 public class RedisConfig extends CachingConfigurerSupport {
 
     @Resource
Index: ../metertwo/src/main/java/com/jw/config/ShiroConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.config;\n\nimport com.jw.common.filter.JwtFilter;\nimport com.jw.shiro.ShiroRealm;\nimport org.apache.shiro.mgt.DefaultSessionStorageEvaluator;\nimport org.apache.shiro.mgt.DefaultSubjectDAO;\nimport org.apache.shiro.mgt.SecurityManager;\nimport org.apache.shiro.spring.LifecycleBeanPostProcessor;\nimport org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor;\nimport org.apache.shiro.spring.web.ShiroFilterFactoryBean;\nimport org.apache.shiro.web.mgt.DefaultWebSecurityManager;\nimport org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.DependsOn;\n\nimport javax.servlet.Filter;\nimport java.util.HashMap;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\n/**\n * @description: shiro 配置类\n */\n\n@Configuration\npublic class ShiroConfig {\n\n    /**\n     * Filter Chain定义说明\n     * <p>\n     * 1、一个URL可以配置多个Filter，使用逗号分隔\n     * 2、当设置多个过滤器时，全部验证通过，才视为通过\n     * 3、部分过滤器可指定参数，如perms，roles\n     */\n    @Bean(\"shiroFilter\")\n    public ShiroFilterFactoryBean shiroFilter(SecurityManager securityManager) {\n        ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();\n        shiroFilterFactoryBean.setSecurityManager(securityManager);\n        // 拦截器\n        Map<String, String> filterChainDefinitionMap = new LinkedHashMap<String, String>();\n        // 配置不会被拦截的链接 顺序判断\n        filterChainDefinitionMap.put(\"/api/sys/login\", \"anon\"); //登录接口排除\n        filterChainDefinitionMap.put(\"/api/sys/logout\", \"anon\"); //登出接口排除\n        filterChainDefinitionMap.put(\"/api/sys/verificationCode\", \"anon\"); //登出接口排除\n        filterChainDefinitionMap.put(\"/api/sys/common/403\", \"anon\"); //登出接口排除\n        filterChainDefinitionMap.put(\"/api/sys/common/404\", \"anon\"); //登出接口排除\n        filterChainDefinitionMap.put(\"/\", \"anon\");\n        filterChainDefinitionMap.put(\"/**/*.js\", \"anon\");\n        filterChainDefinitionMap.put(\"/**/*.css\", \"anon\");\n        filterChainDefinitionMap.put(\"/**/*.html\", \"anon\");\n        filterChainDefinitionMap.put(\"/**/*.jpg\", \"anon\");\n        filterChainDefinitionMap.put(\"/**/*.png\", \"anon\");\n        filterChainDefinitionMap.put(\"/**/*.ico\", \"anon\");\n\n        filterChainDefinitionMap.put(\"/druid/**\", \"anon\");\n        filterChainDefinitionMap.put(\"/libs/**\", \"anon\");\n        filterChainDefinitionMap.put(\"/**\", \"authc\");\n\n        // 添加自己的过滤器并且取名为jwt\n        Map<String, Filter> filterMap = new HashMap<String, Filter>(1);\n        filterMap.put(\"jwt\", new JwtFilter());\n        shiroFilterFactoryBean.setFilters(filterMap);\n        // <!-- 过滤链定义，从上向下顺序执行，一般将/**放在最为下边\n        filterChainDefinitionMap.put(\"/**\", \"jwt\");\n\n        // 未授权界面返回JSON\n        shiroFilterFactoryBean.setUnauthorizedUrl(\"/api/sys/common/403\");\n        shiroFilterFactoryBean.setLoginUrl(\"/api/sys/login\");\n        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);\n        return shiroFilterFactoryBean;\n    }\n\n    @Bean(\"securityManager\")\n    public DefaultWebSecurityManager securityManager(ShiroRealm myRealm) {\n        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();\n        securityManager.setRealm(myRealm);\n\n        /*\n         * 关闭shiro自带的session，详情见文档\n         * http://shiro.apache.org/session-management.html#SessionManagement-\n         * StatelessApplications%28Sessionless%29\n         */\n        DefaultSubjectDAO subjectDAO = new DefaultSubjectDAO();\n        DefaultSessionStorageEvaluator defaultSessionStorageEvaluator = new DefaultSessionStorageEvaluator();\n        defaultSessionStorageEvaluator.setSessionStorageEnabled(false);\n        subjectDAO.setSessionStorageEvaluator(defaultSessionStorageEvaluator);\n        securityManager.setSubjectDAO(subjectDAO);\n\n        return securityManager;\n    }\n\n    /**\n     * 添加注解支持\n     *\n     * @return\n     */\n    @Bean\n    @DependsOn(\"lifecycleBeanPostProcessor\")\n    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {\n        DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator = new DefaultAdvisorAutoProxyCreator();\n        defaultAdvisorAutoProxyCreator.setProxyTargetClass(true);\n        return defaultAdvisorAutoProxyCreator;\n    }\n\n    @Bean\n    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {\n        return new LifecycleBeanPostProcessor();\n    }\n\n    @Bean\n    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(DefaultWebSecurityManager securityManager) {\n        AuthorizationAttributeSourceAdvisor advisor = new AuthorizationAttributeSourceAdvisor();\n        advisor.setSecurityManager(securityManager);\n        return advisor;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/config/ShiroConfig.java b/../metertwo/src/main/java/com/jw/config/ShiroConfig.java
--- a/../metertwo/src/main/java/com/jw/config/ShiroConfig.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/config/ShiroConfig.java	(date 1612428357011)
@@ -45,16 +45,21 @@
         filterChainDefinitionMap.put("/api/sys/verificationCode", "anon"); //登出接口排除
         filterChainDefinitionMap.put("/api/sys/common/403", "anon"); //登出接口排除
         filterChainDefinitionMap.put("/api/sys/common/404", "anon"); //登出接口排除
-        filterChainDefinitionMap.put("/", "anon");
+        filterChainDefinitionMap.put("/", "anon"); // 重要
+        filterChainDefinitionMap.put("/swagger-ui.html", "anon");
+        filterChainDefinitionMap.put("/swagger-resources/**", "anon");
+        filterChainDefinitionMap.put("/v2/**", "anon");
         filterChainDefinitionMap.put("/**/*.js", "anon");
         filterChainDefinitionMap.put("/**/*.css", "anon");
         filterChainDefinitionMap.put("/**/*.html", "anon");
         filterChainDefinitionMap.put("/**/*.jpg", "anon");
         filterChainDefinitionMap.put("/**/*.png", "anon");
         filterChainDefinitionMap.put("/**/*.ico", "anon");
-
         filterChainDefinitionMap.put("/druid/**", "anon");
         filterChainDefinitionMap.put("/libs/**", "anon");
+
+        filterChainDefinitionMap.put("/docs/**", "authc"); // tomcat验证
+        filterChainDefinitionMap.put("/manager/**", "authc");
         filterChainDefinitionMap.put("/**", "authc");
 
         // 添加自己的过滤器并且取名为jwt
Index: ../metertwo/src/main/java/com/jw/entity/Device.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.entity;\r\n\r\nimport com.baomidou.mybatisplus.annotation.IdType;\r\nimport com.baomidou.mybatisplus.annotation.TableField;\r\nimport com.baomidou.mybatisplus.annotation.TableId;\r\nimport com.baomidou.mybatisplus.annotation.TableName;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\nimport org.springframework.transaction.annotation.Transactional;\r\n\r\nimport java.beans.Transient;\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\n\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@TableName(value = \"DeviceTable\")\r\npublic class Device implements Serializable {\r\n\r\n    @TableId(value = \"ID\", type = IdType.AUTO)//指定主键名及自增id\r\n    private Integer id;//序号\r\n\r\n    @TableField(value = \"DeviceId\", exist = true)//指定字段名\r\n    private String deviceId;//设备编号\r\n\r\n    @TableField(value = \"IotModuleID\",exist = true)//指定字段名\r\n    private String IotModuleID;//模块设备编号\r\n\r\n    @TableField(value = \"Name\", exist = true)\r\n    private String name; //设备名称\r\n\r\n    @TableField(value = \"PowerSource_Voltage\", exist = true)\r\n    private Float powerSourceVoltage;//电压\r\n\r\n    @TableField(value = \"PowerSource_frequency\", exist = true)\r\n    private Float powerSourcefrequency;//电源频率\r\n\r\n    @TableField(value = \"ElectricCurrent\", exist = true)\r\n    private Float electricCurrent;//电流\r\n\r\n    @TableField(value = \"Flow\", exist = true)\r\n    private Float flow;// 额定流量\r\n\r\n    @TableField(value = \"Lift\", exist = true)\r\n    private Float lift;//扬程\r\n\r\n    @TableField(value = \"Weight\", exist = true)\r\n    private Float weight;//重量\r\n\r\n    @TableField(value = \"Power\", exist = true)\r\n    private Float power;//功率\r\n\r\n    @TableField(value = \"InsulateGrade\", exist = true)\r\n    private String insulateGrade;//绝缘等级\r\n\r\n    @TableField(value = \"RotateSpeed\", exist = true)\r\n    private Float rotateSpeed;//转速\r\n\r\n    @TableField(value = \"Caliber\", exist = true)\r\n    private Float caliber;//口径\r\n\r\n    @TableField(value = \"LFDate\", exist = true)\r\n    private String lfdate;//出厂时间\r\n\r\n    @TableField(value = \"LFCompany\", exist = true)\r\n    private String lFCompany;//出厂公司\r\n\r\n    @TableField(value = \"InstallSite\", exist = true)\r\n    private String installSite;//安装位置\r\n\r\n    @TableField(value = \"installationPlace\", exist = true)\r\n    private String installationPlace; //安装处所\r\n\r\n    @TableField(value = \"installLine\", exist = true)\r\n    private String installLine; // 安装线路\r\n\r\n    @TableField(value = \"PipelineOD\", exist = true)\r\n    private Float pipelineOD;//管道外径\r\n\r\n    @TableField(value = \"PipelineThickness\", exist = true)\r\n    private Float pipelineThickness;//管壁厚度\r\n\r\n    @TableField(value = \"PipelineTexture\", exist = true)\r\n    private String pipelineTexture;//管道材质\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/entity/Device.java b/../metertwo/src/main/java/com/jw/entity/Device.java
--- a/../metertwo/src/main/java/com/jw/entity/Device.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/entity/Device.java	(date 1601173917373)
@@ -22,6 +22,9 @@
     @TableId(value = "ID", type = IdType.AUTO)//指定主键名及自增id
     private Integer id;//序号
 
+    @TableField(value = "InspectionPointID", exist = true)//指定字段名
+    private String inspectionPointId;//巡检编号
+
     @TableField(value = "DeviceId", exist = true)//指定字段名
     private String deviceId;//设备编号
 
Index: ../metertwo/src/main/resources/static/page/system/role/role.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>角色管理</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"../../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../../css/public.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../../libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\r\n</head>\r\n<body>\r\n<div class=\"layuimini-container\">\r\n    <div class=\"layuimini-main\">\r\n        <!--<fieldset class=\"table-search-fieldset\">\r\n            <legend>查询条件</legend>\r\n            <div style=\"margin: 10px 10px 10px 10px\">\r\n                <form class=\"layui-form layui-form-pane\" action=\"\">\r\n                    <div class=\"layui-form-item\">\r\n                        <div class=\"layui-inline\">\r\n                            <label class=\"layui-form-label\">角色名称</label>\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" name=\"deviceName\" autocomplete=\"off\" class=\"layui-input\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"layui-inline\">\r\n                            <label class=\"layui-form-label\">权限字符</label>\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" name=\"installSite\" autocomplete=\"off\" class=\"layui-input\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"layui-inline\">\r\n                            <label class=\"layui-form-label\">角色状态</label>\r\n                            <div class=\"layui-input-inline\">\r\n                                <select name=\"compare\" lay-verify=\"\">\r\n                                    <option value=\"\">请选择</option>\r\n                                    <option value=\"0\">正常</option>\r\n                                    <option value=\"1\">停用</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"layui-inline\">\r\n                            <label class=\"layui-form-label\">创建时间</label>\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" class=\"layui-input\" id=\"data-user\" placeholder=\"开始 到 结束\"\r\n                                       lay-key=\"18\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"layui-inline\">\r\n                            <button type=\"submit\" class=\"layui-btn layui-btn-primary\" lay-submit\r\n                                    lay-filter=\"data-search-btn\"><i class=\"layui-icon\">\uE615</i> 查 询\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>-->\r\n\r\n        <script type=\"text/html\" id=\"toolbarDemo\">\r\n            <div class=\"layui-btn-container\">\r\n                <button class=\"layui-btn layui-btn-sm data-add-btn\" lay-event=\"add\"> 添加角色</button>\r\n                <!--                        <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除角色</button>-->\r\n            </div>\r\n        </script>\r\n\r\n        <table class=\"layui-hide\" id=\"currentTableId\" lay-filter=\"currentTableFilter\"></table>\r\n\r\n        <script type=\"text/html\" id=\"currentTableBar\">\r\n            <a class=\"layui-btn layui-btn-xs layui-btn-normal\" lay-event=\"perm\">权限</a>\r\n            <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>\r\n            <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n        </script>\r\n\r\n    </div>\r\n    <!--<div class=\"layui-col-md12\">\r\n        <div class=\"layui-card\">\r\n            <div class=\"layui-card-header\"><i class=\"fa fa-line-chart icon\"></i>报表统计</div>\r\n            <div class=\"layui-card-body\">\r\n                <div id=\"echarts-records\" style=\"width: 100%;min-height:500px\"></div>\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n</div>\r\n\r\n<script src=\"../../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\r\n<script src=\"../../../js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\r\n\r\n<script>\r\n    layui.use(['form', 'table', 'laydate'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            layuimini = layui.layuimini;\r\n\r\n        let rangeData = \"\";\r\n        //日期时间范围选择\r\n        laydate.render({\r\n            elem: '#data-role'\r\n            , type: 'datetime'\r\n            , range: true //或 range: '~' 来自定义分割字符\r\n            , change: function (dates) {\r\n                rangeData = dates;\r\n            }\r\n        });\r\n\r\n        table.render({\r\n            elem: '#currentTableId',\r\n            url: baseUrl + 'sys/role/list',\r\n            headers: Authorization,\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                // {type: \"checkbox\", width: 50, fixed: \"left\"},\r\n                {field: 'roleId', width: 80, title: '角色Id'},\r\n                {field: 'roleName', width: 135, title: '角色名'},\r\n                // {field: 'roleKey', width: 135, title: '角色权限', sort: true},\r\n                {field: 'roleSort', width: 135, title: '显示顺序'},\r\n                // {field: 'dataScope', title: '数据范围', width: 135},\r\n                // {field: 'status', title: '角色状态', width: 135},\r\n                {field: 'createBy', title: '创建者', width: 135},\r\n                {field: 'updateBy', title: '更新者', width: 135},\r\n                {field: 'createTime', title: '创建时间', width: 260},\r\n                {field: 'updateTime', title: '更新时间', width: 260},\r\n                {field: 'remark', minWidth: 135, title: '备注', sort: true},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n\r\n                {title: '操作', width: 150, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        // 监听搜索操作\r\n        form.on('submit(data-search-btn)', function (data) {\r\n            var result = JSON.stringify(data.field);\r\n            /* layer.alert(result, {\r\n                 title: '最终的搜索信息'\r\n             });*/\r\n\r\n            //执行搜索重载\r\n            table.reload('currentTableId', {\r\n                url: baseUrl + 'device/query',\r\n                headers: Authorization,\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: {\r\n                    curr: 1\r\n                }\r\n                , where: data.field\r\n            }, 'data');\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function (obj) {\r\n            obj.event = \"add\";\r\n            let data = obj;\r\n            var index = layer.open({\r\n                title: '管理角色',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: './manageRole.html',\r\n                success: function (layero, index) {\r\n                    var iframe = window['layui-layer-iframe' + index];\r\n                    iframe.child(data, index);\r\n                }\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(currentTableFilter)', function (obj) {\r\n            // console.log(obj)\r\n        });\r\n\r\n        //监听行单击事件\r\n        table.on('row(currentTableFilter)', function (obj) {\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: baseUrl + \"deviceHistory/queryDevice\",\r\n                contentType: \"application/json\",\r\n                headers: auth,\r\n                dataType: \"json\",\r\n                data: JSON.stringify({\"deviceId\": obj.data.deviceId}),\r\n                success: function (data) {\r\n                    echarsData(data);\r\n                }\r\n            });\r\n\r\n            /*layer.alert(JSON.stringify(data), {\r\n                title: '当前行数据：'\r\n            });*/\r\n\r\n            //标注选中样式\r\n            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');\r\n        });\r\n\r\n        table.on('tool(currentTableFilter)', function (obj) {\r\n            let editData = obj;\r\n            if (obj.event === 'edit') {\r\n                var index = layer.open({\r\n                    title: '编辑用户',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: './manageRole.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(editData, index);\r\n                    }\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('确定删除?', function (index) {\r\n                    $.ajax({\r\n                        type: \"delete\",\r\n                        url: baseUrl + \"sys/role/del\",\r\n                        contentType: \"application/json\",\r\n                        headers: auth,\r\n                        dataType: \"json\",\r\n                        data: JSON.stringify({\"roleId\": obj.data.roleId}),\r\n                        success: function (data) {\r\n                            if (data.code == \"200\") {\r\n                                alert(data.msg);\r\n                                obj.del();\r\n                            } else {\r\n                                alert(data.msg);\r\n                            }\r\n                        }\r\n                    });\r\n                    layer.close(index);\r\n                });\r\n            } else if (obj.event === 'perm') {\r\n\r\n                let data = obj;\r\n                var index = layer.open({\r\n                    title: \"<h3 style='text-align: center'><span>\" + data.data.roleName + \"权限分配</span></h3>\",\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: './permTree.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(data, index);\r\n                    }\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n\r\n                return false;\r\n\r\n            }\r\n        });\r\n    });\r\n</script>\r\n<!--<script src=\"../../js/myJs/baoBiao.js\" charset=\"utf-8\"></script>-->\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/system/role/role.html b/../metertwo/src/main/resources/static/page/system/role/role.html
--- a/../metertwo/src/main/resources/static/page/system/role/role.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/system/role/role.html	(date 1612432463801)
@@ -64,9 +64,9 @@
             </div>
         </script>
 
-        <table class="layui-hide" id="currentTableId" lay-filter="currentTableFilter"></table>
+        <table class="layui-hide" id="roleTableId" lay-filter="roleTableFilter"></table>
 
-        <script type="text/html" id="currentTableBar">
+        <script type="text/html" id="roleTableBar">
             <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="perm">权限</a>
             <a class="layui-btn layui-btn-xs data-count-edit" lay-event="edit">编辑</a>
             <a class="layui-btn layui-btn-xs layui-btn-danger data-count-delete" lay-event="delete">删除</a>
@@ -85,7 +85,7 @@
 
 <script src="../../../libs/layui-v2.5.5/layui.js" charset="utf-8"></script>
 <script src="../../../js/lay-config.js?v=1.0.4" charset="utf-8"></script>
-<script src="../../../js/lay-module/echarts/ecStat.min.js" charset="utf-8"></script>
+<!--<script src="../../../js/lay-module/echarts/ecStat.min.js" charset="utf-8"></script>-->
 
 <script>
     layui.use(['form', 'table', 'laydate'], function () {
@@ -97,17 +97,17 @@
 
         let rangeData = "";
         //日期时间范围选择
-        laydate.render({
+        /*laydate.render({
             elem: '#data-role'
             , type: 'datetime'
             , range: true //或 range: '~' 来自定义分割字符
             , change: function (dates) {
                 rangeData = dates;
             }
-        });
+        });*/
 
         table.render({
-            elem: '#currentTableId',
+            elem: '#roleTableId',
             url: baseUrl + 'sys/role/list',
             headers: Authorization,
             toolbar: '#toolbarDemo',
@@ -131,7 +131,7 @@
                 {field: 'remark', minWidth: 135, title: '备注', sort: true},
                 {field: 'id', width: 80, title: '序号', sort: true},
 
-                {title: '操作', width: 150, templet: '#currentTableBar', fixed: "right", align: "center"}
+                {title: '操作', width: 200, templet: '#roleTableBar', fixed: "right", align: "center"}
             ]],
             limits: [10, 15, 20, 25, 50, 100],
             limit: 10,
@@ -139,14 +139,14 @@
         });
 
         // 监听搜索操作
-        form.on('submit(data-search-btn)', function (data) {
+        /*form.on('submit(data-search-btn)', function (data) {
             var result = JSON.stringify(data.field);
-            /* layer.alert(result, {
+            /!* layer.alert(result, {
                  title: '最终的搜索信息'
-             });*/
+             });*!/
 
             //执行搜索重载
-            table.reload('currentTableId', {
+            table.reload('roleTableId', {
                 url: baseUrl + 'device/query',
                 headers: Authorization,
                 method: 'post'
@@ -159,7 +159,7 @@
             }, 'data');
 
             return false;
-        });
+        });*/
 
         // 监听添加操作
         $(".data-add-btn").on("click", function (obj) {
@@ -187,18 +187,19 @@
 
         // 监听删除操作
         $(".data-delete-btn").on("click", function () {
-            var checkStatus = table.checkStatus('currentTableId')
+            alert("click");
+            var checkStatus = table.checkStatus('roleTableId')
                 , data = checkStatus.data;
             layer.alert(JSON.stringify(data));
         });
 
         //监听表格复选框选择
-        table.on('checkbox(currentTableFilter)', function (obj) {
+        table.on('checkbox(roleTableFilter)', function (obj) {
             // console.log(obj)
         });
 
         //监听行单击事件
-        table.on('row(currentTableFilter)', function (obj) {
+        /*table.on('row(roleTableFilter)', function (obj) {
             $.ajax({
                 type: "POST",
                 url: baseUrl + "deviceHistory/queryDevice",
@@ -211,15 +212,15 @@
                 }
             });
 
-            /*layer.alert(JSON.stringify(data), {
+            /!*layer.alert(JSON.stringify(data), {
                 title: '当前行数据：'
-            });*/
+            });*!/
 
             //标注选中样式
             obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
-        });
+        });*/
 
-        table.on('tool(currentTableFilter)', function (obj) {
+        table.on('tool(roleTableFilter)', function (obj) {
             let editData = obj;
             if (obj.event === 'edit') {
                 var index = layer.open({
@@ -275,6 +276,7 @@
                         iframe.child(data, index);
                     }
                 });
+
                 $(window).on("resize", function () {
                     layer.full(index);
                 });
Index: ../metertwo/src/main/resources/static/page/system/task/task.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>今日事项</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"../../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../../css/public.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../../libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\r\n    <style>\r\n    </style>\r\n</head>\r\n<body>\r\n<div class=\"layuimini-container\">\r\n    <div class=\"layuimini-main\">\r\n\r\n        <!--<fieldset class=\"table-search-fieldset\">\r\n            <legend>查询条件</legend>\r\n            <div style=\"margin: 10px 10px 10px 10px\">\r\n                <form class=\"layui-form layui-form-pane\" action=\"\">\r\n                    <div class=\"layui-form-item\">\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <div id=\"device-search-condition\" style=\"width: 220px\"></div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"logic\" lay-verify=\"\" lay-filter=\"logic\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">?</option>\r\n                                <option value=\"2\">></option>\r\n                                <option value=\"3\">=</option>\r\n                                <option value=\"4\"><</option>\r\n                                <option value=\"5\">>=</option>\r\n                                <option value=\"6\"><=</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            &lt;!&ndash;                            <label class=\"layui-form-label\">参数值</label>&ndash;&gt;\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" class=\"layui-input\" id=\"data-deviceHistory\" placeholder=\"请输入\"\r\n                                       lay-key=\"18\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"connect\" lay-verify=\"\" lay-filter=\"logic-connect\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">且</option>\r\n                                <option value=\"2\">或</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        &lt;!&ndash;                            <button type=\"button\" class=\"layui-btn\" onclick=\"getQuerryValue()\">调入</button>&ndash;&gt;\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <button type=\"submit\" class=\"layui-btn layui-btn-primary\" lay-submit\r\n                                    lay-filter=\"data-search-btn\"><i class=\"layui-icon\">\uE615</i> 搜 索\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>-->\r\n\r\n        <div class=\"layui-tab layui-tab-brief\" lay-filter=\"docDemoTabBrief\">\r\n            <ul class=\"layui-tab-title\">\r\n                <li class=\"layui-this\">进行中</li>\r\n                <li>已完成</li>\r\n            </ul>\r\n            <div class=\"layui-tab-content\">\r\n                <!--        进行中        -->\r\n                <div class=\"layui-tab-item layui-show\">\r\n\r\n                    <script type=\"text/html\" id=\"toolbarDemo\">\r\n                        <div class=\"layui-btn-container\">\r\n                            <!--                <button class=\"layui-btn layui-btn-sm data-auto-refresh\"> 刷新间隔</button>-->\r\n                            <!--                <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除历史</button>-->\r\n                        </div>\r\n                    </script>\r\n\r\n                    <table class=\"layui-hide\" id=\"tbl-task-processing\" lay-filter=\"processing\"></table>\r\n\r\n                    <script type=\"text/html\" id=\"currentTableBar\">\r\n                        <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>\r\n                        <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n                    </script>\r\n                </div>\r\n                <div class=\"layui-tab-item\">\r\n                    <!--        已完成            -->\r\n\r\n                    <script type=\"text/html\" id=\"toolbarDemo-portable\">\r\n                        <div class=\"layui-btn-container\">\r\n                            <!--                <button class=\"layui-btn layui-btn-sm data-auto-refresh\"> 刷新间隔</button>-->\r\n                            <!--                <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除历史</button>-->\r\n                        </div>\r\n                    </script>\r\n\r\n                    <table class=\"layui-hide\" id=\"tbl-task-completed\" lay-filter=\"completed\"></table>\r\n\r\n                    <script type=\"text/html\" id=\"currentTableBar-portable\">\r\n                        <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>\r\n                        <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n                    </script>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!--<div class=\"layui-col-md12\">\r\n        <div class=\"layui-card\">\r\n            <div class=\"layui-card-header\"><i class=\"fa fa-line-chart icon\"></i>报表统计</div>\r\n            <div class=\"layui-card-body\">\r\n                <div id=\"echarts-records\" style=\"width: 100%;min-height:500px\"></div>\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n</div>\r\n<script src=\"../../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\r\n<script src=\"../../../js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../../js/xm-select/xm-select.js\" charset=\"utf-8\"></script>\r\n<script rel=\"script\" charset=\"utf-8\">\r\n\r\n    var statement = [];\r\n    var clickCount = 0;\r\n\r\n    var demo1 = xmSelect.render({\r\n        el: '#device-search-condition',\r\n        theme: {\r\n            color: '#5fb878',\r\n        },\r\n        toolbar: {\r\n            show: true,\r\n            list: ['ALL', 'CLEAR', 'REVERSE']\r\n        },\r\n        filterable: true,\r\n        paging: true,\r\n        pageSize: 4,\r\n        data: [\r\n            {name: '安装处所', value: 1},\r\n            {name: '安装位置', value: 2},\r\n            {name: '瞬时流量', value: 3},\r\n            {name: '瞬时流速', value: 4},\r\n            {name: '额定流量', value: 5},\r\n            {name: '设备名称', value: 6},\r\n            {name: '设备编号', value: 7},\r\n            {name: '状态代码', value: 8},\r\n            {name: '测量时间', value: 9},\r\n        ],\r\n    })\r\n\r\n    function getQuerryValue(connect) {\r\n        let parameter; // parameter\r\n        let value_a; // value\r\n        let relationship; // relationship\r\n        let logicOption;\r\n        let selectArr = demo1.getValue();\r\n\r\n        parameter = selectArr[0].value;\r\n        logicOption = layui.jquery('#logic').find('option:selected').val();\r\n        value_a = layui.jquery(\"#data-deviceHistory\").val();\r\n\r\n        if (connect != \"undefined\") {\r\n            relationship = connect;\r\n        } else {\r\n            relationship = \"0\";\r\n        }\r\n        statement[clickCount++] = parameter + \"|\" + logicOption + \"|\" + value_a + \"|\" + relationship;\r\n\r\n        // console.log(parameter + \",\" + relationship + \",\" + value_a);\r\n        // document.getElementById('demo2-value').innerHTML = `\\ndemo2.getValue()\\n\\n` + JSON.stringify(selectArr, null, 2);\r\n\r\n    }\r\n</script>\r\n<script type=\"application/javascript\" rel=\"script\" charset=\"utf-8\">\r\n    var dt1 = 0, dt2 = 0;\r\n\r\n    // 进行中\r\n    layui.use(['form', 'table', 'laydate', 'element'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            element = layui.element,\r\n            layuimini = layui.layuimini;\r\n\r\n        let rangeData = \"\";\r\n        //日期时间范围选择\r\n        laydate.render({\r\n            elem: '#data-fixed'\r\n            , type: 'datetime'\r\n            , range: true //或 range: '~' 来自定义分割字符\r\n            , change: function (dates) {\r\n                rangeData = dates;\r\n            }\r\n        });\r\n\r\n        table.render({\r\n            elem: '#tbl-task-processing',\r\n            url: baseUrl + 'sys/task/processing',\r\n            headers: Authorization,\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                // {type: \"checkbox\", width: 50, fixed: \"left\"},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n                {field: 'taskId', width: 135, title: '任务编号', event: 'setTask'},\r\n                {field: 'taskTitle', width: 135, title: '任务标题'},\r\n                {field: 'taskType', width: 135, title: '任务类型'},\r\n                {field: 'describe', width: 135, title: '操作原因'},\r\n                {field: 'deviceId', width: 135, title: '操作设备'},\r\n                {field: 'operatingData', width: 135, title: '操作数据'},\r\n                {field: 'createBy', width: 135, title: '发起人'},\r\n                {field: 'reviewer', width: 135, title: '审核人'},\r\n                {field: 'revStatus', width: 135, title: '审核状态', templet: \"#revStatus\"},\r\n                {field: 'judgment', width: 135, title: '审核意见', templet: \"#iotErrorCode\"},\r\n                {field: 'executor', width: 135, title: '执行人'},\r\n                {field: 'exeStatus', width: 135, title: '执行状态', templet: \"#exeStatus\"},\r\n                {field: 'exeJudgment', width: 135, title: '执行意见'},\r\n                {field: 'taskStatus', width: 135, title: '任务状态', templet: \"#taskStatus\"},\r\n                {field: 'isClose', width: 135, title: '是否完成', templet: \"#isClose\"},\r\n                {field: 'createTime', width: 160, title: '发起时间'},\r\n                {field: 'revTime', width: 160, title: '审核时间'},\r\n                {field: 'exeTime', width: 160, title: '执行时间'},\r\n                {field: 'remark', width: 135, title: '备注'},\r\n\r\n                // {title: '操作', minWidth: 50, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        // 监听搜索操作\r\n        form.on('submit(data-search-btn)', function (data) {\r\n            /*var result = JSON.stringify(data.field);\r\n             layer.alert(result, {\r\n             title: '最终的搜索信息'\r\n         });*/\r\n\r\n            clickCount = 0;\r\n            getQuerryValue(\"undefined\");\r\n\r\n            var obj = {\"queryData\": statement.toString()};\r\n\r\n            //执行搜索重载\r\n            table.reload('tbl-index-realTimeFixed', {\r\n                url: baseUrl + 'realTime/query',\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: 1,\r\n                limit: 10\r\n                , where: obj\r\n            }, 'data');\r\n\r\n            return false;\r\n        });\r\n\r\n        form.on('select(refresh)', function (data) {\r\n            var dt2 = dt1 + 11000;\r\n            dt1 = data.value;\r\n        });\r\n\r\n        // 自动刷新\r\n\r\n        /*setInterval(function () {\r\n            //定时加载\r\n            table.reload('tbl-index-realTimeFixed', {\r\n                url: baseUrl + 'deviceHistory/realTimeFixed',\r\n                method: 'get',\r\n                page: 1,\r\n                limit: 10\r\n            }, 'data');\r\n        }, 300000);*/\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function () {\r\n\r\n            var index = layer.open({\r\n                title: '添加用户',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: '/page/table/add.html',\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(currentTableFilter)', function (obj) {\r\n            console.log(obj)\r\n        });\r\n\r\n        //监听行单击事件\r\n        table.on('tool(processing)', function (obj) {\r\n            let editData = obj;\r\n            let data = obj.data;\r\n\r\n            if (obj.event === 'setTask') {\r\n                layer.open({\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    title: \"<h3 style='text-align: center'><span style='color: #1aa094;'>\" + data.taskId + \"</span></h3>\",\r\n                    offset: 'auto',\r\n                    area: ['100%', '100%'],\r\n                    content: './manageTask.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(editData, index);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        table.on('tool(currentTableFilter)', function (obj) {\r\n            var data = obj.data;\r\n            if (obj.event === 'edit') {\r\n\r\n                var index = layer.open({\r\n                    title: '编辑用户',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: '/page/table/edit.html',\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('真的删除行么', function (index) {\r\n                    obj.del();\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n</script>\r\n<script>\r\n\r\n    /*  $.ajax(\r\n          {\r\n              url:ctx+'admin',\r\n              type:'get',\r\n              dateType:'json',\r\n              beforeSend: function(xhr) {\r\n                  xhr.setRequestHeader(\"token:\"+localStorage.getItem(\"token\"));\r\n              },\r\n              headers:{'Content-Type':'application/json;charset=utf8','token':localStorage.getItem(\"token\")},\r\n          }\r\n      );*/\r\n\r\n    var tms1;\r\n\r\n    // 便携式\r\n    layui.use(['form', 'table', 'laydate', 'element'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            element = layui.element,\r\n            layuimini = layui.layuimini;\r\n\r\n\r\n        /* let rangeData = \"\";\r\n         //日期时间范围选择\r\n         laydate.render({\r\n             elem: '#data-deviceHistory'\r\n             , type: 'datetime'\r\n             , range: true //或 range: '~' 来自定义分割字符\r\n             , change: function (dates) {\r\n                 rangeData = dates;\r\n             }\r\n         });*/\r\n\r\n        table.render({\r\n            elem: '#tbl-task-completed',\r\n            url: baseUrl + 'sys/task/completed',\r\n            headers: Authorization,\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                // {type: \"checkbox\", width: 50, fixed: \"left\"},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n                {field: 'taskId', width: 135, title: '任务编号', event: 'setTask'},\r\n                {field: 'taskTitle', width: 135, title: '任务标题'},\r\n                {field: 'taskType', width: 135, title: '任务类型'},\r\n                {field: 'describe', width: 135, title: '操作原因'},\r\n                {field: 'deviceId', width: 135, title: '操作设备'},\r\n                {field: 'operatingData', width: 135, title: '操作数据'},\r\n                {field: 'createBy', width: 135, title: '发起人'},\r\n                {field: 'reviewer', width: 135, title: '审核人'},\r\n                {field: 'revStatus', width: 135, title: '审核状态', templet: \"#revStatus\"},\r\n                {field: 'judgment', width: 135, title: '审核意见', templet: \"#iotErrorCode\"},\r\n                {field: 'executor', width: 135, title: '执行人'},\r\n                {field: 'exeStatus', width: 135, title: '执行状态', templet: \"#exeStatus\"},\r\n                {field: 'exeJudgment', width: 135, title: '执行意见'},\r\n                {field: 'taskStatus', width: 135, title: '任务状态', templet: \"#taskStatus\"},\r\n                {field: 'isClose', width: 135, title: '是否完成', templet: \"#isClose\"},\r\n                {field: 'createTime', width: 160, title: '发起时间'},\r\n                {field: 'revTime', width: 160, title: '审核时间'},\r\n                {field: 'exeTime', width: 160, title: '执行时间'},\r\n                {field: 'remark', width: 135, title: '备注'},\r\n\r\n                // {title: '操作', minWidth: 50, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        /* // 监听搜索操作\r\n         form.on('submit(data-search-btn)', function (data) {\r\n             /!*var result = JSON.stringify(data.field);\r\n              layer.alert(result, {\r\n              title: '最终的搜索信息'\r\n          });*!/\r\n\r\n             var obj={\"queryData\":statement.toString()};\r\n\r\n             //执行搜索重载\r\n             table.reload('tbl-task-completed', {\r\n                 url: baseUrl + '/realTime/query',\r\n                 method: 'post'\r\n                 , contentType: \"application/json;charset=UTF-8\",\r\n                 dataType: 'json',\r\n                 page:1,\r\n                 limit:10\r\n                 , where:obj\r\n             }, 'data');\r\n\r\n             return false;\r\n         });*/\r\n\r\n        form.on('select(refresh)', function (data) {\r\n            var dt2 = dt1 + 11000;\r\n            dt1 = data.value;\r\n        });\r\n\r\n        /* // 自动刷新\r\n         startRealTime();\r\n         var st1; // 实时监测\r\n         function startRealTime() {\r\n             clearTimeout(st1); // 防止定时器重叠\r\n             st1 = setTimeout(function () {\r\n                 //定时加载\r\n                 table.reload('tbl-index-realTimePortable', {\r\n                     url: baseUrl + 'deviceHistory/realTimePortable',\r\n                     headers:Authorization,\r\n                     method: 'get',\r\n                     page: 1,\r\n                     limit: 10\r\n                 }, 'data');\r\n                 startRealTime();\r\n             }, 300000);\r\n         }*/\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function () {\r\n\r\n            var index = layer.open({\r\n                title: '添加用户',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: '/page/table/add.html',\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(currentTableFilter)', function (obj) {\r\n            console.log(obj)\r\n        });\r\n\r\n        //监听行单击事件\r\n\r\n        //监听行单击事件\r\n        table.on('tool(completed)', function (obj) {\r\n            let editData = obj;\r\n            let data = obj.data;\r\n\r\n            if (obj.event === 'setTask') {\r\n                layer.open({\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    title: \"<h3 style='text-align: center'><span style='color: #1aa094;'>\" + data.taskId + \"</span></h3>\",\r\n                    offset: 'auto',\r\n                    area: ['100%', '100%'],\r\n                    content: './manageTask.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(editData, index);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        table.on('tool(currentTableFilter)', function (obj) {\r\n            var data = obj.data;\r\n            if (obj.event === 'edit') {\r\n\r\n                var index = layer.open({\r\n                    title: '编辑用户',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: '/page/table/edit.html',\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('真的删除行么', function (index) {\r\n                    obj.del();\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n</script>\r\n\r\n<script type=\"text/html\" id=\"taskStatus\">\r\n    {{#  if(d.taskStatus == '2'){ }}\r\n    <span><i>待审核</i></span>\r\n    {{#  } else if(d.taskStatus == '3'){ }}\r\n    <span><i>待执行</i></span>\r\n    {{#  } else if(d.taskStatus == '4'){ }}\r\n    <span><i>已执行</i></span>\r\n    {{#  } else if(d.taskStatus == '5'){ }}\r\n    <span><i>已关闭</i></span>\r\n    {{#  } }}\r\n</script>\r\n<script type=\"text/html\" id=\"isClose\">\r\n    {{#  if(d.isClose == '1'){ }}\r\n    <span><i>未完成</i></span>\r\n    {{#  } else { }}\r\n    <span><i>已完成</i></span>\r\n    {{#  } }}\r\n</script>\r\n<script type=\"text/html\" id=\"revStatus\">\r\n    {{#  if(d.revStatus == '0'){ }}\r\n    <span><i>待审核</i></span>\r\n    {{#  } else { }}\r\n    <span><i>已审核</i></span>\r\n    {{#  } }}\r\n</script>\r\n<script type=\"text/html\" id=\"exeStatus\">\r\n    {{#  if(d.exeStatus == '0'){ }}\r\n    <span><i>待执行</i></span>\r\n    {{#  } else { }}\r\n    <span><i>已执行</i></span>\r\n    {{#  } }}\r\n</script>\r\n<!--<script src=\"../js/myJs/baoBiao.js\" charset=\"utf-8\"></script>-->\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/system/task/task.html b/../metertwo/src/main/resources/static/page/system/task/task.html
--- a/../metertwo/src/main/resources/static/page/system/task/task.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/system/task/task.html	(date 1612431890559)
@@ -123,13 +123,13 @@
 <script src="../../../libs/layui-v2.5.5/layui.js" charset="utf-8"></script>
 <script src="../../../js/lay-config.js?v=1.0.4" charset="utf-8"></script>
 <script src="../../../js/lay-module/echarts/ecStat.min.js" charset="utf-8"></script>
-<script src="../../../js/xm-select/xm-select.js" charset="utf-8"></script>
+<!--<script src="../../../js/xm-select/xm-select.js" charset="utf-8"></script>-->
 <script rel="script" charset="utf-8">
 
     var statement = [];
     var clickCount = 0;
 
-    var demo1 = xmSelect.render({
+    /*var demo1 = xmSelect.render({
         el: '#device-search-condition',
         theme: {
             color: '#5fb878',
@@ -152,9 +152,9 @@
             {name: '状态代码', value: 8},
             {name: '测量时间', value: 9},
         ],
-    })
+    })*/
 
-    function getQuerryValue(connect) {
+    /*function getQuerryValue(connect) {
         let parameter; // parameter
         let value_a; // value
         let relationship; // relationship
@@ -175,7 +175,7 @@
         // console.log(parameter + "," + relationship + "," + value_a);
         // document.getElementById('demo2-value').innerHTML = `\ndemo2.getValue()\n\n` + JSON.stringify(selectArr, null, 2);
 
-    }
+    }*/
 </script>
 <script type="application/javascript" rel="script" charset="utf-8">
     var dt1 = 0, dt2 = 0;
Index: ../metertwo/src/main/resources/static/page/system/user/user.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>用户管理</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"../../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../../css/public.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../../libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\r\n</head>\r\n<body>\r\n<!--<div class=\"layui-side layui-bg-gray\">\r\n    <div class=\"layui-side-scroll\">\r\n        <div id=\"department\"></div>\r\n    </div>\r\n</div>-->\r\n<!--<div class=\"layui-body\">-->\r\n<!-- 内容主体区域 -->\r\n<!--    <div style=\"padding: 15px;\">-->\r\n<div>\r\n    <div class=\"layuimini-container\">\r\n        <div class=\"layuimini-main\">\r\n            <!--<fieldset class=\"table-search-fieldset\">\r\n                <legend>查询条件</legend>\r\n                <div style=\"margin: 10px 10px 10px 10px\">\r\n                    <form class=\"layui-form layui-form-pane\" action=\"\">\r\n                        <div class=\"layui-form-item\">\r\n                            <div class=\"layui-inline\">\r\n                                <label class=\"layui-form-label\">用户名称</label>\r\n                                <div class=\"layui-input-inline\">\r\n                                    <input type=\"text\" name=\"deviceName\" autocomplete=\"off\" class=\"layui-input\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"layui-inline\">\r\n                                <label class=\"layui-form-label\">手机号码</label>\r\n                                <div class=\"layui-input-inline\">\r\n                                    <input type=\"text\" name=\"installSite\" autocomplete=\"off\" class=\"layui-input\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"layui-inline\">\r\n                                <label class=\"layui-form-label\">用户状态</label>\r\n                                <div class=\"layui-input-inline\">\r\n                                    <select name=\"compare\" lay-verify=\"\">\r\n                                        <option value=\"\">请选择</option>\r\n                                        <option value=\"0\">正常</option>\r\n                                        <option value=\"1\">停用</option>\r\n                                        <option value=\"2\">离职</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"layui-inline\">\r\n                                <label class=\"layui-form-label\">加入时间</label>\r\n                                <div class=\"layui-input-inline\">\r\n                                    <input type=\"text\" class=\"layui-input\" id=\"data-user\" placeholder=\"开始 到 结束\"\r\n                                           lay-key=\"18\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"layui-inline\">\r\n                                <button type=\"submit\" class=\"layui-btn layui-btn-primary\" lay-submit\r\n                                        lay-filter=\"data-search-btn\"><i class=\"layui-icon\">\uE615</i> 查 询\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </fieldset>-->\r\n\r\n            <script type=\"text/html\" id=\"toolbarDemo\">\r\n                <div class=\"layui-btn-container\">\r\n                    <button class=\"layui-btn layui-btn-sm data-add-btn\" lay-event=\"add\"> 添加用户</button>\r\n                    <!--                        <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除用户</button>-->\r\n                </div>\r\n            </script>\r\n\r\n            <table class=\"layui-hide\" id=\"currentTableId\" lay-filter=\"currentTableFilter\"></table>\r\n\r\n            <script type=\"text/html\" id=\"currentTableBar\">\r\n                <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>\r\n                <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n            </script>\r\n\r\n        </div>\r\n        <!--<div class=\"layui-col-md12\">\r\n            <div class=\"layui-card\">\r\n                <div class=\"layui-card-header\"><i class=\"fa fa-line-chart icon\"></i>报表统计</div>\r\n                <div class=\"layui-card-body\">\r\n                    <div id=\"echarts-records\" style=\"width: 100%;min-height:500px\"></div>\r\n                </div>\r\n            </div>\r\n        </div>-->\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n<script src=\"../../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\r\n<script src=\"../../../js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\r\n<script>\r\n    layui.use('tree', function () {\r\n        var tree = layui.tree;\r\n\r\n        //渲染\r\n        var inst1 = tree.render({\r\n            elem: '#department'  //绑定元素\r\n            , data: [{\r\n                title: '精伍科技', //一级菜单\r\n                spread: true\r\n                , children: [{\r\n                    title: '成都分部' //二级菜单\r\n                    , children: [{\r\n                        title: '研发部' //三级菜单\r\n                    }, {\r\n                        title: '生产部'\r\n                    }, {\r\n                        title: '市场部'\r\n                    }]\r\n                }, {\r\n                    title: '绵阳分部' //二级菜单\r\n                    , children: [{\r\n                        title: '研发部' //三级菜单\r\n                    }, {\r\n                        title: '生产部'\r\n                    }, {\r\n                        title: '市场部'\r\n                    }]\r\n                }]\r\n            }]\r\n        });\r\n    });\r\n</script>\r\n<script>\r\n    layui.use(['form', 'table', 'laydate'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            layuimini = layui.layuimini;\r\n\r\n        let rangeData = \"\";\r\n        //日期时间范围选择\r\n        laydate.render({\r\n            elem: '#data-user'\r\n            , type: 'datetime'\r\n            , range: true //或 range: '~' 来自定义分割字符\r\n            , change: function (dates) {\r\n                rangeData = dates;\r\n            }\r\n        });\r\n\r\n        table.render({\r\n            elem: '#currentTableId',\r\n            url: baseUrl + 'sys/user/list',\r\n            headers: Authorization,\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                // {type: \"checkbox\", width: 50, fixed: \"left\"},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n                {field: 'userId', width: 135, title: '用户编号'},\r\n                // {field: 'deptId', width: 135, title: '部门编号', sort: true},\r\n                {field: 'userName', width: 135, title: '用户名称'},\r\n                {field: 'nickName', title: '真实姓名', minWidth: 135},\r\n                {field: 'email', title: '邮箱', minWidth: 135},\r\n                {field: 'phone', title: '电话', minWidth: 135},\r\n                {field: 'userType', width: 135, title: '用户角色', sort: true, templet: \"#userType\"},\r\n                {field: 'sex', width: 135, title: '性别', sort: true,templet: \"#sex\"},\r\n                {field: 'status', width: 135, title: '状态', sort: true},\r\n                // {field: 'loginIp', width: 135, title: '登陆ip', sort: true},\r\n                // {field: 'loginDate', width: 135, title: '登陆时间', sort: true},\r\n                {field: 'createBy', width: 135, title: '创建者', sort: true},\r\n                {field: 'createTime', width: 260, title: '创建时间', sort: true},\r\n                {field: 'updateBy', width: 135, title: '更新者', sort: true},\r\n                {field: 'updateTime', width: 260, title: '更新时间', sort: true},\r\n                {field: 'uuid', width: 135, title: '系统编号'},\r\n                {field: 'remark', width: 135, title: '备注', sort: true},\r\n\r\n                {title: '操作', width: 150, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        // 监听搜索操作\r\n        form.on('submit(data-search-btn)', function (data) {\r\n            var result = JSON.stringify(data.field);\r\n            /* layer.alert(result, {\r\n                 title: '最终的搜索信息'\r\n             });*/\r\n\r\n            //执行搜索重载\r\n            table.reload('currentTableId', {\r\n                url: baseUrl + 'device/query',\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: {\r\n                    curr: 1\r\n                }\r\n                , where: data.field\r\n            }, 'data');\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function (obj) {\r\n            obj.event = \"add\";\r\n            let data = obj;\r\n            var index = layer.open({\r\n                title: '管理用户',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: './manageUser.html',\r\n                success: function (layero, index) {\r\n                    var iframe = window['layui-layer-iframe' + index];\r\n                    iframe.child(data, index);\r\n                }\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(currentTableFilter)', function (obj) {\r\n            // console.log(obj)\r\n        });\r\n\r\n        //监听行单击事件\r\n        table.on('row(currentTableFilter)', function (obj) {\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: baseUrl + \"deviceHistory/queryDevice\",\r\n                contentType: \"application/json\",\r\n                dataType: \"json\",\r\n                data: JSON.stringify({\"deviceId\": obj.data.deviceId}),\r\n                success: function (data) {\r\n                    echarsData(data);\r\n                }\r\n            });\r\n\r\n            /*layer.alert(JSON.stringify(data), {\r\n                title: '当前行数据：'\r\n            });*/\r\n\r\n            //标注选中样式\r\n            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');\r\n        });\r\n\r\n        table.on('tool(currentTableFilter)', function (obj) {\r\n            let editData = obj;\r\n            if (obj.event === 'edit') {\r\n                var index = layer.open({\r\n                    title: '编辑用户',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: './manageUser.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(editData, index);\r\n                    }\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('确定删除该用户吗?', function (index) {\r\n                    $.ajax({\r\n                        type: \"delete\",\r\n                        url: baseUrl + \"sys/user/del\",\r\n                        contentType: \"application/json\",\r\n                        headers: auth,\r\n                        dataType: \"json\",\r\n                        data: JSON.stringify({\"uuid\": obj.data.uuid}),\r\n                        success: function (data) {\r\n                            if (data.code == \"200\") {\r\n                                alert(data.msg);\r\n                                obj.del();\r\n                            } else {\r\n                                alert(data.msg);\r\n                            }\r\n                        }\r\n                    });\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n    });\r\n</script>\r\n<script type=\"text/html\" id=\"sex\">\r\n    {{#  if(d.userType == '1'){ }}\r\n    <span>男</span>\r\n    {{#  } else if(d.userType == '0') { }}\r\n    <span>女</span>\r\n    {{#  } else { }}\r\n    <span>null</span>\r\n    {{#  } }}\r\n</script>\r\n<script type=\"text/html\" id=\"userType\">\r\n    {{#  if(d.userType == '1'){ }}\r\n    <span>管理员</span>\r\n    {{#  } else if(d.userType == '2') { }}\r\n    <span>审核员</span>\r\n    {{#  } else { }}\r\n    <span>员工</span>\r\n    {{#  } }}\r\n</script>\r\n<!--<script src=\"../../js/myJs/baoBiao.js\" charset=\"utf-8\"></script>-->\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/system/user/user.html b/../metertwo/src/main/resources/static/page/system/user/user.html
--- a/../metertwo/src/main/resources/static/page/system/user/user.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/system/user/user.html	(date 1612432123093)
@@ -96,8 +96,8 @@
 </div>
 <script src="../../../libs/layui-v2.5.5/layui.js" charset="utf-8"></script>
 <script src="../../../js/lay-config.js?v=1.0.4" charset="utf-8"></script>
-<script src="../../../js/lay-module/echarts/ecStat.min.js" charset="utf-8"></script>
-<script>
+<!--<script src="../../../js/lay-module/echarts/ecStat.min.js" charset="utf-8"></script>-->
+<!--<script>
     layui.use('tree', function () {
         var tree = layui.tree;
 
@@ -129,7 +129,7 @@
             }]
         });
     });
-</script>
+</script>-->
 <script>
     layui.use(['form', 'table', 'laydate'], function () {
         var $ = layui.jquery,
@@ -195,7 +195,7 @@
              });*/
 
             //执行搜索重载
-            table.reload('currentTableId', {
+          /*  table.reload('currentTableId', {
                 url: baseUrl + 'device/query',
                 method: 'post'
                 , contentType: "application/json;charset=UTF-8",
@@ -204,7 +204,7 @@
                     curr: 1
                 }
                 , where: data.field
-            }, 'data');
+            }, 'data');*/
 
             return false;
         });
@@ -246,7 +246,7 @@
         });
 
         //监听行单击事件
-        table.on('row(currentTableFilter)', function (obj) {
+        /*table.on('row(currentTableFilter)', function (obj) {
             $.ajax({
                 type: "POST",
                 url: baseUrl + "deviceHistory/queryDevice",
@@ -258,13 +258,13 @@
                 }
             });
 
-            /*layer.alert(JSON.stringify(data), {
+            /!*layer.alert(JSON.stringify(data), {
                 title: '当前行数据：'
-            });*/
+            });*!/
 
             //标注选中样式
             obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
-        });
+        });*/
 
         table.on('tool(currentTableFilter)', function (obj) {
             let editData = obj;
Index: ../metertwo/src/main/resources/static/page/system/user/manageUser.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>用户管理</title>\n    <meta name=\"renderer\" content=\"webkit\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <link rel=\"stylesheet\" href=\"../../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\n    <link rel=\"stylesheet\" href=\"../../../css/public.css\" media=\"all\">\n    <style>\n        body {\n            background-color: #ffffff;\n        }\n\n        .layui-input-block {\n            position: unset !important;\n        }\n\n        .layui-form-item {\n            clear: unset;\n            float: left;\n        }\n\n        .layui-btn {\n            clear: both;\n            float: left;\n        }\n    </style>\n</head>\n<body>\n<div id=\"app-user\" class=\"layui-form layuimini-form\">\n\n   <!-- <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">部门编号</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"deptId\" type=\"text\" name=\"deptId\" lay-verify=\"required\" lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入\" value=\"\"\n                   class=\"layui-input\">\n        </div>\n    </div>-->\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">用户编号</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"userId\" type=\"text\" name=\"userId\"\n                   value=\"\" readonly\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">用户名</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"userName\" type=\"text\" name=\"userName\" lay-verify=\"required\"\n                   lay-reqtext=\"不能为空\" placeholder=\"请输入\"\n                   value=\"\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">真实姓名</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"nickname\" type=\"text\" name=\"nickname\"\n                   value=\"\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">用户密码</label>\n        <div class=\"layui-input-block\">\n            <input type=\"password\" name=\"password\" lay-verify=\"required\"\n                   lay-reqtext=\"不能为空\" placeholder=\"请输入\"\n                   value=\"\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">用户角色</label>\n        <div class=\"layui-input-inline\">\n            <select name=\"userRole\" lay-verify=\"\">\n                <option value=\"\">请选择</option>\n                <option value=\"1\">管理员</option>\n                <option value=\"2\">审核员</option>\n                <option value=\"3\">员工</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">邮箱</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"email\" type=\"text\" name=\"email\" lay-verify=\"required\" lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入\"\n                   value=\"\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">电话</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"phone\" type=\"text\" name=\"phone\" lay-verify=\"required\" lay-reqtext=\"不能为空\" placeholder=\"请输入\"\n                   value=\"\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">性别</label>\n        <div class=\"layui-input-inline\">\n            <select name=\"sex\" lay-verify=\"\">\n                <option value=\"\">请选择</option>\n                <option value=\"0\">女</option>\n                <option value=\"1\">男</option>\n                <option value=\"2\">未知</option>\n            </select>\n        </div>\n    </div>\n\n    <!--<div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">用户状态</label>\n        <div class=\"layui-input-inline\">\n            <select name=\"status\" lay-verify=\"\">\n                <option value=\"\">请选择</option>\n                <option value=\"0\">正常</option>\n                <option value=\"1\">停用</option>\n                <option value=\"2\">离职</option>\n            </select>\n        </div>\n    </div>-->\n\n    <div class=\"layui-input-block\">\n        <button class=\"layui-btn\" lay-submit lay-filter=\"saveBtn\">提交</button>\n    </div>\n</div>\n<script src=\"../../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\n<script src=\"../../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\n<script src=\"../../../libs/vue/vue.js\" charset=\"utf-8\"></script>\n<script>\n\n\n\n    function child(data, indexNum) {\n        let opt = data.event; // 操作类型\n        let oldData = data; // 旧数据\n\n        if (opt == 'edit') {\n            new Vue({\n                el: '#app-user',\n                data: oldData.data\n            });\n        }\n\n        layui.use(['form', 'laydate'], function () {\n            var form = layui.form,\n                layer = layui.layer,\n                laydate = layui.laydate,\n                $ = layui.$;\n\n            let rangeData = \"\";\n            //日期时间范围选择\n            laydate.render({\n                elem: '#device-lFDate'\n                , type: 'datetime'\n                , change: function (dates) {\n                    rangeData = dates;\n                }\n            });\n\n            //监听提交\n            form.on('submit(saveBtn)', function (data) {\n                var index = layer.alert(\"确认提交吗?\", {}, function () {\n                    var iframeIndex = parent.layer.getFrameIndex(window.name);\n                    if (\"edit\" == opt) {\n                        data.field.id = oldData.data.id;\n                    }\n                    data.field.opt = opt; // 定义操作字段\n                    console.log(JSON.stringify(data.field));\n                    $.ajax({\n                        type: \"POST\",\n                        url: baseUrl + \"sys/user/manageUser\",\n                        contentType: \"application/json\",\n                        headers: auth,\n                        dataType: \"json\",\n                        data: JSON.stringify(data.field),\n                        success: function (data) {\n                            alert(data.msg);\n                        }\n                    });\n                    layer.close(index);\n                    parent.layer.close(iframeIndex);\n                });\n            });\n\n            return false;\n        });\n    }\n</script>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/system/user/manageUser.html b/../metertwo/src/main/resources/static/page/system/user/manageUser.html
--- a/../metertwo/src/main/resources/static/page/system/user/manageUser.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/system/user/manageUser.html	(date 1601190128973)
@@ -59,7 +59,7 @@
     <div class="layui-form-item">
         <label class="layui-form-label required">真实姓名</label>
         <div class="layui-input-block">
-            <input v-model="nickname" type="text" name="nickname"
+            <input v-model="nickName" type="text" name="nickName"
                    value=""
                    class="layui-input">
         </div>
@@ -76,7 +76,7 @@
     <div class="layui-form-item">
         <label class="layui-form-label">用户角色</label>
         <div class="layui-input-inline">
-            <select name="userRole" lay-verify="">
+            <select v-model="userType" name="userType">
                 <option value="">请选择</option>
                 <option value="1">管理员</option>
                 <option value="2">审核员</option>
@@ -104,7 +104,7 @@
     <div class="layui-form-item">
         <label class="layui-form-label">性别</label>
         <div class="layui-input-inline">
-            <select name="sex" lay-verify="">
+            <select v-model="sex" name="sex" lay-verify="">
                 <option value="">请选择</option>
                 <option value="0">女</option>
                 <option value="1">男</option>
Index: ../metertwo/src/main/resources/static/page/devices/devices.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>设备库</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../css/public.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\r\n</head>\r\n<body>\r\n<div class=\"layuimini-container\">\r\n    <div class=\"layuimini-main\">\r\n\r\n        <fieldset class=\"table-search-fieldset\">\r\n            <legend>查询条件</legend>\r\n            <div style=\"margin: 10px 10px 10px 10px\">\r\n                <form class=\"layui-form layui-form-pane\" action=\"\">\r\n                    <div class=\"layui-form-item\">\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <div id=\"device-search-condition\" style=\"width: 220px\"></div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"logic\" lay-verify=\"\" lay-filter=\"logic\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">?</option>\r\n                                <option value=\"2\">></option>\r\n                                <option value=\"3\">=</option>\r\n                                <option value=\"4\"><</option>\r\n                                <option value=\"5\">>=</option>\r\n                                <option value=\"6\"><=</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <!--                            <label class=\"layui-form-label\">参数值</label>-->\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" class=\"layui-input\" id=\"data-deviceHistory\" placeholder=\"请输入\"\r\n                                       lay-key=\"18\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"connect\" lay-verify=\"\" lay-filter=\"logic-connect\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">且</option>\r\n                                <option value=\"2\">或</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <!--                            <button type=\"button\" class=\"layui-btn\" onclick=\"getQuerryValue()\">调入</button>-->\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <button type=\"submit\" class=\"layui-btn layui-btn-primary\" lay-submit\r\n                                    lay-filter=\"data-search-btn\"><i class=\"layui-icon\">\uE615</i> 搜 索\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <script type=\"text/html\" id=\"toolbarDemo\">\r\n            <div class=\"layui-btn-container\">\r\n                <button class=\"layui-btn layui-btn-sm data-add-btn\" lay-event=\"add\"> 添加设备</button>\r\n                <!--                <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除设备</button>-->\r\n            </div>\r\n        </script>\r\n\r\n        <table class=\"layui-hide\" id=\"currentTableId\" lay-filter=\"filterDevice\"></table>\r\n\r\n        <script type=\"text/html\" id=\"currentTableBar\">\r\n            <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>\r\n            <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n        </script>\r\n\r\n    </div>\r\n    <div class=\"layui-col-md12\">\r\n        <div class=\"layui-card\">\r\n            <div class=\"layui-card-header\"><i class=\"fa fa-line-chart icon\"></i>报表统计</div>\r\n            <div class=\"layui-card-body\">\r\n                <div id=\"echarts-records\" style=\"width: 100%;min-height:500px\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script src=\"../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/xm-select/xm-select.js\" charset=\"utf-8\"></script>\r\n\r\n<script rel=\"script\" charset=\"utf-8\">\r\n\r\n    var statement = [];\r\n    var clickCount = 0;\r\n\r\n    var demo1 = xmSelect.render({\r\n        el: '#device-search-condition',\r\n        theme: {\r\n            color: '#5fb878',\r\n        },\r\n        toolbar: {\r\n            show: true,\r\n            list: ['ALL', 'CLEAR', 'REVERSE']\r\n        },\r\n        filterable: true,\r\n        paging: true,\r\n        pageSize: 4,\r\n        data: [\r\n            {name: '安装处所', value: 1},\r\n            {name: '安装位置', value: 2},\r\n            {name: '设备名称', value: 3},\r\n            {name: '设备编号', value: 4},\r\n            {name: '额定流量', value: 5},\r\n            {name: '出厂公司', value: 6},\r\n            // {name: '出厂时间', value: 7},\r\n        ],\r\n    })\r\n\r\n    function getQuerryValue(connect) {\r\n        let parameter; // parameter\r\n        let value_a; // value\r\n        let relationship; // relationship\r\n        let logicOption;\r\n        let selectArr = demo1.getValue();\r\n\r\n        parameter = selectArr[0].value;\r\n        logicOption = layui.jquery('#logic').find('option:selected').val();\r\n        value_a = layui.jquery(\"#data-deviceHistory\").val();\r\n\r\n        if (connect != \"undefined\") {\r\n            relationship = connect;\r\n        } else {\r\n            relationship = \"0\";\r\n        }\r\n        statement[clickCount++] = parameter + \"|\" + logicOption + \"|\" + value_a + \"|\" + relationship;\r\n\r\n        // console.log(parameter + \",\" + relationship + \",\" + value_a);\r\n        // document.getElementById('demo2-value').innerHTML = `\\ndemo2.getValue()\\n\\n` + JSON.stringify(selectArr, null, 2);\r\n\r\n    }\r\n</script>\r\n\r\n<script>\r\n    layui.use(['form', 'table', 'laydate'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            layuimini = layui.layuimini;\r\n\r\n        table.render({\r\n            elem: '#currentTableId',\r\n            url: baseUrl + 'device/list',\r\n            headers: Authorization,\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                {field: 'installLine', width: 135, title: '安装线路'},\r\n                {field: 'installSite', width: 135, event: 'setSite', title: '安装处所'},\r\n                {field: 'installationPlace', width: 135, event: 'setSign', title: '安装位置'},\r\n                {field: 'name', width: 135, title: '设备名称'},\r\n                {field: 'powerSourceVoltage', width: 135, title: '电压'},\r\n                {field: 'powerSourcefrequency', title: '电源频率', minWidth: 135},\r\n                {field: 'electricCurrent', width: 135, title: '电流', sort: true},\r\n                {field: 'flow', width: 135, title: '额定流量', sort: true},\r\n                {field: 'lift', width: 135, title: '扬程'},\r\n                {field: 'weight', width: 135, title: '重量', sort: true},\r\n                {field: 'power', width: 135, title: '功率'},\r\n                {field: 'insulateGrade', width: 135, title: '绝缘等级', sort: true},\r\n                {field: 'rotateSpeed', width: 135, title: '转速', sort: true},\r\n                {field: 'caliber', width: 135, title: '口径', sort: true},\r\n                {field: 'lfdate', width: 135, title: '出厂时间', sort: true},\r\n                {field: 'pipelineOD', width: 135, title: '管道外径', sort: true},\r\n                {field: 'pipelineThickness', width: 135, title: '管壁厚度', sort: true},\r\n                {field: 'pipelineTexture', width: 135, title: '管道材质'},\r\n                {field: 'lfcompany', width: 135, title: '出厂公司'},\r\n                {field: 'deviceId', width: 135, title: '设备编号'},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n\r\n                {title: '操作', width: 150, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        // 监听表单sql连接\r\n        form.on('select(logic-connect)', function (data) {\r\n            getQuerryValue(data.value);\r\n        })\r\n\r\n        // 监听搜索操作\r\n        form.on('submit(data-search-btn)', function (data) {\r\n            clickCount = 0;\r\n            getQuerryValue(\"undefined\");\r\n            var result = JSON.stringify(data.field);\r\n            /* layer.alert(result, {\r\n                 title: '最终的搜索信息'\r\n             });*/\r\n\r\n            var obj = {\"queryData\": statement.toString()};\r\n\r\n            //执行搜索重载\r\n            table.reload('currentTableId', {\r\n                url: baseUrl + 'device/query',\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: 1,\r\n                limit: 10\r\n                , where: obj\r\n            }, 'data');\r\n            return false;\r\n        });\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function (obj) {\r\n            obj.event = \"add\";\r\n            let data = obj;\r\n            var index = layer.open({\r\n                title: '添加设备',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: './manageDevice.html',\r\n                success: function (layero, index) {\r\n                    var iframe = window['layui-layer-iframe' + index];\r\n                    iframe.child(data, index);\r\n                }\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        table.on('tool(filterDevice)', function (obj) {\r\n            let editData = obj;\r\n            let data = obj.data;\r\n\r\n            data.event = \"device-click\";\r\n            if (obj.event === 'setSign') {\r\n                layer.open({\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    title: \"<h3 style='text-align: center'>位于<span style='color: #1aa094;'>\" + data.installSite + \"</span>的<span style='color: #1aa094;'>\" + data.installationPlace + \"</span>处<span style='color: #1aa094;'>\" + data.deviceId + \"</span>号设备历史数据</h3>\",\r\n                    offset: 'auto',\r\n                    area: ['100%', '100%'],\r\n                    content: '../history/historyById.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(data, index);\r\n                    }\r\n                });\r\n            } else if (obj.event === 'setSite') {\r\n                setSite(data);\r\n            } else if (obj.event === 'edit') {\r\n                var index = layer.open({\r\n                    title: '编辑设备',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: './manageDevice.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(editData, index);\r\n                    }\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('请确保本条历史数据已备份,与之相关的所有数据将清除且不可恢复!是否继续?', function (index) {\r\n                    // let user=localStorage.getItem(\"user\");\r\n                    let desc = \"\";\r\n                    // if (user=='admin') {\r\n                    //     desc=prompt(\"请输入任务编号:\")\r\n                    // } else {\r\n                    desc = prompt(\"操作原因:\");\r\n                    // }\r\n                    if (desc != null) {\r\n                        $.ajax({\r\n                            type: \"post\",\r\n                            url: baseUrl + \"device/del\",\r\n                            contentType: \"application/json\",\r\n                            headers: auth,\r\n                            dataType: \"json\",\r\n                            data: JSON.stringify({\r\n                                \"deviceId\": obj.data.deviceId,\r\n                                \"opt\": \"2\",\r\n                                \"desc\": desc,\r\n                                \"operatingData\": \"all\"\r\n                            }),\r\n                            success: function (data) {\r\n                                if (data.code == '200') {\r\n                                    alert(data.msg);\r\n                                    // obj.del();\r\n                                } else {\r\n                                    alert(data.msg);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(filter-device)', function (obj) {\r\n            // console.log(obj)\r\n        });\r\n\r\n        //监听行单击事件\r\n        table.on('row(filterDevice)', function (obj) {\r\n\r\n            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');\r\n            // $.ajax({\r\n            //     type: \"POST\",\r\n            //     url: baseUrl + \"deviceHistory/queryDevice\",\r\n            //     contentType: \"application/json\",\r\n            //     headers: Authorization,\r\n            //     dataType: \"json\",\r\n            //     data: JSON.stringify({\"deviceId\": obj.data.deviceId}),\r\n            //     success: function (data) {\r\n            //         echarsData(data, obj.data,false);\r\n            //     }\r\n\r\n            queryDeviceHistory(obj); // 获取设备的历史记录\r\n\r\n        });\r\n\r\n        /*layer.alert(JSON.stringify(data), {\r\n            title: '当前行数据：'\r\n        });*/\r\n\r\n        //标注选中样式\r\n\r\n        function setSite(obj) {\r\n            table.reload('currentTableId', {\r\n                url: baseUrl + 'device/queryBySite',\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: 1,\r\n                limit: 10\r\n                , where: {\"installSite\": obj.installSite},\r\n                done: function (res, curr, count) {\r\n                    // currentData(res,curr,count);\r\n                    queryDeviceHistory(obj);\r\n                }\r\n            }, 'data');\r\n        }\r\n        \r\n        // function currentData(res,curr,count) {\r\n        //     let dId=[];\r\n        //     let obj;\r\n        //\r\n        //     for (var i=0;i<res.data.length;i++) {\r\n        //         dId[i]=res.data[i].deviceId;\r\n        //         obj={data:{deviceId:dId[i]}};\r\n        //         queryDeviceHistory(obj);\r\n        //     }\r\n        // }\r\n        \r\n\r\n        function queryDeviceHistory(obj) {\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: baseUrl + \"deviceHistory/queryDevice\",\r\n                contentType: \"application/json\",\r\n                headers: Authorization,\r\n                dataType: \"json\",\r\n                data: JSON.stringify({\"deviceId\": obj.data.deviceId}),\r\n                success: function (data) {\r\n                    echarsData(data, obj.data, false);\r\n                }\r\n            });\r\n        }\r\n\r\n        /*  let rangeData;\r\n          //日期时间范围选择\r\n          laydate.render({\r\n              elem: '#data-deviceHistory'\r\n              , type: 'datetime'\r\n              , range: true //或 range: '~' 来自定义分割字符\r\n              , change: function (dates) {\r\n                  rangeData = dates;\r\n              }\r\n          });*/\r\n\r\n    });\r\n</script>\r\n\r\n<script src=\"../../js/myJs/baoBiao.js\" charset=\"utf-8\"></script>\r\n<script type=\"text/html\" id=\"isIot\">\r\n    {{d.iotModuleID||\"便携式\"}}\r\n</script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/devices/devices.html b/../metertwo/src/main/resources/static/page/devices/devices.html
--- a/../metertwo/src/main/resources/static/page/devices/devices.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/devices/devices.html	(date 1601188824217)
@@ -115,8 +115,9 @@
             {name: '安装位置', value: 2},
             {name: '设备名称', value: 3},
             {name: '设备编号', value: 4},
-            {name: '额定流量', value: 5},
-            {name: '出厂公司', value: 6},
+            {name: '巡检编号', value: 5},
+            {name: '额定流量', value: 6},
+            {name: '出厂公司', value: 7},
             // {name: '出厂时间', value: 7},
         ],
     })
@@ -168,6 +169,10 @@
                 {field: 'installSite', width: 135, event: 'setSite', title: '安装处所'},
                 {field: 'installationPlace', width: 135, event: 'setSign', title: '安装位置'},
                 {field: 'name', width: 135, title: '设备名称'},
+                {field: 'inspectionPointId', width: 135, title: '巡检编号'},
+                {field: 'pipelineOD', width: 135, title: '管道外径', sort: true},
+                {field: 'pipelineThickness', width: 135, title: '管壁厚度', sort: true},
+                {field: 'pipelineTexture', width: 135, title: '管道材质',templet: "#pipelineTexture"},
                 {field: 'powerSourceVoltage', width: 135, title: '电压'},
                 {field: 'powerSourcefrequency', title: '电源频率', minWidth: 135},
                 {field: 'electricCurrent', width: 135, title: '电流', sort: true},
@@ -179,9 +184,7 @@
                 {field: 'rotateSpeed', width: 135, title: '转速', sort: true},
                 {field: 'caliber', width: 135, title: '口径', sort: true},
                 {field: 'lfdate', width: 135, title: '出厂时间', sort: true},
-                {field: 'pipelineOD', width: 135, title: '管道外径', sort: true},
-                {field: 'pipelineThickness', width: 135, title: '管壁厚度', sort: true},
-                {field: 'pipelineTexture', width: 135, title: '管道材质'},
+
                 {field: 'lfcompany', width: 135, title: '出厂公司'},
                 {field: 'deviceId', width: 135, title: '设备编号'},
                 {field: 'id', width: 80, title: '序号', sort: true},
@@ -420,6 +423,17 @@
 <script src="../../js/myJs/baoBiao.js" charset="utf-8"></script>
 <script type="text/html" id="isIot">
     {{d.iotModuleID||"便携式"}}
+</script>
+<script type="text/html" id="pipelineTexture">
+    {{#  if(d.pipelineTexture == '1'){ }}
+    <span>碳钢</span>
+    {{#  } else if(d.pipelineTexture == '2') { }}
+    <span>不锈钢</span>
+    {{#  } else if(d.pipelineTexture == '3') { }}
+    <span>PVC</span>
+    {{#  } else { }}
+    <!--    <span style="color: #e02e2e">异常</span>-->
+    {{#  } }}
 </script>
 </body>
 </html>
\ No newline at end of file
Index: ../metertwo/src/main/resources/static/page/devices/manageDevice.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>管理设备</title>\n    <meta name=\"renderer\" content=\"webkit\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <link rel=\"stylesheet\" href=\"../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\n    <link rel=\"stylesheet\" href=\"../../css/public.css\" media=\"all\">\n    <link rel=\"stylesheet\" href=\"../../js/lay-module/autocomplete/autocomplete.css\" media=\"all\">\n    <style>\n        body {\n            background-color: #ffffff;\n        }\n        .layui-input-block {\n            position: unset !important;\n        }\n        .layui-form-item {\n            clear: unset;\n            float: left;\n        }\n        .layui-btn {\n            clear: both;\n            float: left;\n        }\n    </style>\n</head>\n<body>\n<div id=\"app-device\" class=\"layui-form layuimini-form\">\n\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">安装线路</label>\n        <div class=\"layui-input-block\" style=\"width: 190px\">\n            <!--<input v-model=\"installLine\" type=\"text\" name=\"installLine\" lay-verify=\"required\" lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入线路号\" value=\"\"\n                   class=\"layui-input\">-->\n\n            <select class=\"installLine\" lay-verify=\"required\" name=\"installLine\" lay-filter=\"installLine\">\n                <option value=\"\">请选择</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">安装处所</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"installSite\" type=\"text\" name=\"installSite\" lay-verify=\"required\" lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入地点\" value=\"null\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">安装位置</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"installationPlace\" type=\"text\" name=\"installationPlace\" lay-verify=\"required\"\n                   lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入点位\" value=\"null\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">设备名称</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"name\" type=\"text\" name=\"name\" lay-verify=\"required\" lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入\" value=\"null\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label deviceId required\">设备编号</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"deviceId\" type=\"text\" name=\"deviceId\" lay-verify=\"required|number\" lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入11位以内数字\" value=\"0\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label iotModuleID\">IOT编号</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"iotModuleID\" type=\"text\" lay-verify=\"\" name=\"iotModuleID\"\n                   placeholder=\"请输入11位以内数字\" value=\"0\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">设备电压</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"powerSourceVoltage\" type=\"text\" name=\"powerSourceVoltage\" lay-verify=\"\"\n                   placeholder=\"请输入(V)\"\n                   value=\"0\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">电源频率</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"powerSourcefrequency\" type=\"text\" name=\"powerSourcefrequency\" placeholder=\"请输入(HZ)\"\n                   value=\"0\"\n                   class=\"layui-input\" lay-verify=\"0\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">设备电流</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"electricCurrent\" type=\"text\" name=\"electricCurrent\"\n                   placeholder=\"请输入(A)\"\n                   value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">额定流量</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"flow\" type=\"text\" name=\"flow\" placeholder=\"请输入(m^3/h)\"\n                   value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">扬程</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"lift\" type=\"text\" name=\"lift\" placeholder=\"请输入(m)\"\n                   value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">重量</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"weight\" type=\"text\" name=\"weight\" placeholder=\"请输入(kg)\"\n                   value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">功率</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"power\" type=\"text\" name=\"power\" placeholder=\"请输入(kw)\"\n                   value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">绝缘等级</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"insulateGrade\" type=\"text\" name=\"insulateGrade\"\n                   placeholder=\"请输入\" value=\"null\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">转速</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"rotateSpeed\" type=\"text\" name=\"rotateSpeed\"\n                   placeholder=\"请输入(r/min)\" value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">口径</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"caliber\" type=\"text\" name=\"caliber\"\n                   placeholder=\"请输入(mm)\" value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">管道外径</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"pipelineOD\" type=\"text\" name=\"pipelineOD\"\n                   placeholder=\"请输入(mm)\" value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">管壁厚度</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"pipelineThickness\" type=\"text\" name=\"pipelineThickness\" placeholder=\"请输入(mm)\"\n                   value=\"0\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label\">管道材质</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"pipelineTexture\" type=\"text\" name=\"pipelineTexture\"\n                   placeholder=\"请输入数字\"\n                   value=\"null\"\n                   class=\"layui-input\" lay-verify=\"\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">出厂公司</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"lfcompany\" type=\"text\" name=\"lfcompany\" lay-verify=\"required\" lay-reqtext=\"不能为空\"\n                   placeholder=\"请输入\" value=\"null\"\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <label class=\"layui-form-label required\">出厂时间</label>\n        <div class=\"layui-input-block\">\n            <input v-model=\"lFDate\" id=\"device-lFDate\" type=\"text\" name=\"lFDate\" lay-verify=\"required\"\n                   lay-reqtext=\"不能为空\"\n                   placeholder=\"请选择\" readonly\n                   class=\"layui-input\">\n        </div>\n    </div>\n    <div class=\"layui-form-item\">\n        <div id=\"checkVl\"></div>\n    </div>\n\n    <div class=\"layui-input-block\">\n        <button class=\"layui-btn\" lay-submit lay-filter=\"saveBtn\">提交</button>\n    </div>\n\n</div>\n<script src=\"../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\n<script src=\"../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\n<script src=\"../../libs/vue/vue.js\" charset=\"utf-8\"></script>\n<script>\n\n    function child(data, indexNum) {\n        let opt = data.event; // 操作类型\n        let oldData = data; // 旧数据\n\n        if (opt == 'edit') {\n            new Vue({\n                el: '#app-device',\n                data: oldData.data\n            });\n        }\n\n        layui.use(['form', 'laydate', 'jquery'], function () {\n            var form = layui.form,\n                layer = layui.layer,\n                laydate = layui.laydate,\n                $ = layui.jquery;\n\n            let rangeData = \"\";\n\n            //日期时间范围选择\n            laydate.render({\n                elem: '#device-lFDate'\n                , type: 'datetime'\n                , change: function (dates) {\n                    rangeData = dates;\n                }\n            });\n\n            //监听提交\n            form.on('submit(saveBtn)', function (data) {\n                var index = layer.alert(\"确认提交吗?\", {}, function () {\n                    if (\"edit\" == opt) {\n                        data.field.id = oldData.data.id;\n                    }\n                    data.field.opt = opt; // 定义操作字段\n\n                    console.log(JSON.stringify(data.field));\n\n                    $.ajax({\n                        type: \"POST\",\n                        url: baseUrl + \"device/manageDevice\",\n                        contentType: \"application/json\",\n                        headers: auth,\n                        dataType: \"json\",\n                        data: JSON.stringify(data.field),\n                        success: function (data) {\n                            alert(data.msg);\n                        }\n                    });\n\n                    // 关闭弹出层\n                    layer.close(index);\n\n                    var iframeIndex = parent.layer.getFrameIndex(window.name);\n                    parent.layer.close(iframeIndex);\n                    reloadWindow();\n                });\n            });\n            return false;\n        });\n    }\n</script>\n<script type=\"application/javascript\" charset=\"utf-8\">\n    layui.use(['form', 'laydate', 'autocomplete'], function () {\n        var form = layui.form,\n            layer = layui.layer,\n            laydate = layui.laydate,\n            autocomplete = layui.autocomplete;\n        $ = layui.jquery;\n\n        // 表单验证\n\n        for (var i = 1; i <= 50; i++) {\n            $(\".installLine\").append(\"<option>\" + i + \"号线</option>\");\n        }\n\n        form.render('select');\n\n        $(lay('.layui-input')).on('click', function (e) {\n            // console.log(this.name);\n            $.ajax({\n                type: 'get',\n                url: baseUrl + 'device/list?limit=100&page=1',\n                contentType: \"application/json\",\n                headers: auth,\n                dataType: \"json\",\n                success: function (data) {\n                    // console.log(data.data);\n                    auto_render(this,data.data);\n                }\n            });\n        })\n\n        $(lay('.layui-input')).on('blur', function (e) {\n            checkForm(this);\n        })\n\n        function auto_render(input,data) {\n            autocomplete.render({\n                // data: data,\n                // elem: $('input[name=example1]'),\n                elem: input,\n                // url: baseUrl + '/device/queryAllDevice?limit=20&page=1',\n                url: baseUrl + 'device/list?limit=100&page=1',\n                // headers:Authorization,\n                cache: true,\n                template_val: \"{{d.\" + input.name + \"}}\",\n                template_txt: \"<span class=\\'layui-badge layui-bg-gray\\'>{{d.\" + input.name + \"}}</span>\",\n                onselect: function (resp) {\n                    console.log(resp);\n                }\n            })\n            form.render();\n        }\n\n        function checkForm(field) {\n            let name = field.name;\n            let value = field.value;\n            let obj = {\"check\": name + \"|\" + value};\n\n            $.ajax({\n                type: 'POST',\n                url: baseUrl + \"device/formCheck\",\n                contentType: \"application/json\",\n                headers: auth,\n                data: JSON.stringify(obj),\n                dataType: \"json\",\n                success: function (data) {\n                    let d1 = parseInt(data.data.existence);\n                    let lab=\"\";\n                    if (1 == d1) {\n                        // console.log(field);\n                        // field.innerHtml=\"<span><i style=\\\"background-color: #FF5722\\\" class=\\\"layui-badge-dot\\\"></i></span>\";\n                        // console.log(document.getElementsByName(name));\n                        // field.document.getElementsByClassName(\"layui-input\").css('color','#dc143c')\n                        // alert(\"数据已存在!\");\n                        lab=$(\".\"+name);\n                        document.getElementById(\"checkVl\").innerHTML=\"<span style='color: #e02e2e'>\"+lab[0].innerText+\"重复，请重新输入!</span>\";\n                        // form.render();\n                    }\n                }\n            });\n        }\n    });\n</script>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/devices/manageDevice.html b/../metertwo/src/main/resources/static/page/devices/manageDevice.html
--- a/../metertwo/src/main/resources/static/page/devices/manageDevice.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/devices/manageDevice.html	(date 1601190432829)
@@ -13,13 +13,16 @@
         body {
             background-color: #ffffff;
         }
+
         .layui-input-block {
             position: unset !important;
         }
+
         .layui-form-item {
             clear: unset;
             float: left;
         }
+
         .layui-btn {
             clear: both;
             float: left;
@@ -32,13 +35,13 @@
     <div class="layui-form-item">
         <label class="layui-form-label required">安装线路</label>
         <div class="layui-input-block" style="width: 190px">
-            <!--<input v-model="installLine" type="text" name="installLine" lay-verify="required" lay-reqtext="不能为空"
+            <input v-model="installLine" type="text" name="installLine" lay-verify="required" lay-reqtext="不能为空"
                    placeholder="请输入线路号" value=""
-                   class="layui-input">-->
+                   class="layui-input">
 
-            <select class="installLine" lay-verify="required" name="installLine" lay-filter="installLine">
+            <!--<select class="installLine" lay-verify="required" name="installLine" lay-filter="installLine">
                 <option value="">请选择</option>
-            </select>
+            </select>-->
         </div>
     </div>
     <div class="layui-form-item">
@@ -66,6 +69,7 @@
                    class="layui-input">
         </div>
     </div>
+
     <div class="layui-form-item">
         <label class="layui-form-label deviceId required">设备编号</label>
         <div class="layui-input-block">
@@ -75,13 +79,57 @@
         </div>
     </div>
     <div class="layui-form-item">
-        <label class="layui-form-label iotModuleID">IOT编号</label>
-        <div class="layui-input-block">
-            <input v-model="iotModuleID" type="text" lay-verify="" name="iotModuleID"
-                   placeholder="请输入11位以内数字" value="0"
-                   class="layui-input">
-        </div>
-    </div>
+        <label class="layui-form-label deviceId required">巡检编号</label>
+        <div class="layui-input-block">
+            <input v-model="inspectionPointId" type="text" name="inspectionPointId" lay-verify="required|number"
+                   lay-reqtext="不能为空"
+                   placeholder="请输入11位以内数字" value="0"
+                   class="layui-input">
+        </div>
+    </div>
+
+    <div class="layui-form-item">
+        <label class="layui-form-label required">管道外径</label>
+        <div class="layui-input-block">
+            <input v-model="pipelineOD" type="text" name="pipelineOD"
+                   placeholder="请输入(mm)" value="0" required
+                   class="layui-input" lay-verify="">
+        </div>
+    </div>
+    <div class="layui-form-item">
+        <label class="layui-form-label required">管壁厚度</label>
+        <div class="layui-input-block">
+            <input v-model="pipelineThickness" type="text" name="pipelineThickness" placeholder="请输入(mm)"
+                   value="0" required
+                   class="layui-input" lay-verify="">
+        </div>
+    </div>
+    <div class="layui-form-item">
+        <label class="layui-form-label required">管道材质</label>
+        <!--        <div class="layui-input-block">-->
+        <!-- <input v-model="pipelineTexture" type="text" name="pipelineTexture"
+                placeholder="请输入数字"
+                value="null"
+                class="layui-input" lay-verify="">-->
+        <div class="layui-input-block" style="width: 190px">
+            <select v-model="pipelineTexture" name="pipelineTexture" lay-verify="required" lay-filter="pipelineTexture">
+                <option value="">请选择</option>
+                <option value="1">碳钢</option>
+                <option value="2">不锈钢</option>
+                <option value="3">PVC</option>
+            </select>
+        </div>
+    </div>
+
+    <!-- <div class="layui-form-item">
+         <label class="layui-form-label iotModuleID">IOT编号</label>
+         <div class="layui-input-block">
+             <input v-model="iotModuleID" type="text" lay-verify="" name="iotModuleID"
+                    placeholder="请输入11位以内数字" value="0"
+                    class="layui-input">
+         </div>
+     </div>-->
+
     <div class="layui-form-item">
         <label class="layui-form-label">设备电压</label>
         <div class="layui-input-block">
@@ -167,43 +215,19 @@
         </div>
     </div>
 
-    <div class="layui-form-item">
-        <label class="layui-form-label">管道外径</label>
-        <div class="layui-input-block">
-            <input v-model="pipelineOD" type="text" name="pipelineOD"
-                   placeholder="请输入(mm)" value="0"
-                   class="layui-input" lay-verify="">
-        </div>
-    </div>
-    <div class="layui-form-item">
-        <label class="layui-form-label">管壁厚度</label>
-        <div class="layui-input-block">
-            <input v-model="pipelineThickness" type="text" name="pipelineThickness" placeholder="请输入(mm)"
-                   value="0"
-                   class="layui-input" lay-verify="">
-        </div>
-    </div>
-    <div class="layui-form-item">
-        <label class="layui-form-label">管道材质</label>
-        <div class="layui-input-block">
-            <input v-model="pipelineTexture" type="text" name="pipelineTexture"
-                   placeholder="请输入数字"
-                   value="null"
-                   class="layui-input" lay-verify="">
-        </div>
-    </div>
+
     <div class="layui-form-item">
-        <label class="layui-form-label required">出厂公司</label>
+        <label class="layui-form-label ">出厂公司</label>
         <div class="layui-input-block">
-            <input v-model="lfcompany" type="text" name="lfcompany" lay-verify="required" lay-reqtext="不能为空"
+            <input v-model="lfcompany" type="text" name="lfcompany"
                    placeholder="请输入" value="null"
                    class="layui-input">
         </div>
     </div>
     <div class="layui-form-item">
-        <label class="layui-form-label required">出厂时间</label>
+        <label class="layui-form-label">出厂时间</label>
         <div class="layui-input-block">
-            <input v-model="lFDate" id="device-lFDate" type="text" name="lFDate" lay-verify="required"
+            <input v-model="lfdate" id="device-lFDate" type="text" name="lFDate"
                    lay-reqtext="不能为空"
                    placeholder="请选择" readonly
                    class="layui-input">
@@ -295,11 +319,11 @@
 
         // 表单验证
 
-        for (var i = 1; i <= 50; i++) {
+        /*for (var i = 1; i <= 50; i++) {
             $(".installLine").append("<option>" + i + "号线</option>");
         }
 
-        form.render('select');
+        form.render('select');*/
 
         $(lay('.layui-input')).on('click', function (e) {
             // console.log(this.name);
@@ -310,8 +334,7 @@
                 headers: auth,
                 dataType: "json",
                 success: function (data) {
-                    // console.log(data.data);
-                    auto_render(this,data.data);
+                    auto_render(this, data.data);
                 }
             });
         })
@@ -320,7 +343,7 @@
             checkForm(this);
         })
 
-        function auto_render(input,data) {
+        function auto_render(input, data) {
             autocomplete.render({
                 // data: data,
                 // elem: $('input[name=example1]'),
@@ -352,16 +375,10 @@
                 dataType: "json",
                 success: function (data) {
                     let d1 = parseInt(data.data.existence);
-                    let lab="";
+                    let lab = "";
                     if (1 == d1) {
-                        // console.log(field);
-                        // field.innerHtml="<span><i style=\"background-color: #FF5722\" class=\"layui-badge-dot\"></i></span>";
-                        // console.log(document.getElementsByName(name));
-                        // field.document.getElementsByClassName("layui-input").css('color','#dc143c')
-                        // alert("数据已存在!");
-                        lab=$("."+name);
-                        document.getElementById("checkVl").innerHTML="<span style='color: #e02e2e'>"+lab[0].innerText+"重复，请重新输入!</span>";
-                        // form.render();
+                        lab = $("." + name);
+                        document.getElementById("checkVl").innerHTML = "<span style='color: #e02e2e'>" + lab[0].innerText + "重复，请重新输入!</span>";
                     }
                 }
             });
Index: ../metertwo/src/main/resources/static/page/history/deviceHistory.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>历史库</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../css/public.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\r\n</head>\r\n<body>\r\n<div class=\"layuimini-container\">\r\n    <div class=\"layuimini-main\">\r\n\r\n        <fieldset class=\"table-search-fieldset\">\r\n            <legend>查询条件</legend>\r\n            <div style=\"margin: 10px 10px 10px 10px\">\r\n                <form class=\"layui-form layui-form-pane\" action=\"\">\r\n                    <div class=\"layui-form-item\">\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <div id=\"device-search-condition\" style=\"width: 220px\"></div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <select id=\"logic\" lay-verify=\"\" lay-filter=\"logic\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">?</option>\r\n                                <option value=\"2\">></option>\r\n                                <option value=\"3\">=</option>\r\n                                <option value=\"4\"><</option>\r\n                                <option value=\"5\">>=</option>\r\n                                <option value=\"6\"><=</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" class=\"layui-input\" id=\"data-deviceHistory\" placeholder=\"请输入\"\r\n                                       lay-key=\"18\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <div class=\"layui-inline\">\r\n                                <select id=\"connect\" lay-verify=\"\" lay-filter=\"logic-connect\">\r\n                                    <option value=\"\">请选择</option>\r\n                                    <option value=\"1\">且</option>\r\n                                    <option value=\"2\">或</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <!--                            <button type=\"button\" class=\"layui-btn\" onclick=\"getQuerryValue()\">调入</button>-->\r\n\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <button type=\"submit\" class=\"layui-btn layui-btn-primary\" lay-submit\r\n                                    lay-filter=\"data-search-btn\"><i class=\"layui-icon\">\uE615</i> 搜 索\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <script type=\"text/html\" id=\"toolbarDemo\">\r\n            <div class=\"layui-btn-container\">\r\n                <!--                <button class=\"layui-btn layui-btn-sm data-add-btn\" lay-event=\"add\"> 添加设备</button>-->\r\n                <!--                <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除设备</button>-->\r\n            </div>\r\n        </script>\r\n\r\n        <table class=\"layui-hide\" id=\"currentTableId\" lay-filter=\"filter-device\"></table>\r\n\r\n        <script type=\"text/html\" id=\"currentTableBar\">\r\n            <!--            <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>-->\r\n            <!--            <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>-->\r\n        </script>\r\n\r\n    </div>\r\n    <div class=\"layui-col-md12\">\r\n        <div class=\"layui-card\">\r\n            <div class=\"layui-card-header\"><i class=\"fa fa-line-chart icon\"></i>报表统计</div>\r\n            <div class=\"layui-card-body\">\r\n                <div id=\"echarts-records\" style=\"width: 100%;min-height:500px\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script src=\"../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/xm-select/xm-select.js\" charset=\"utf-8\"></script>\r\n<script rel=\"script\" charset=\"utf-8\">\r\n\r\n    var statement = [];\r\n    var clickCount = 0;\r\n\r\n    var demo1 = xmSelect.render({\r\n        el: '#device-search-condition',\r\n        theme: {\r\n            color: '#5fb878',\r\n        },\r\n        toolbar: {\r\n            show: true,\r\n            list: ['ALL', 'CLEAR', 'REVERSE']\r\n        },\r\n        filterable: true,\r\n        paging: true,\r\n        pageSize: 4,\r\n        data: [\r\n            {name: '安装处所', value: 1},\r\n            {name: '安装位置', value: 2},\r\n            {name: '设备名称', value: 3},\r\n            {name: '设备编号', value: 4},\r\n            {name: '额定流量', value: 5},\r\n            {name: '出厂公司', value: 6},\r\n            // {name: '出厂时间', value: 7},\r\n        ],\r\n    })\r\n\r\n    function getQuerryValue(connect) {\r\n        let parameter; // parameter\r\n        let value_a; // value\r\n        let relationship; // relationship\r\n        let logicOption;\r\n        let selectArr = demo1.getValue();\r\n\r\n        parameter = selectArr[0].value;\r\n        logicOption = layui.jquery('#logic').find('option:selected').val();\r\n        value_a = layui.jquery(\"#data-deviceHistory\").val();\r\n\r\n        if (connect != \"undefined\") {\r\n            relationship = connect;\r\n        } else {\r\n            relationship = \"0\";\r\n        }\r\n        statement[clickCount++] = parameter + \"|\" + logicOption + \"|\" + value_a + \"|\" + relationship;\r\n\r\n        // console.log(parameter + \",\" + relationship + \",\" + value_a);\r\n        // document.getElementById('demo2-value').innerHTML = `\\ndemo2.getValue()\\n\\n` + JSON.stringify(selectArr, null, 2);\r\n\r\n    }\r\n</script>\r\n<script>\r\n\r\n\r\n    layui.use(['form', 'table', 'laydate'], function () {\r\n        var $ = layui.jquery,\r\n            form = layui.form,\r\n            table = layui.table,\r\n            laydate = layui.laydate,\r\n            layuimini = layui.layuimini;\r\n\r\n\r\n        table.render({\r\n            elem: '#currentTableId',\r\n            headers: Authorization,\r\n            url: baseUrl + 'device/list',\r\n            toolbar: '#toolbarDemo',\r\n            defaultToolbar: ['filter', 'exports', 'print', {\r\n                title: '提示',\r\n                layEvent: 'LAYTABLE_TIPS',\r\n                icon: 'layui-icon-tips'\r\n            }],\r\n            cols: [[\r\n                {field: 'installLine', width: 135, title: '安装线路'},\r\n                {field: 'installSite', width: 135, event: 'setSite', title: '安装处所'},\r\n                {field: 'installationPlace', width: 135, event: 'setSign', title: '安装位置'},\r\n                {field: 'name', width: 135, title: '设备名称'},\r\n                {field: 'powerSourceVoltage', width: 135, title: '电压'},\r\n                {field: 'powerSourcefrequency', title: '电源频率', minWidth: 135},\r\n                {field: 'electricCurrent', width: 135, title: '电流', sort: true},\r\n                {field: 'flow', width: 135, title: '额定流量', sort: true},\r\n                {field: 'lift', width: 135, title: '扬程'},\r\n                {field: 'weight', width: 135, title: '重量', sort: true},\r\n                {field: 'power', width: 135, title: '功率', sort: true},\r\n                {field: 'insulateGrade', width: 135, title: '绝缘等级'},\r\n                {field: 'rotateSpeed', width: 135, title: '转速', sort: true},\r\n                {field: 'caliber', width: 135, title: '口径', sort: true},\r\n                {field: 'lfdate', width: 135, title: '出厂时间', sort: true},\r\n                // {field: 'installSite', width: 135, title: '安装位置', sort: true},\r\n                {field: 'pipelineOD', width: 135, title: '管道外径', sort: true},\r\n                {field: 'pipelineThickness', width: 135, title: '管壁厚度', sort: true},\r\n                {field: 'pipelineTexture', width: 135, title: '管道材质'},\r\n                {field: 'lfcompany', width: 135, title: '出厂公司'},\r\n                {field: 'deviceId', width: 135, title: '设备编号', sort: true},\r\n                {field: 'id', width: 80, title: '序号', sort: true},\r\n\r\n                // {title: '操作', width: 150, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n            ]],\r\n            limits: [10, 15, 20, 25, 50, 100],\r\n            limit: 10,\r\n            page: true\r\n        });\r\n\r\n        function setSite(obj) {\r\n            table.reload('currentTableId', {\r\n                url: baseUrl + 'device/queryBySite',\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: 1,\r\n                limit: 10\r\n                , where: {\"installSite\":obj.installSite}\r\n            }, 'data');\r\n        }\r\n\r\n        // 监听搜索操作\r\n        form.on('submit(data-search-btn)', function (data) {\r\n            /*var result = JSON.stringify(data.field);\r\n             layer.alert(result, {\r\n             title: '最终的搜索信息'\r\n         });*/\r\n            clickCount = 0;\r\n            getQuerryValue(\"undefined\");\r\n            var obj = {\"queryData\": statement.toString()};\r\n\r\n            //执行搜索重载\r\n            table.reload('currentTableId', {\r\n                url: baseUrl + 'device/query',\r\n                method: 'post'\r\n                , contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                page: 1,\r\n                limit: 10\r\n                , where: obj\r\n            }, 'data');\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听添加操作\r\n        $(\".data-add-btn\").on(\"click\", function (obj) {\r\n            obj.event = \"add\";\r\n            let data = obj;\r\n            var index = layer.open({\r\n                title: '添加设备',\r\n                type: 2,\r\n                shade: 0.2,\r\n                maxmin: true,\r\n                shadeClose: true,\r\n                area: ['100%', '100%'],\r\n                content: './manageDevice.html',\r\n                success: function (layero, index) {\r\n                    var iframe = window['layui-layer-iframe' + index];\r\n                    iframe.child(data, index);\r\n                }\r\n            });\r\n            $(window).on(\"resize\", function () {\r\n                layer.full(index);\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        // 监听表单sql连接\r\n        form.on('select(logic-connect)', function (data) {\r\n            getQuerryValue(data.value);\r\n        })\r\n\r\n        // 监听删除操作\r\n        $(\".data-delete-btn\").on(\"click\", function () {\r\n            var checkStatus = table.checkStatus('currentTableId')\r\n                , data = checkStatus.data;\r\n            layer.alert(JSON.stringify(data));\r\n        });\r\n\r\n        //监听表格复选框选择\r\n        table.on('checkbox(filter-device)', function (obj) {\r\n            // console.log(obj)\r\n        });\r\n\r\n        //监听单元格事件\r\n        table.on('tool(filter-device)', function (obj) {\r\n            var data = obj.data;\r\n            data.event = \"device-click\";\r\n            if (obj.event === 'setSign') {\r\n                layer.open({\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    title: \"<h3 style='text-align: center'>位于<span style='color: #1aa094;'>\" + data.installSite + \"</span>的<span style='color: #1aa094;'>\" + data.installationPlace + \"</span>处<span style='color: #1aa094;'>\" + data.deviceId + \"</span>号设备历史数据</h3>\",\r\n                    offset: 'auto',\r\n                    area: ['100%', '100%'],\r\n                    content: '../history/historyById.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(data, index);\r\n                    }\r\n                });\r\n            }else if (obj.event === 'setSite') {\r\n                setSite(data);\r\n            }\r\n        });\r\n\r\n        //监听行单击事件\r\n        table.on('row(filter-device)', function (obj) {\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: baseUrl + \"deviceHistory/queryDevice\",\r\n                contentType: \"application/json\",\r\n                headers: auth,\r\n                dataType: \"json\",\r\n                data: JSON.stringify({\"deviceId\": obj.data.deviceId}),\r\n                success: function (data) {\r\n                    echarsData(data, obj.data,false);\r\n                }\r\n            });\r\n\r\n            /*layer.alert(JSON.stringify(data), {\r\n                title: '当前行数据：'\r\n            });*/\r\n\r\n            //标注选中样式\r\n            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');\r\n        });\r\n\r\n        table.on('tool(currentTableFilter)', function (obj) {\r\n            let editData = obj;\r\n            if (obj.event === 'edit') {\r\n                var index = layer.open({\r\n                    title: '编辑设备',\r\n                    type: 2,\r\n                    shade: 0.2,\r\n                    maxmin: true,\r\n                    shadeClose: true,\r\n                    area: ['100%', '100%'],\r\n                    content: './manageDevice.html',\r\n                    success: function (layero, index) {\r\n                        var iframe = window['layui-layer-iframe' + index];\r\n                        iframe.child(editData, index);\r\n                    }\r\n                });\r\n                $(window).on(\"resize\", function () {\r\n                    layer.full(index);\r\n                });\r\n                return false;\r\n            } else if (obj.event === 'delete') {\r\n                layer.confirm('真的删除行么', function (index) {\r\n                    $.ajax({\r\n                        type: \"delete\",\r\n                        url: baseUrl + \"device/delDevice\",\r\n                        contentType: \"application/json\",\r\n                        headers: auth,\r\n                        dataType: \"json\",\r\n                        data: JSON.stringify({\"id\": obj.data.id}),\r\n                        success: function (data) {\r\n                            alert(data.msg);\r\n                        }\r\n                    });\r\n\r\n                    obj.del();\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n\r\n        /* let rangeData = \"\";\r\n         //日期时间范围选择\r\n         laydate.render({\r\n             elem: '#data-deviceHistory'\r\n             , type: 'datetime'\r\n             , range: true //或 range: '~' 来自定义分割字符\r\n             , change: function (dates) {\r\n                 rangeData = dates;\r\n             }\r\n         });*/\r\n\r\n    });\r\n</script>\r\n\r\n<script src=\"../../js/myJs/baoBiao.js\" charset=\"utf-8\"></script>\r\n<script type=\"text/html\" id=\"isIot\">\r\n    {{d.iotModuleID||\"便携式\"}}\r\n</script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/history/deviceHistory.html b/../metertwo/src/main/resources/static/page/history/deviceHistory.html
--- a/../metertwo/src/main/resources/static/page/history/deviceHistory.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/history/deviceHistory.html	(date 1601188784368)
@@ -116,8 +116,9 @@
             {name: '安装位置', value: 2},
             {name: '设备名称', value: 3},
             {name: '设备编号', value: 4},
-            {name: '额定流量', value: 5},
-            {name: '出厂公司', value: 6},
+            {name: '巡检编号', value: 5},
+            {name: '额定流量', value: 6},
+            {name: '出厂公司', value: 7},
             // {name: '出厂时间', value: 7},
         ],
     })
@@ -171,6 +172,10 @@
                 {field: 'installSite', width: 135, event: 'setSite', title: '安装处所'},
                 {field: 'installationPlace', width: 135, event: 'setSign', title: '安装位置'},
                 {field: 'name', width: 135, title: '设备名称'},
+                {field: 'inspectionPointId', width: 135, title: '巡检编号'},
+                {field: 'pipelineOD', width: 135, title: '管道外径', sort: true},
+                {field: 'pipelineThickness', width: 135, title: '管壁厚度', sort: true},
+                {field: 'pipelineTexture', width: 135, title: '管道材质',templet:"#pipelineTexture"},
                 {field: 'powerSourceVoltage', width: 135, title: '电压'},
                 {field: 'powerSourcefrequency', title: '电源频率', minWidth: 135},
                 {field: 'electricCurrent', width: 135, title: '电流', sort: true},
@@ -183,9 +188,7 @@
                 {field: 'caliber', width: 135, title: '口径', sort: true},
                 {field: 'lfdate', width: 135, title: '出厂时间', sort: true},
                 // {field: 'installSite', width: 135, title: '安装位置', sort: true},
-                {field: 'pipelineOD', width: 135, title: '管道外径', sort: true},
-                {field: 'pipelineThickness', width: 135, title: '管壁厚度', sort: true},
-                {field: 'pipelineTexture', width: 135, title: '管道材质'},
+
                 {field: 'lfcompany', width: 135, title: '出厂公司'},
                 {field: 'deviceId', width: 135, title: '设备编号', sort: true},
                 {field: 'id', width: 80, title: '序号', sort: true},
@@ -377,6 +380,17 @@
 <script src="../../js/myJs/baoBiao.js" charset="utf-8"></script>
 <script type="text/html" id="isIot">
     {{d.iotModuleID||"便携式"}}
+</script>
+<script type="text/html" id="pipelineTexture">
+    {{#  if(d.pipelineTexture == '1'){ }}
+    <span>碳钢</span>
+    {{#  } else if(d.pipelineTexture == '2') { }}
+    <span>不锈钢</span>
+    {{#  } else if(d.pipelineTexture == '3') { }}
+    <span>PVC</span>
+    {{#  } else { }}
+    <!--    <span style="color: #e02e2e">异常</span>-->
+    {{#  } }}
 </script>
 </body>
 </html>
\ No newline at end of file
Index: ../metertwo/src/main/resources/static/page/history/historyById.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>历史库</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"../../libs/layui-v2.5.5/css/layui.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../css/public.css\" media=\"all\">\r\n    <link rel=\"stylesheet\" href=\"../../libs/font-awesome-4.7.0/css/font-awesome.min.css\" media=\"all\">\r\n</head>\r\n<body>\r\n<div class=\"layuimini-container\">\r\n    <div class=\"layuimini-main\">\r\n\r\n        <fieldset class=\"table-search-fieldset\">\r\n            <legend>查询条件</legend>\r\n            <div style=\"margin: 10px 10px 10px 10px\">\r\n                <form class=\"layui-form layui-form-pane\" action=\"\">\r\n                    <div class=\"layui-form-item\">\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <div id=\"device-search-condition\" style=\"width: 220px\"></div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"logic\" lay-verify=\"\" lay-filter=\"logic\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">?</option>\r\n                                <option value=\"2\">></option>\r\n                                <option value=\"3\">=</option>\r\n                                <option value=\"4\"><</option>\r\n                                <option value=\"5\">>=</option>\r\n                                <option value=\"6\"><=</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <!--                            <label class=\"layui-form-label\">参数值</label>-->\r\n                            <div class=\"layui-input-inline\">\r\n                                <input type=\"text\" class=\"layui-input\" id=\"data-deviceHistory\" placeholder=\"请输入\"\r\n                                       lay-key=\"18\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"layui-inline\" style=\"width: 100px\">\r\n                            <select id=\"connect\" lay-verify=\"\" lay-filter=\"logic-connect\">\r\n                                <option value=\"\">请选择</option>\r\n                                <option value=\"1\">且</option>\r\n                                <option value=\"2\">或</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <!--                            <button type=\"button\" class=\"layui-btn\" onclick=\"getQuerryValue()\">调入</button>-->\r\n\r\n                        <div class=\"layui-inline\">\r\n                            <button type=\"submit\" class=\"layui-btn layui-btn-primary\" lay-submit\r\n                                    lay-filter=\"data-search-btn\"><i class=\"layui-icon\">\uE615</i> 搜 索\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <script type=\"text/html\" id=\"toolbarDemo\">\r\n            <div class=\"layui-btn-container\">\r\n                               <!-- <button class=\"layui-btn layui-btn-sm data-add-btn\"> 添加历史</button>\r\n                                <button class=\"layui-btn layui-btn-sm layui-btn-danger data-delete-btn\"> 删除历史</button>-->\r\n            </div>\r\n        </script>\r\n\r\n        <table class=\"layui-hide\" id=\"tbl-device-history\" lay-filter=\"currentTableFilter\"></table>\r\n\r\n        <script type=\"text/html\" id=\"currentTableBar\">\r\n<!--            <a class=\"layui-btn layui-btn-xs data-count-edit\" lay-event=\"edit\">编辑</a>-->\r\n            <a class=\"layui-btn layui-btn-xs layui-btn-danger data-count-delete\" lay-event=\"delete\">删除</a>\r\n        </script>\r\n    </div>\r\n\r\n    <div class=\"layui-col-md12\">\r\n        <div class=\"layui-card\">\r\n            <div class=\"layui-card-header\"><i class=\"fa fa-line-chart icon\"></i>报表统计</div>\r\n            <div class=\"layui-card-body\">\r\n                <div id=\"echarts-records\" style=\"width: 100%;min-height:500px\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<script src=\"../../libs/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/lay-config.js?v=1.0.4\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/lay-module/echarts/ecStat.min.js\" charset=\"utf-8\"></script>\r\n<script src=\"../../js/xm-select/xm-select.js\" charset=\"utf-8\"></script>\r\n<script rel=\"script\" charset=\"utf-8\">\r\n\r\n    var statement = [];\r\n    var clickCount = 0;\r\n\r\n    var demo1 = xmSelect.render({\r\n        el: '#device-search-condition',\r\n        theme: {\r\n            color: '#5fb878',\r\n        },\r\n        toolbar: {\r\n            show: true,\r\n            list: ['ALL', 'CLEAR', 'REVERSE']\r\n        },\r\n        filterable: true,\r\n        paging: true,\r\n        pageSize: 4,\r\n        data: [\r\n            {name: '瞬时流量', value: 1},\r\n            {name: '瞬时流速', value: 2},\r\n            {name: '正累计量', value: 3},\r\n            {name: '设备编号', value: 4},\r\n            {name: '净积累量', value: 5},\r\n            {name: '负累计量', value: 6},\r\n            {name: '今正累量', value: 7},\r\n            {name: '流截面积', value: 8},\r\n            {name: '模块状态', value: 9},\r\n            // {name: '测量时间', value: 10},\r\n        ],\r\n    })\r\n\r\n    function getQuerryValue(connect) {\r\n        let parameter; // parameter\r\n        let value_a; // value\r\n        let relationship; // relationship\r\n        let logicOption;\r\n        let selectArr = demo1.getValue();\r\n\r\n        parameter = selectArr[0].value;\r\n        logicOption = layui.jquery('#logic').find('option:selected').val();\r\n        value_a = layui.jquery(\"#data-deviceHistory\").val();\r\n\r\n        if (connect != \"undefined\") {\r\n            relationship = connect;\r\n        } else {\r\n            relationship = \"0\";\r\n        }\r\n        statement[clickCount++] = parameter + \"|\" + logicOption + \"|\" + value_a + \"|\" + relationship;\r\n\r\n        // console.log(parameter + \",\" + relationship + \",\" + value_a);\r\n        // document.getElementById('demo2-value').innerHTML = `\\ndemo2.getValue()\\n\\n` + JSON.stringify(selectArr, null, 2);\r\n\r\n    }\r\n</script>\r\n\r\n<script type=\"application/javascript\">\r\n\r\n    var flows=\"\";\r\n\r\n    function child(data, indexNum) {\r\n        let opt = data.event; // 操作类型\r\n        if (opt == \"device-click\") {\r\n            flows=data.flow;\r\n            reloadTable(data.deviceId);\r\n        }\r\n    }\r\n</script>\r\n\r\n<script type=\"application/javascript\">\r\n    function reloadTable(deviceId) {\r\n\r\n        var datat = {\"deviceId\": deviceId};\r\n\r\n        layui.use(['form', 'table', 'laydate'], function () {\r\n            var $ = layui.jquery,\r\n                form = layui.form,\r\n                table = layui.table,\r\n                laydate = layui.laydate,\r\n                layuimini = layui.layuimini;\r\n\r\n            table.render({\r\n                elem: '#tbl-device-history',\r\n                url: baseUrl + 'deviceHistory/getHistoryById',\r\n                headers:Authorization,\r\n                method: 'post',\r\n                contentType: \"application/json;charset=UTF-8\",\r\n                dataType: 'json',\r\n                toolbar: '#toolbarDemo',\r\n                defaultToolbar: ['filter', 'exports', 'print', {\r\n                    title: '提示',\r\n                    layEvent: 'LAYTABLE_TIPS',\r\n                    icon: 'layui-icon-tips'\r\n                }],\r\n                cols: [[\r\n                    // {type: \"checkbox\", width: 50, fixed: \"left\"},\r\n\r\n                    {field: 'instantFlow', width: 135, title: '瞬时流量', sort: true},\r\n                    {field: 'instantFlowRate', title: '瞬时流速', width: 135, sort: true},\r\n                    {field: 'positiveAccumulatedFlow', width: 135, title: '正累计流量', sort: true,templet: \"#positiveAccumulatedFlow\"},\r\n                    {field: 'negativeAccumulatedFlow', width: 135, title: '负累计流量', sort: true},\r\n                    {field: 'accumulatedFlow', width: 135, title: '净积累流量', sort: true},\r\n                    {field: 'measureDate', width: 190, title: '测量时间', sort: true},\r\n                    {field: 'todayPositiveAccumulatedFlow', width: 135, title: '今日正积累流量', sort: true},\r\n                    {field: 'flowArea', width: 135, title: '流体截面积', sort: true},\r\n                    {field: 'deviceId', width: 135, title: '设备编号', sort: true},\r\n                    {field: 'iotModuleId', width: 135, title: 'IOT模块', templet: \"#isIot1\"},\r\n                    {field: 'iotErrorCode', width: 135, title: '状态代码', templet: \"#iotErrorCode\"},\r\n                    {field: 'deviceId', width: 135, title: '设备编号'},\r\n                    {field: 'id', width: 80, event: 'tstd', title: '序号', sort: true},\r\n                    {title: '操作', width: 150, templet: '#currentTableBar', fixed: \"right\", align: \"center\"}\r\n                ]],\r\n                limits: [10, 15, 20, 25, 50, 100],\r\n                limit: 10,\r\n                page: true,\r\n                where: datat\r\n            });\r\n\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: baseUrl + \"deviceHistory/queryDevice\",\r\n                contentType: \"application/json\",\r\n                headers: auth,\r\n                dataType: \"json\",\r\n                data: JSON.stringify(datat),\r\n                success: function (data) {\r\n                    echarsData(data, datat,false);\r\n                }\r\n            });\r\n\r\n            /* let rangeData = \"\";\r\n             //日期时间范围选择\r\n             laydate.render({\r\n                 elem: '#data-deviceHistory'\r\n                 , type: 'datetime'\r\n                 , range: true //或 range: '~' 来自定义分割字符\r\n                 , change: function (dates) {\r\n                     rangeData = dates;\r\n                 }\r\n             });*/\r\n\r\n            // 监听搜索操作\r\n            form.on('submit(data-search-btn)', function (data) {\r\n\r\n                /*var result = JSON.stringify(data.field);\r\n                 layer.alert(result, {\r\n                 title: '最终的搜索信息'\r\n             });*/\r\n\r\n                clickCount = 0;\r\n                getQuerryValue(\"undefined\");\r\n\r\n                var obj = {\"queryData\": statement.toString()};\r\n\r\n                //执行搜索重载\r\n                table.reload('tbl-device-history', {\r\n                    url: baseUrl + 'deviceHistory/query',\r\n                    headers:Authorization,\r\n                    method: 'post',\r\n                    contentType: \"application/json;charset=UTF-8\",\r\n                    dataType: 'json',\r\n                    page: 1,\r\n                    limit: 10\r\n                    , where: obj,\r\n                    done: function(res, curr, count){\r\n\r\n                        searchReload(res);\r\n\r\n                        // console.log(res);\r\n                        //得到当前页码\r\n                        // console.log(curr);\r\n                        //得到数据总量\r\n                        // console.log(count);\r\n                    }\r\n                }, 'data');\r\n\r\n                return false;\r\n            });\r\n\r\n            function searchReload(data) {\r\n                oldData=data.data;\r\n                newData =[oldData.length];\r\n\r\n                for (var i=0;i<oldData.length;i++) {\r\n                    newData[i]=oldData[i].instantFlow+\"|\"+oldData[i].measureDate+\"|\"+flows;\r\n                }\r\n                var obj={\"data\":newData};\r\n                echarsData(obj, datat,false);\r\n            }\r\n\r\n\r\n            table.on('tool(currentTableFilter)', function (obj) {\r\n                let editData = obj;\r\n                if (obj.event === 'edit') {\r\n                    var index = layer.open({\r\n                        title: '编辑用户',\r\n                        type: 2,\r\n                        shade: 0.2,\r\n                        maxmin: true,\r\n                        shadeClose: true,\r\n                        area: ['100%', '100%'],\r\n                        content: './manageDevice.html',\r\n                        success: function (layero, index) {\r\n                            var iframe = window['layui-layer-iframe' + index];\r\n                            iframe.child(editData, index);\r\n                        }\r\n                    });\r\n                    $(window).on(\"resize\", function () {\r\n                        layer.full(index);\r\n                    });\r\n                    return false;\r\n                } else if (obj.event === 'delete') {\r\n                    layer.confirm('请确保本条历史数据已备份,与之相关的所有数据将清除且不可恢复!是否继续?', function (index) {\r\n                        // let user=localStorage.getItem(\"user\");\r\n                        let desc=\"\";\r\n                        // if (user=='admin') {\r\n                        //     desc=prompt(\"请输入任务编号:\")\r\n                        // } else {\r\n                        desc=prompt(\"操作原因:\");\r\n                        // }\r\n                        if (desc!=null) {\r\n                            $.ajax({\r\n                                type: \"post\",\r\n                                url: baseUrl + \"device/del\",\r\n                                contentType: \"application/json\",\r\n                                headers: auth,\r\n                                dataType: \"json\",\r\n                                data: JSON.stringify({\"deviceId\": obj.data.deviceId, \"opt\": \"2\", \"desc\": desc,\"operatingData\":obj.data.id}),\r\n                                success: function (data) {\r\n                                    if (data.code == '200') {\r\n                                        alert(data.msg);\r\n                                        // obj.del();\r\n                                    }else {\r\n                                        alert(data.msg);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        layer.close(index);\r\n                    });\r\n\r\n                }\r\n            });\r\n        });\r\n    }\r\n</script>\r\n\r\n<!--<script type=\"text/html\" id=\"isIot1\">-->\r\n<!--    {{var=d.iotModuleId}}-->\r\n<!--</script>-->\r\n\r\n<script type=\"text/html\" id=\"positiveAccumulatedFlow\">\r\n    {{d.positiveAccumulatedFlow.toFixed(4) }}\r\n</script>\r\n\r\n<script type=\"text/html\" id=\"iotErrorCode\">\r\n\r\n    {{#  if(d.iotErrorCode == 'R'){ }}\r\n    <span style=\"color: #00FF00\">正常</span>\r\n    {{#  } else if(d.iotErrorCode == 'I') { }}\r\n    <span>无信号</span>\r\n    {{#  } else if(d.iotErrorCode == 'G') { }}\r\n    <span style=\"color: chocolate\">调试</span>\r\n    {{#  } else { }}\r\n    <!--    <span style=\"color: #e02e2e\">异常</span>-->\r\n    {{#  } }}\r\n\r\n</script>\r\n<script src=\"../../js/myJs/baoBiao.js\" charset=\"utf-8\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/resources/static/page/history/historyById.html b/../metertwo/src/main/resources/static/page/history/historyById.html
--- a/../metertwo/src/main/resources/static/page/history/historyById.html	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/resources/static/page/history/historyById.html	(date 1601189511206)
@@ -66,15 +66,15 @@
 
         <script type="text/html" id="toolbarDemo">
             <div class="layui-btn-container">
-                               <!-- <button class="layui-btn layui-btn-sm data-add-btn"> 添加历史</button>
-                                <button class="layui-btn layui-btn-sm layui-btn-danger data-delete-btn"> 删除历史</button>-->
+                <!-- <button class="layui-btn layui-btn-sm data-add-btn"> 添加历史</button>
+                 <button class="layui-btn layui-btn-sm layui-btn-danger data-delete-btn"> 删除历史</button>-->
             </div>
         </script>
 
         <table class="layui-hide" id="tbl-device-history" lay-filter="currentTableFilter"></table>
 
         <script type="text/html" id="currentTableBar">
-<!--            <a class="layui-btn layui-btn-xs data-count-edit" lay-event="edit">编辑</a>-->
+            <!--            <a class="layui-btn layui-btn-xs data-count-edit" lay-event="edit">编辑</a>-->
             <a class="layui-btn layui-btn-xs layui-btn-danger data-count-delete" lay-event="delete">删除</a>
         </script>
     </div>
@@ -151,12 +151,12 @@
 
 <script type="application/javascript">
 
-    var flows="";
+    var flows = "";
 
     function child(data, indexNum) {
         let opt = data.event; // 操作类型
         if (opt == "device-click") {
-            flows=data.flow;
+            flows = data.flow;
             reloadTable(data.deviceId);
         }
     }
@@ -177,7 +177,7 @@
             table.render({
                 elem: '#tbl-device-history',
                 url: baseUrl + 'deviceHistory/getHistoryById',
-                headers:Authorization,
+                headers: Authorization,
                 method: 'post',
                 contentType: "application/json;charset=UTF-8",
                 dataType: 'json',
@@ -190,16 +190,22 @@
                 cols: [[
                     // {type: "checkbox", width: 50, fixed: "left"},
 
-                    {field: 'instantFlow', width: 135, title: '瞬时流量', sort: true},
-                    {field: 'instantFlowRate', title: '瞬时流速', width: 135, sort: true},
-                    {field: 'positiveAccumulatedFlow', width: 135, title: '正累计流量', sort: true,templet: "#positiveAccumulatedFlow"},
+                    {field: 'instantFlow', width: 135, title: '瞬时流量', sort: true, templet: "#instantFlow"},
+                    {field: 'instantFlowRate', title: '瞬时流速', width: 135, sort: true, templet: "#instantFlowRate"},
+                    {
+                        field: 'positiveAccumulatedFlow',
+                        width: 135,
+                        title: '正累计流量',
+                        sort: true,
+                        templet: "#positiveAccumulatedFlow"
+                    },
                     {field: 'negativeAccumulatedFlow', width: 135, title: '负累计流量', sort: true},
                     {field: 'accumulatedFlow', width: 135, title: '净积累流量', sort: true},
                     {field: 'measureDate', width: 190, title: '测量时间', sort: true},
                     {field: 'todayPositiveAccumulatedFlow', width: 135, title: '今日正积累流量', sort: true},
                     {field: 'flowArea', width: 135, title: '流体截面积', sort: true},
                     {field: 'deviceId', width: 135, title: '设备编号', sort: true},
-                    {field: 'iotModuleId', width: 135, title: 'IOT模块', templet: "#isIot1"},
+                    // {field: 'iotModuleId', width: 135, title: 'IOT模块', templet: "#isIot1"},
                     {field: 'iotErrorCode', width: 135, title: '状态代码', templet: "#iotErrorCode"},
                     {field: 'deviceId', width: 135, title: '设备编号'},
                     {field: 'id', width: 80, event: 'tstd', title: '序号', sort: true},
@@ -219,7 +225,7 @@
                 dataType: "json",
                 data: JSON.stringify(datat),
                 success: function (data) {
-                    echarsData(data, datat,false);
+                    echarsData(data, datat, false);
                 }
             });
 
@@ -250,14 +256,14 @@
                 //执行搜索重载
                 table.reload('tbl-device-history', {
                     url: baseUrl + 'deviceHistory/query',
-                    headers:Authorization,
+                    headers: Authorization,
                     method: 'post',
                     contentType: "application/json;charset=UTF-8",
                     dataType: 'json',
                     page: 1,
                     limit: 10
                     , where: obj,
-                    done: function(res, curr, count){
+                    done: function (res, curr, count) {
 
                         searchReload(res);
 
@@ -273,14 +279,14 @@
             });
 
             function searchReload(data) {
-                oldData=data.data;
-                newData =[oldData.length];
+                oldData = data.data;
+                newData = [oldData.length];
 
-                for (var i=0;i<oldData.length;i++) {
-                    newData[i]=oldData[i].instantFlow+"|"+oldData[i].measureDate+"|"+flows;
+                for (var i = 0; i < oldData.length; i++) {
+                    newData[i] = oldData[i].instantFlow + "|" + oldData[i].measureDate + "|" + flows;
                 }
-                var obj={"data":newData};
-                echarsData(obj, datat,false);
+                var obj = {"data": newData};
+                echarsData(obj, datat, false);
             }
 
 
@@ -307,25 +313,30 @@
                 } else if (obj.event === 'delete') {
                     layer.confirm('请确保本条历史数据已备份,与之相关的所有数据将清除且不可恢复!是否继续?', function (index) {
                         // let user=localStorage.getItem("user");
-                        let desc="";
+                        let desc = "";
                         // if (user=='admin') {
                         //     desc=prompt("请输入任务编号:")
                         // } else {
-                        desc=prompt("操作原因:");
+                        desc = prompt("操作原因:");
                         // }
-                        if (desc!=null) {
+                        if (desc != null) {
                             $.ajax({
                                 type: "post",
                                 url: baseUrl + "device/del",
                                 contentType: "application/json",
                                 headers: auth,
                                 dataType: "json",
-                                data: JSON.stringify({"deviceId": obj.data.deviceId, "opt": "2", "desc": desc,"operatingData":obj.data.id}),
+                                data: JSON.stringify({
+                                    "deviceId": obj.data.deviceId,
+                                    "opt": "2",
+                                    "desc": desc,
+                                    "operatingData": obj.data.id
+                                }),
                                 success: function (data) {
                                     if (data.code == '200') {
                                         alert(data.msg);
                                         // obj.del();
-                                    }else {
+                                    } else {
                                         alert(data.msg);
                                     }
                                 }
@@ -347,6 +358,12 @@
 <script type="text/html" id="positiveAccumulatedFlow">
     {{d.positiveAccumulatedFlow.toFixed(4) }}
 </script>
+<script type="text/html" id="instantFlow">
+    {{d.instantFlow.toFixed(4) }}
+</script>
+<script type="text/html" id="instantFlowRate">
+    {{d.instantFlowRate.toFixed(4) }}
+</script>
 
 <script type="text/html" id="iotErrorCode">
 
Index: ../metertwo/src/main/java/com/jw/entity/iot4g/ThreadStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jw.entity.iot4g;\n\nimport com.jw.entity.SysUser;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.net.Socket;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\n\n/**\n * Global Access Point\n */\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class ThreadStatus {\n\n    String isSendMessage = \"0\"; // 是否发送数据\n    boolean serverRun = false; // 服务器运行状态\n    String iotDeviceStatus = \"1\"; // 默认下线\n    int dbId = 0;\n    public volatile static byte[] msg;\n    public volatile static String isSend = \"0\";\n    String iotModuleId;\n\n    public ConcurrentHashMap<Socket,String> aliveList=new ConcurrentHashMap<Socket, String>(); // 存放moduleID和socket\n\n    private volatile static ThreadStatus instance;\n\n    public static ThreadStatus getInstance() {\n        if (instance == null) {\n            synchronized (ThreadStatus.class) {\n                if (instance == null) {\n                    instance = new ThreadStatus();\n                }\n            }\n        }\n        return instance;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../metertwo/src/main/java/com/jw/entity/iot4g/ThreadStatus.java b/../metertwo/src/main/java/com/jw/entity/iot4g/ThreadStatus.java
--- a/../metertwo/src/main/java/com/jw/entity/iot4g/ThreadStatus.java	(revision ed692c89a522b578b8eeea33bf6c7eb957fc553a)
+++ b/../metertwo/src/main/java/com/jw/entity/iot4g/ThreadStatus.java	(date 1606544418972)
@@ -1,12 +1,13 @@
 package com.jw.entity.iot4g;
 
-import com.jw.entity.SysUser;
+import com.jw.util.HexConversion;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
 
 import java.net.Socket;
-import java.util.HashMap;
 import java.util.concurrent.ConcurrentHashMap;
 
 /**
@@ -25,6 +26,11 @@
     public volatile static String isSend = "0";
     String iotModuleId;
 
+    public static String dbUrl;
+    public static String dbUserName;
+    public static String dbPassword;
+    public static String dbDriver;
+
     public ConcurrentHashMap<Socket,String> aliveList=new ConcurrentHashMap<Socket, String>(); // 存放moduleID和socket
 
     private volatile static ThreadStatus instance;
